{
    "terraform_version": "0.15.0-rc2",
    "format_version": "0.1",
    "configuration": {
        "provider_config": {},
        "root_module": {
            "resources": [
                {
                    "address": "aws_iam_role.test",
                    "provider_config_key": "aws",
                    "raw_data": {
                        "FileName": "main.tf",
                        "StartLine": 5,
                        "EndLine": 22
                    }
                },
                {
                    "address": "aws_iam_role_policy_attachment.test-attach",
                    "provider_config_key": "aws",
                    "raw_data": {
                        "FileName": "main.tf",
                        "StartLine": 24,
                        "EndLine": 27
                    }
                },
                {
                    "address": "aws_internet_gateway.gw",
                    "provider_config_key": "aws",
                    "raw_data": {
                        "FileName": "main.tf",
                        "StartLine": 68,
                        "EndLine": 74
                    }
                },
                {
                    "address": "aws_route_table.public-rtb",
                    "provider_config_key": "aws",
                    "raw_data": {
                        "FileName": "main.tf",
                        "StartLine": 76,
                        "EndLine": 87
                    }
                },
                {
                    "address": "aws_sagemaker_notebook_instance.test",
                    "provider_config_key": "aws",
                    "raw_data": {
                        "FileName": "main.tf",
                        "StartLine": 29,
                        "EndLine": 36
                    }
                },
                {
                    "address": "aws_security_group.nondefault",
                    "provider_config_key": "aws",
                    "raw_data": {
                        "FileName": "main.tf",
                        "StartLine": 42,
                        "EndLine": 59
                    }
                },
                {
                    "address": "aws_subnet.nondefault",
                    "provider_config_key": "aws",
                    "raw_data": {
                        "FileName": "main.tf",
                        "StartLine": 61,
                        "EndLine": 65
                    }
                },
                {
                    "address": "aws_vpc.nondefault",
                    "provider_config_key": "aws",
                    "raw_data": {
                        "FileName": "main.tf",
                        "StartLine": 38,
                        "EndLine": 40
                    }
                },
                {
                    "address": "data.aws_iam_policy.AmazonSageMakerFullAccess",
                    "provider_config_key": "aws",
                    "raw_data": {
                        "FileName": "main.tf",
                        "StartLine": 1,
                        "EndLine": 3
                    }
                }
            ],
            "module_calls": {}
        }
    },
    "resource_changes": [
        {
            "address": "aws_iam_role.test",
            "type": "aws_iam_role",
            "name": "test",
            "mode": "managed",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "before": {
                    "arn": "arn:aws:iam::111111111111:role/test_sagemaker_role",
                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"sagemaker.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "create_date": "2021-06-16T16:37:40Z",
                    "id": "test_sagemaker_role",
                    "inline_policy": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "name": "test_sagemaker_role",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": {},
                    "tags_all": {},
                    "unique_id": "AROARVZ4AQRHTF6HB4UMD"
                },
                "after": {
                    "arn": "arn:aws:iam::111111111111:role/test_sagemaker_role",
                    "assume_role_policy": "{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n    {\n    \"Action\": \"sts:AssumeRole\",\n    \"Principal\": {\n        \"Service\": \"sagemaker.amazonaws.com\"\n    },\n    \"Effect\": \"Allow\",\n    \"Sid\": \"\"\n    }\n]\n}\n",
                    "create_date": "2021-06-16T16:37:40Z",
                    "id": "test_sagemaker_role",
                    "inline_policy": [],
                    "name": "test_sagemaker_role",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": {},
                    "tags_all": {},
                    "unique_id": "AROARVZ4AQRHTF6HB4UMD"
                },
                "after_unknown": {},
                "actions": [
                    "update"
                ]
            }
        },
        {
            "address": "aws_iam_role_policy_attachment.test-attach",
            "type": "aws_iam_role_policy_attachment",
            "name": "test-attach",
            "mode": "managed",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "before": {
                    "id": "test_sagemaker_role-20210616163743729700000001",
                    "policy_arn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                    "role": "test_sagemaker_role"
                },
                "after": {
                    "id": "test_sagemaker_role-20210616163743729700000001",
                    "policy_arn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                    "role": "test_sagemaker_role"
                },
                "after_unknown": {},
                "actions": [
                    "no-op"
                ]
            }
        },
        {
            "address": "aws_internet_gateway.gw",
            "type": "aws_internet_gateway",
            "name": "gw",
            "mode": "managed",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "before": {
                    "id": "igw-04120ce511fd81d2c",
                    "tags": {
                        "Name": "main"
                    },
                    "tags_all": {
                        "Name": "main"
                    },
                    "vpc_id": "vpc-032b1ea9601de3a7d"
                },
                "after": {
                    "id": "igw-04120ce511fd81d2c",
                    "tags": {
                        "Name": "main"
                    },
                    "tags_all": {
                        "Name": "main"
                    },
                    "vpc_id": "vpc-032b1ea9601de3a7d"
                },
                "after_unknown": {},
                "actions": [
                    "no-op"
                ]
            }
        },
        {
            "address": "aws_route_table.public-rtb",
            "type": "aws_route_table",
            "name": "public-rtb",
            "mode": "managed",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "before": {
                    "id": "rtb-0c2b79d679e7d2711",
                    "route": [
                        {
                            "carrier_gateway_id": "",
                            "cidr_block": "0.0.0.0/0",
                            "destination_prefix_list_id": "",
                            "egress_only_gateway_id": "",
                            "gateway_id": "igw-04120ce511fd81d2c",
                            "instance_id": "",
                            "ipv6_cidr_block": "",
                            "local_gateway_id": "",
                            "nat_gateway_id": "",
                            "network_interface_id": "",
                            "transit_gateway_id": "",
                            "vpc_endpoint_id": "",
                            "vpc_peering_connection_id": ""
                        }
                    ],
                    "tags": {
                        "Name": "public-rtb"
                    },
                    "tags_all": {
                        "Name": "public-rtb"
                    },
                    "vpc_id": "vpc-032b1ea9601de3a7d"
                },
                "after": {
                    "id": "rtb-0c2b79d679e7d2711",
                    "route": [
                        {
                            "carrier_gateway_id": null,
                            "cidr_block": "0.0.0.0/0",
                            "destination_prefix_list_id": null,
                            "egress_only_gateway_id": null,
                            "gateway_id": "igw-04120ce511fd81d2c",
                            "instance_id": null,
                            "ipv6_cidr_block": null,
                            "local_gateway_id": null,
                            "nat_gateway_id": null,
                            "network_interface_id": null,
                            "transit_gateway_id": null,
                            "vpc_endpoint_id": null,
                            "vpc_peering_connection_id": null
                        }
                    ],
                    "tags": {
                        "Name": "public-rtb"
                    },
                    "tags_all": {
                        "Name": "public-rtb"
                    },
                    "vpc_id": "vpc-032b1ea9601de3a7d"
                },
                "after_unknown": {},
                "actions": [
                    "update"
                ]
            }
        },
        {
            "address": "aws_sagemaker_notebook_instance.test",
            "type": "aws_sagemaker_notebook_instance",
            "name": "test",
            "mode": "managed",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "before": {
                    "arn": "arn:aws:sagemaker:us-east-1:111111111111:notebook-instance/my-notebook-instance",
                    "direct_internet_access": "Disabled",
                    "id": "my-notebook-instance",
                    "kms_key_id": "",
                    "name": "my-notebook-instance",
                    "tags": {},
                    "tags_all": {}
                },
                "after": {
                    "arn": "arn:aws:sagemaker:us-east-1:111111111111:notebook-instance/my-notebook-instance",
                    "direct_internet_access": "Disabled",
                    "id": "my-notebook-instance",
                    "kms_key_id": "",
                    "name": "my-notebook-instance",
                    "tags": {},
                    "tags_all": {}
                },
                "after_unknown": {},
                "actions": [
                    "no-op"
                ]
            }
        },
        {
            "address": "aws_security_group.nondefault",
            "type": "aws_security_group",
            "name": "nondefault",
            "mode": "managed",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "before": {
                    "description_hashcode": "94908bee6fc312d3863709f30c61473f5d1fa70d5beaca239d7f8bd7d66d0b6c2097a04a76449d6e3f38553fc074d3cda8cf674ffac97348a9fa6340fe158552",
                    "egress": [
                        {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description_hashcode": "",
                            "from_port": 80,
                            "protocol": "tcp",
                            "security_groups": [],
                            "to_port": 80
                        }
                    ],
                    "id": "sg-004c4f0acbab4be8f",
                    "ingress": [
                        {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description_hashcode": "",
                            "from_port": 80,
                            "protocol": "tcp",
                            "security_groups": [],
                            "to_port": 80
                        }
                    ],
                    "name": "terraform-20210616163749253100000002",
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": "vpc-032b1ea9601de3a7d"
                },
                "after": {
                    "description_hashcode": "94908bee6fc312d3863709f30c61473f5d1fa70d5beaca239d7f8bd7d66d0b6c2097a04a76449d6e3f38553fc074d3cda8cf674ffac97348a9fa6340fe158552",
                    "egress": [
                        {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description_hashcode": null,
                            "from_port": 80,
                            "protocol": "tcp",
                            "security_groups": null,
                            "to_port": 80
                        }
                    ],
                    "id": "sg-004c4f0acbab4be8f",
                    "ingress": [
                        {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description_hashcode": null,
                            "from_port": 80,
                            "protocol": "tcp",
                            "security_groups": null,
                            "to_port": 80
                        }
                    ],
                    "name": "terraform-20210616163749253100000002",
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": "vpc-032b1ea9601de3a7d"
                },
                "after_unknown": {},
                "actions": [
                    "update"
                ]
            }
        },
        {
            "address": "aws_subnet.nondefault",
            "type": "aws_subnet",
            "name": "nondefault",
            "mode": "managed",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "before": {
                    "availability_zone": "us-east-1a",
                    "cidr_block": "10.1.1.128/25",
                    "id": "subnet-0784beb986ce6b15d",
                    "map_public_ip_on_launch": false,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": "vpc-032b1ea9601de3a7d"
                },
                "after": {
                    "availability_zone": "us-east-1a",
                    "cidr_block": "10.1.1.128/25",
                    "id": "subnet-0784beb986ce6b15d",
                    "map_public_ip_on_launch": false,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": "vpc-032b1ea9601de3a7d"
                },
                "after_unknown": {},
                "actions": [
                    "no-op"
                ]
            }
        },
        {
            "address": "aws_vpc.nondefault",
            "type": "aws_vpc",
            "name": "nondefault",
            "mode": "managed",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "before": {
                    "assign_generated_ipv6_cidr_block": false,
                    "cidr_block": "10.1.1.0/24",
                    "default_route_table_id": "rtb-00384d5f3f72f985e",
                    "default_security_group_id": "sg-0f3598a6a9971e9b4",
                    "enable_dns_hostnames": false,
                    "enable_dns_support": true,
                    "id": "vpc-032b1ea9601de3a7d",
                    "ipv6_cidr_block": "",
                    "main_route_table_id": "rtb-00384d5f3f72f985e",
                    "tags": {},
                    "tags_all": {}
                },
                "after": {
                    "assign_generated_ipv6_cidr_block": false,
                    "cidr_block": "10.1.1.0/24",
                    "default_route_table_id": "rtb-00384d5f3f72f985e",
                    "default_security_group_id": "sg-0f3598a6a9971e9b4",
                    "enable_dns_hostnames": false,
                    "enable_dns_support": true,
                    "id": "vpc-032b1ea9601de3a7d",
                    "ipv6_cidr_block": "",
                    "main_route_table_id": "rtb-00384d5f3f72f985e",
                    "tags": {},
                    "tags_all": {}
                },
                "after_unknown": {},
                "actions": [
                    "no-op"
                ]
            }
        },
        {
            "address": "data.aws_iam_policy.AmazonSageMakerFullAccess",
            "type": "aws_iam_policy",
            "name": "AmazonSageMakerFullAccess",
            "mode": "data",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "before": {
                    "arn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                    "id": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                    "name": "AmazonSageMakerFullAccess",
                    "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"sagemaker:*\"\n            ],\n            \"NotResource\": [\n                \"arn:aws:sagemaker:*:*:domain/*\",\n                \"arn:aws:sagemaker:*:*:user-profile/*\",\n                \"arn:aws:sagemaker:*:*:app/*\",\n                \"arn:aws:sagemaker:*:*:flow-definition/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"sagemaker:CreatePresignedDomainUrl\",\n                \"sagemaker:DescribeDomain\",\n                \"sagemaker:ListDomains\",\n                \"sagemaker:DescribeUserProfile\",\n                \"sagemaker:ListUserProfiles\",\n                \"sagemaker:*App\",\n                \"sagemaker:ListApps\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"sagemaker:*\",\n            \"Resource\": [\n                \"arn:aws:sagemaker:*:*:flow-definition/*\"\n            ],\n            \"Condition\": {\n                \"StringEqualsIfExists\": {\n                    \"sagemaker:WorkteamType\": [\n                        \"private-crowd\",\n                        \"vendor-crowd\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"application-autoscaling:DeleteScalingPolicy\",\n                \"application-autoscaling:DeleteScheduledAction\",\n                \"application-autoscaling:DeregisterScalableTarget\",\n                \"application-autoscaling:DescribeScalableTargets\",\n                \"application-autoscaling:DescribeScalingActivities\",\n                \"application-autoscaling:DescribeScalingPolicies\",\n                \"application-autoscaling:DescribeScheduledActions\",\n                \"application-autoscaling:PutScalingPolicy\",\n                \"application-autoscaling:PutScheduledAction\",\n                \"application-autoscaling:RegisterScalableTarget\",\n                \"aws-marketplace:ViewSubscriptions\",\n                \"cloudformation:GetTemplateSummary\",\n                \"cloudwatch:DeleteAlarms\",\n                \"cloudwatch:DescribeAlarms\",\n                \"cloudwatch:GetMetricData\",\n                \"cloudwatch:GetMetricStatistics\",\n                \"cloudwatch:ListMetrics\",\n                \"cloudwatch:PutMetricAlarm\",\n                \"cloudwatch:PutMetricData\",\n                \"codecommit:BatchGetRepositories\",\n                \"codecommit:CreateRepository\",\n                \"codecommit:GetRepository\",\n                \"codecommit:List*\",\n                \"cognito-idp:AdminAddUserToGroup\",\n                \"cognito-idp:AdminCreateUser\",\n                \"cognito-idp:AdminDeleteUser\",\n                \"cognito-idp:AdminDisableUser\",\n                \"cognito-idp:AdminEnableUser\",\n                \"cognito-idp:AdminRemoveUserFromGroup\",\n                \"cognito-idp:CreateGroup\",\n                \"cognito-idp:CreateUserPool\",\n                \"cognito-idp:CreateUserPoolClient\",\n                \"cognito-idp:CreateUserPoolDomain\",\n                \"cognito-idp:DescribeUserPool\",\n                \"cognito-idp:DescribeUserPoolClient\",\n                \"cognito-idp:List*\",\n                \"cognito-idp:UpdateUserPool\",\n                \"cognito-idp:UpdateUserPoolClient\",\n                \"ec2:CreateNetworkInterface\",\n                \"ec2:CreateNetworkInterfacePermission\",\n                \"ec2:CreateVpcEndpoint\",\n                \"ec2:DeleteNetworkInterface\",\n                \"ec2:DeleteNetworkInterfacePermission\",\n                \"ec2:DescribeDhcpOptions\",\n                \"ec2:DescribeNetworkInterfaces\",\n                \"ec2:DescribeRouteTables\",\n                \"ec2:DescribeSecurityGroups\",\n                \"ec2:DescribeSubnets\",\n                \"ec2:DescribeVpcEndpoints\",\n                \"ec2:DescribeVpcs\",\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:BatchGetImage\",\n                \"ecr:CreateRepository\",\n                \"ecr:Describe*\",\n                \"ecr:GetAuthorizationToken\",\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:StartImageScan\",\n                \"elastic-inference:Connect\",\n                \"elasticfilesystem:DescribeFileSystems\",\n                \"elasticfilesystem:DescribeMountTargets\",\n                \"fsx:DescribeFileSystems\",\n                \"glue:CreateJob\",\n                \"glue:DeleteJob\",\n                \"glue:GetJob*\",\n                \"glue:GetTable*\",\n                \"glue:GetWorkflowRun\",\n                \"glue:ResetJobBookmark\",\n                \"glue:StartJobRun\",\n                \"glue:StartWorkflowRun\",\n                \"glue:UpdateJob\",\n                \"groundtruthlabeling:*\",\n                \"iam:ListRoles\",\n                \"kms:DescribeKey\",\n                \"kms:ListAliases\",\n                \"lambda:ListFunctions\",\n                \"logs:CreateLogDelivery\",\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:DeleteLogDelivery\",\n                \"logs:Describe*\",\n                \"logs:GetLogDelivery\",\n                \"logs:GetLogEvents\",\n                \"logs:ListLogDeliveries\",\n                \"logs:PutLogEvents\",\n                \"logs:PutResourcePolicy\",\n                \"logs:UpdateLogDelivery\",\n                \"robomaker:CreateSimulationApplication\",\n                \"robomaker:DescribeSimulationApplication\",\n                \"robomaker:DeleteSimulationApplication\",\n                \"robomaker:CreateSimulationJob\",\n                \"robomaker:DescribeSimulationJob\",\n                \"robomaker:CancelSimulationJob\",\n                \"secretsmanager:ListSecrets\",\n                \"servicecatalog:Describe*\",\n                \"servicecatalog:List*\",\n                \"servicecatalog:ScanProvisionedProducts\",\n                \"servicecatalog:SearchProducts\",\n                \"servicecatalog:SearchProvisionedProducts\",\n                \"sns:ListTopics\",\n                \"tag:GetResources\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ecr:SetRepositoryPolicy\",\n                \"ecr:CompleteLayerUpload\",\n                \"ecr:BatchDeleteImage\",\n                \"ecr:UploadLayerPart\",\n                \"ecr:DeleteRepositoryPolicy\",\n                \"ecr:InitiateLayerUpload\",\n                \"ecr:DeleteRepository\",\n                \"ecr:PutImage\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ecr:*:*:repository/*sagemaker*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"codecommit:GitPull\",\n                \"codecommit:GitPush\"\n            ],\n            \"Resource\": [\n                \"arn:aws:codecommit:*:*:*sagemaker*\",\n                \"arn:aws:codecommit:*:*:*SageMaker*\",\n                \"arn:aws:codecommit:*:*:*Sagemaker*\"\n            ]\n        },\n        {\n            \"Action\": [\n                \"codebuild:BatchGetBuilds\",\n                \"codebuild:StartBuild\"\n            ],\n            \"Resource\": [\n                \"arn:aws:codebuild:*:*:project/sagemaker*\",\n                \"arn:aws:codebuild:*:*:build/*\"\n            ],\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Action\": [\n                \"states:DescribeExecution\",\n                \"states:GetExecutionHistory\",\n                \"states:StartExecution\",\n                \"states:StopExecution\",\n                \"states:UpdateStateMachine\"\n            ],\n            \"Resource\": [\n                \"arn:aws:states:*:*:statemachine:*sagemaker*\",\n                \"arn:aws:states:*:*:execution:*sagemaker*:*\"\n            ],\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"secretsmanager:DescribeSecret\",\n                \"secretsmanager:GetSecretValue\",\n                \"secretsmanager:CreateSecret\"\n            ],\n            \"Resource\": [\n                \"arn:aws:secretsmanager:*:*:secret:AmazonSageMaker-*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"secretsmanager:DescribeSecret\",\n                \"secretsmanager:GetSecretValue\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"secretsmanager:ResourceTag/SageMaker\": \"true\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"servicecatalog:ProvisionProduct\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"servicecatalog:TerminateProvisionedProduct\",\n                \"servicecatalog:UpdateProvisionedProduct\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"servicecatalog:userLevel\": \"self\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\",\n                \"s3:PutObject\",\n                \"s3:DeleteObject\",\n                \"s3:AbortMultipartUpload\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::*SageMaker*\",\n                \"arn:aws:s3:::*Sagemaker*\",\n                \"arn:aws:s3:::*sagemaker*\",\n                \"arn:aws:s3:::*aws-glue*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEqualsIgnoreCase\": {\n                    \"s3:ExistingObjectTag/SageMaker\": \"true\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"s3:ExistingObjectTag/servicecatalog:provisioning\": \"true\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:CreateBucket\",\n                \"s3:GetBucketLocation\",\n                \"s3:ListBucket\",\n                \"s3:ListAllMyBuckets\",\n                \"s3:GetBucketCors\",\n                \"s3:PutBucketCors\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetBucketAcl\",\n                \"s3:PutObjectAcl\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::*SageMaker*\",\n                \"arn:aws:s3:::*Sagemaker*\",\n                \"arn:aws:s3:::*sagemaker*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"lambda:InvokeFunction\"\n            ],\n            \"Resource\": [\n                \"arn:aws:lambda:*:*:function:*SageMaker*\",\n                \"arn:aws:lambda:*:*:function:*sagemaker*\",\n                \"arn:aws:lambda:*:*:function:*Sagemaker*\",\n                \"arn:aws:lambda:*:*:function:*LabelingFunction*\"\n            ]\n        },\n        {\n            \"Action\": \"iam:CreateServiceLinkedRole\",\n            \"Effect\": \"Allow\",\n            \"Resource\": \"arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint\",\n            \"Condition\": {\n                \"StringLike\": {\n                    \"iam:AWSServiceName\": \"sagemaker.application-autoscaling.amazonaws.com\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"iam:CreateServiceLinkedRole\",\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"iam:AWSServiceName\": \"robomaker.amazonaws.com\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"sns:Subscribe\",\n                \"sns:CreateTopic\"\n            ],\n            \"Resource\": [\n                \"arn:aws:sns:*:*:*SageMaker*\",\n                \"arn:aws:sns:*:*:*Sagemaker*\",\n                \"arn:aws:sns:*:*:*sagemaker*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:PassRole\"\n            ],\n            \"Resource\": \"arn:aws:iam::*:role/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"iam:PassedToService\": [\n                        \"sagemaker.amazonaws.com\",\n                        \"glue.amazonaws.com\",\n                        \"robomaker.amazonaws.com\",\n                        \"states.amazonaws.com\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"athena:ListDataCatalogs\",\n                \"athena:ListDatabases\",\n                \"athena:ListTableMetadata\",\n                \"athena:GetQueryExecution\",\n                \"athena:GetQueryResults\",\n                \"athena:StartQueryExecution\",\n                \"athena:StopQueryExecution\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"glue:CreateTable\"\n            ],\n            \"Resource\": [\n                \"arn:aws:glue:*:*:table/*/sagemaker_tmp_*\",\n                \"arn:aws:glue:*:*:table/sagemaker_featurestore/*\",\n                \"arn:aws:glue:*:*:catalog\",\n                \"arn:aws:glue:*:*:database/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"glue:DeleteTable\"\n            ],\n            \"Resource\": [\n                \"arn:aws:glue:*:*:table/*/sagemaker_tmp_*\",\n                \"arn:aws:glue:*:*:catalog\",\n                \"arn:aws:glue:*:*:database/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"glue:GetDatabases\",\n                \"glue:GetTable\",\n                \"glue:GetTables\"\n            ],\n            \"Resource\": [\n                \"arn:aws:glue:*:*:table/*\",\n                \"arn:aws:glue:*:*:catalog\",\n                \"arn:aws:glue:*:*:database/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"glue:CreateDatabase\",\n                \"glue:GetDatabase\"\n            ],\n            \"Resource\": [\n                \"arn:aws:glue:*:*:catalog\",\n                \"arn:aws:glue:*:*:database/sagemaker_featurestore\",\n                \"arn:aws:glue:*:*:database/sagemaker_processing\",\n                \"arn:aws:glue:*:*:database/default\",\n                \"arn:aws:glue:*:*:database/sagemaker_data_wrangler\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"redshift-data:ExecuteStatement\",\n                \"redshift-data:DescribeStatement\",\n                \"redshift-data:CancelStatement\",\n                \"redshift-data:GetStatementResult\",\n                \"redshift-data:ListSchemas\",\n                \"redshift-data:ListTables\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"redshift:GetClusterCredentials\"\n            ],\n            \"Resource\": [\n                \"arn:aws:redshift:*:*:dbuser:*/sagemaker_access*\",\n                \"arn:aws:redshift:*:*:dbname:*\"\n            ]\n        }\n    ]\n}",
                    "policy_id": "ANPAJZ5IWYMXO5QDB4QOG",
                    "tags": {}
                },
                "after": {
                    "arn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                    "id": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                    "name": "AmazonSageMakerFullAccess",
                    "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"sagemaker:*\"\n            ],\n            \"NotResource\": [\n                \"arn:aws:sagemaker:*:*:domain/*\",\n                \"arn:aws:sagemaker:*:*:user-profile/*\",\n                \"arn:aws:sagemaker:*:*:app/*\",\n                \"arn:aws:sagemaker:*:*:flow-definition/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"sagemaker:CreatePresignedDomainUrl\",\n                \"sagemaker:DescribeDomain\",\n                \"sagemaker:ListDomains\",\n                \"sagemaker:DescribeUserProfile\",\n                \"sagemaker:ListUserProfiles\",\n                \"sagemaker:*App\",\n                \"sagemaker:ListApps\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"sagemaker:*\",\n            \"Resource\": [\n                \"arn:aws:sagemaker:*:*:flow-definition/*\"\n            ],\n            \"Condition\": {\n                \"StringEqualsIfExists\": {\n                    \"sagemaker:WorkteamType\": [\n                        \"private-crowd\",\n                        \"vendor-crowd\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"application-autoscaling:DeleteScalingPolicy\",\n                \"application-autoscaling:DeleteScheduledAction\",\n                \"application-autoscaling:DeregisterScalableTarget\",\n                \"application-autoscaling:DescribeScalableTargets\",\n                \"application-autoscaling:DescribeScalingActivities\",\n                \"application-autoscaling:DescribeScalingPolicies\",\n                \"application-autoscaling:DescribeScheduledActions\",\n                \"application-autoscaling:PutScalingPolicy\",\n                \"application-autoscaling:PutScheduledAction\",\n                \"application-autoscaling:RegisterScalableTarget\",\n                \"aws-marketplace:ViewSubscriptions\",\n                \"cloudformation:GetTemplateSummary\",\n                \"cloudwatch:DeleteAlarms\",\n                \"cloudwatch:DescribeAlarms\",\n                \"cloudwatch:GetMetricData\",\n                \"cloudwatch:GetMetricStatistics\",\n                \"cloudwatch:ListMetrics\",\n                \"cloudwatch:PutMetricAlarm\",\n                \"cloudwatch:PutMetricData\",\n                \"codecommit:BatchGetRepositories\",\n                \"codecommit:CreateRepository\",\n                \"codecommit:GetRepository\",\n                \"codecommit:List*\",\n                \"cognito-idp:AdminAddUserToGroup\",\n                \"cognito-idp:AdminCreateUser\",\n                \"cognito-idp:AdminDeleteUser\",\n                \"cognito-idp:AdminDisableUser\",\n                \"cognito-idp:AdminEnableUser\",\n                \"cognito-idp:AdminRemoveUserFromGroup\",\n                \"cognito-idp:CreateGroup\",\n                \"cognito-idp:CreateUserPool\",\n                \"cognito-idp:CreateUserPoolClient\",\n                \"cognito-idp:CreateUserPoolDomain\",\n                \"cognito-idp:DescribeUserPool\",\n                \"cognito-idp:DescribeUserPoolClient\",\n                \"cognito-idp:List*\",\n                \"cognito-idp:UpdateUserPool\",\n                \"cognito-idp:UpdateUserPoolClient\",\n                \"ec2:CreateNetworkInterface\",\n                \"ec2:CreateNetworkInterfacePermission\",\n                \"ec2:CreateVpcEndpoint\",\n                \"ec2:DeleteNetworkInterface\",\n                \"ec2:DeleteNetworkInterfacePermission\",\n                \"ec2:DescribeDhcpOptions\",\n                \"ec2:DescribeNetworkInterfaces\",\n                \"ec2:DescribeRouteTables\",\n                \"ec2:DescribeSecurityGroups\",\n                \"ec2:DescribeSubnets\",\n                \"ec2:DescribeVpcEndpoints\",\n                \"ec2:DescribeVpcs\",\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:BatchGetImage\",\n                \"ecr:CreateRepository\",\n                \"ecr:Describe*\",\n                \"ecr:GetAuthorizationToken\",\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:StartImageScan\",\n                \"elastic-inference:Connect\",\n                \"elasticfilesystem:DescribeFileSystems\",\n                \"elasticfilesystem:DescribeMountTargets\",\n                \"fsx:DescribeFileSystems\",\n                \"glue:CreateJob\",\n                \"glue:DeleteJob\",\n                \"glue:GetJob*\",\n                \"glue:GetTable*\",\n                \"glue:GetWorkflowRun\",\n                \"glue:ResetJobBookmark\",\n                \"glue:StartJobRun\",\n                \"glue:StartWorkflowRun\",\n                \"glue:UpdateJob\",\n                \"groundtruthlabeling:*\",\n                \"iam:ListRoles\",\n                \"kms:DescribeKey\",\n                \"kms:ListAliases\",\n                \"lambda:ListFunctions\",\n                \"logs:CreateLogDelivery\",\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:DeleteLogDelivery\",\n                \"logs:Describe*\",\n                \"logs:GetLogDelivery\",\n                \"logs:GetLogEvents\",\n                \"logs:ListLogDeliveries\",\n                \"logs:PutLogEvents\",\n                \"logs:PutResourcePolicy\",\n                \"logs:UpdateLogDelivery\",\n                \"robomaker:CreateSimulationApplication\",\n                \"robomaker:DescribeSimulationApplication\",\n                \"robomaker:DeleteSimulationApplication\",\n                \"robomaker:CreateSimulationJob\",\n                \"robomaker:DescribeSimulationJob\",\n                \"robomaker:CancelSimulationJob\",\n                \"secretsmanager:ListSecrets\",\n                \"servicecatalog:Describe*\",\n                \"servicecatalog:List*\",\n                \"servicecatalog:ScanProvisionedProducts\",\n                \"servicecatalog:SearchProducts\",\n                \"servicecatalog:SearchProvisionedProducts\",\n                \"sns:ListTopics\",\n                \"tag:GetResources\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ecr:SetRepositoryPolicy\",\n                \"ecr:CompleteLayerUpload\",\n                \"ecr:BatchDeleteImage\",\n                \"ecr:UploadLayerPart\",\n                \"ecr:DeleteRepositoryPolicy\",\n                \"ecr:InitiateLayerUpload\",\n                \"ecr:DeleteRepository\",\n                \"ecr:PutImage\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ecr:*:*:repository/*sagemaker*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"codecommit:GitPull\",\n                \"codecommit:GitPush\"\n            ],\n            \"Resource\": [\n                \"arn:aws:codecommit:*:*:*sagemaker*\",\n                \"arn:aws:codecommit:*:*:*SageMaker*\",\n                \"arn:aws:codecommit:*:*:*Sagemaker*\"\n            ]\n        },\n        {\n            \"Action\": [\n                \"codebuild:BatchGetBuilds\",\n                \"codebuild:StartBuild\"\n            ],\n            \"Resource\": [\n                \"arn:aws:codebuild:*:*:project/sagemaker*\",\n                \"arn:aws:codebuild:*:*:build/*\"\n            ],\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Action\": [\n                \"states:DescribeExecution\",\n                \"states:GetExecutionHistory\",\n                \"states:StartExecution\",\n                \"states:StopExecution\",\n                \"states:UpdateStateMachine\"\n            ],\n            \"Resource\": [\n                \"arn:aws:states:*:*:statemachine:*sagemaker*\",\n                \"arn:aws:states:*:*:execution:*sagemaker*:*\"\n            ],\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"secretsmanager:DescribeSecret\",\n                \"secretsmanager:GetSecretValue\",\n                \"secretsmanager:CreateSecret\"\n            ],\n            \"Resource\": [\n                \"arn:aws:secretsmanager:*:*:secret:AmazonSageMaker-*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"secretsmanager:DescribeSecret\",\n                \"secretsmanager:GetSecretValue\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"secretsmanager:ResourceTag/SageMaker\": \"true\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"servicecatalog:ProvisionProduct\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"servicecatalog:TerminateProvisionedProduct\",\n                \"servicecatalog:UpdateProvisionedProduct\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"servicecatalog:userLevel\": \"self\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\",\n                \"s3:PutObject\",\n                \"s3:DeleteObject\",\n                \"s3:AbortMultipartUpload\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::*SageMaker*\",\n                \"arn:aws:s3:::*Sagemaker*\",\n                \"arn:aws:s3:::*sagemaker*\",\n                \"arn:aws:s3:::*aws-glue*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEqualsIgnoreCase\": {\n                    \"s3:ExistingObjectTag/SageMaker\": \"true\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"s3:ExistingObjectTag/servicecatalog:provisioning\": \"true\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:CreateBucket\",\n                \"s3:GetBucketLocation\",\n                \"s3:ListBucket\",\n                \"s3:ListAllMyBuckets\",\n                \"s3:GetBucketCors\",\n                \"s3:PutBucketCors\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetBucketAcl\",\n                \"s3:PutObjectAcl\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::*SageMaker*\",\n                \"arn:aws:s3:::*Sagemaker*\",\n                \"arn:aws:s3:::*sagemaker*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"lambda:InvokeFunction\"\n            ],\n            \"Resource\": [\n                \"arn:aws:lambda:*:*:function:*SageMaker*\",\n                \"arn:aws:lambda:*:*:function:*sagemaker*\",\n                \"arn:aws:lambda:*:*:function:*Sagemaker*\",\n                \"arn:aws:lambda:*:*:function:*LabelingFunction*\"\n            ]\n        },\n        {\n            \"Action\": \"iam:CreateServiceLinkedRole\",\n            \"Effect\": \"Allow\",\n            \"Resource\": \"arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint\",\n            \"Condition\": {\n                \"StringLike\": {\n                    \"iam:AWSServiceName\": \"sagemaker.application-autoscaling.amazonaws.com\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"iam:CreateServiceLinkedRole\",\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"iam:AWSServiceName\": \"robomaker.amazonaws.com\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"sns:Subscribe\",\n                \"sns:CreateTopic\"\n            ],\n            \"Resource\": [\n                \"arn:aws:sns:*:*:*SageMaker*\",\n                \"arn:aws:sns:*:*:*Sagemaker*\",\n                \"arn:aws:sns:*:*:*sagemaker*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:PassRole\"\n            ],\n            \"Resource\": \"arn:aws:iam::*:role/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"iam:PassedToService\": [\n                        \"sagemaker.amazonaws.com\",\n                        \"glue.amazonaws.com\",\n                        \"robomaker.amazonaws.com\",\n                        \"states.amazonaws.com\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"athena:ListDataCatalogs\",\n                \"athena:ListDatabases\",\n                \"athena:ListTableMetadata\",\n                \"athena:GetQueryExecution\",\n                \"athena:GetQueryResults\",\n                \"athena:StartQueryExecution\",\n                \"athena:StopQueryExecution\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"glue:CreateTable\"\n            ],\n            \"Resource\": [\n                \"arn:aws:glue:*:*:table/*/sagemaker_tmp_*\",\n                \"arn:aws:glue:*:*:table/sagemaker_featurestore/*\",\n                \"arn:aws:glue:*:*:catalog\",\n                \"arn:aws:glue:*:*:database/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"glue:DeleteTable\"\n            ],\n            \"Resource\": [\n                \"arn:aws:glue:*:*:table/*/sagemaker_tmp_*\",\n                \"arn:aws:glue:*:*:catalog\",\n                \"arn:aws:glue:*:*:database/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"glue:GetDatabases\",\n                \"glue:GetTable\",\n                \"glue:GetTables\"\n            ],\n            \"Resource\": [\n                \"arn:aws:glue:*:*:table/*\",\n                \"arn:aws:glue:*:*:catalog\",\n                \"arn:aws:glue:*:*:database/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"glue:CreateDatabase\",\n                \"glue:GetDatabase\"\n            ],\n            \"Resource\": [\n                \"arn:aws:glue:*:*:catalog\",\n                \"arn:aws:glue:*:*:database/sagemaker_featurestore\",\n                \"arn:aws:glue:*:*:database/sagemaker_processing\",\n                \"arn:aws:glue:*:*:database/default\",\n                \"arn:aws:glue:*:*:database/sagemaker_data_wrangler\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"redshift-data:ExecuteStatement\",\n                \"redshift-data:DescribeStatement\",\n                \"redshift-data:CancelStatement\",\n                \"redshift-data:GetStatementResult\",\n                \"redshift-data:ListSchemas\",\n                \"redshift-data:ListTables\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"redshift:GetClusterCredentials\"\n            ],\n            \"Resource\": [\n                \"arn:aws:redshift:*:*:dbuser:*/sagemaker_access*\",\n                \"arn:aws:redshift:*:*:dbname:*\"\n            ]\n        }\n    ]\n}",
                    "policy_id": "ANPAJZ5IWYMXO5QDB4QOG",
                    "tags": {}
                },
                "after_unknown": {},
                "actions": [
                    "read"
                ]
            }
        }
    ],
    "checkov_results": {},
    "cloud_provider": "amazon_web_services",
    "handshake_version": "59",
    "managed_resources_summary": {
        "total": 8,
        "created": 0,
        "deleted": 0,
        "updated": 3
    },
    "variables": {}
}