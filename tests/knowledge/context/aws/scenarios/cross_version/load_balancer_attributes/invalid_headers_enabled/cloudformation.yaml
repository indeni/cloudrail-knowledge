AWSTemplateFormatVersion: "2010-09-09"

Resources:

  Vpc1:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.10.0.0/16"

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs ]
      VpcId: !Ref Vpc1
      CidrBlock: "10.10.10.0/24"
      Tags:
        - Key: "Name"
          Value: "subnet1"

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs ]
      VpcId: !Ref Vpc1
      CidrBlock: "10.10.11.0/24"
      Tags:
        - Key: "Name"
          Value: "subnet2"

  Igw1:
    Type: AWS::EC2::InternetGateway

  Igw1Attachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc1
      InternetGatewayId: !Ref Igw1

  Rt1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc1

  Rt1DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref Rt1
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref Igw1

  Assoc1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref Rt1
      SubnetId: !Ref Subnet1

  Assoc2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref Rt1
      SubnetId: !Ref Subnet2

  TestLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "test-lb-drop"
      Scheme: "internal"
      Type: "application"
      LoadBalancerAttributes:
        - Key: routing.http.drop_invalid_header_fields.enabled
          Value: true
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - ec2:DescribeVpcs
            - ec2:DescribeSubnets
            Resource: "*"
