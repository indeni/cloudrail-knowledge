{
  "format_version": "0.1",
  "terraform_version": "0.15.0-rc2",
  "planned_values": {
    "outputs": {
      "arn": {
        "sensitive": false,
        "value": "arn:aws:s3:::111111111111-gitlab-runner-cache"
      },
      "azs": {
        "sensitive": false,
        "value": [
          "us-east-1a",
          "us-east-1b",
          "us-east-1c"
        ]
      },
      "bucket": {
        "sensitive": false,
        "value": "111111111111-gitlab-runner-cache"
      },
      "cgw_arns": {
        "sensitive": false,
        "value": []
      },
      "cgw_ids": {
        "sensitive": false,
        "value": []
      },
      "database_internet_gateway_route_id": {
        "sensitive": false,
        "value": ""
      },
      "database_ipv6_egress_route_id": {
        "sensitive": false,
        "value": ""
      },
      "database_nat_gateway_route_ids": {
        "sensitive": false,
        "value": []
      },
      "database_network_acl_arn": {
        "sensitive": false,
        "value": ""
      },
      "database_network_acl_id": {
        "sensitive": false,
        "value": ""
      },
      "database_route_table_association_ids": {
        "sensitive": false,
        "value": []
      },
      "database_route_table_ids": {
        "sensitive": false,
        "value": [
          "rtb-077a028aecff03dd5"
        ]
      },
      "database_subnet_arns": {
        "sensitive": false,
        "value": []
      },
      "database_subnet_group": {
        "sensitive": false,
        "value": ""
      },
      "database_subnet_group_name": {
        "sensitive": false,
        "value": ""
      },
      "database_subnets": {
        "sensitive": false,
        "value": []
      },
      "database_subnets_cidr_blocks": {
        "sensitive": false,
        "value": []
      },
      "database_subnets_ipv6_cidr_blocks": {
        "sensitive": false,
        "value": []
      },
      "default_network_acl_id": {
        "sensitive": false,
        "value": "acl-0ba2138552c6889f7"
      },
      "default_route_table_id": {
        "sensitive": false,
        "value": "rtb-0f634df56e151b775"
      },
      "default_security_group_id": {
        "sensitive": false,
        "value": "sg-0031bf33de1b414e1"
      },
      "default_vpc_arn": {
        "sensitive": false,
        "value": ""
      },
      "default_vpc_cidr_block": {
        "sensitive": false,
        "value": ""
      },
      "default_vpc_default_network_acl_id": {
        "sensitive": false,
        "value": ""
      },
      "default_vpc_default_route_table_id": {
        "sensitive": false,
        "value": ""
      },
      "default_vpc_default_security_group_id": {
        "sensitive": false,
        "value": ""
      },
      "default_vpc_enable_dns_hostnames": {
        "sensitive": false,
        "value": ""
      },
      "default_vpc_enable_dns_support": {
        "sensitive": false,
        "value": ""
      },
      "default_vpc_id": {
        "sensitive": false,
        "value": ""
      },
      "default_vpc_instance_tenancy": {
        "sensitive": false,
        "value": ""
      },
      "default_vpc_main_route_table_id": {
        "sensitive": false,
        "value": ""
      },
      "egress_only_internet_gateway_id": {
        "sensitive": false,
        "value": ""
      },
      "elasticache_network_acl_arn": {
        "sensitive": false,
        "value": ""
      },
      "elasticache_network_acl_id": {
        "sensitive": false,
        "value": ""
      },
      "elasticache_route_table_association_ids": {
        "sensitive": false,
        "value": []
      },
      "elasticache_route_table_ids": {
        "sensitive": false,
        "value": [
          "rtb-077a028aecff03dd5"
        ]
      },
      "elasticache_subnet_arns": {
        "sensitive": false,
        "value": []
      },
      "elasticache_subnet_group": {
        "sensitive": false,
        "value": ""
      },
      "elasticache_subnet_group_name": {
        "sensitive": false,
        "value": ""
      },
      "elasticache_subnets": {
        "sensitive": false,
        "value": []
      },
      "elasticache_subnets_cidr_blocks": {
        "sensitive": false,
        "value": []
      },
      "elasticache_subnets_ipv6_cidr_blocks": {
        "sensitive": false,
        "value": []
      },
      "igw_arn": {
        "sensitive": false,
        "value": "arn:aws:ec2:us-east-1:111111111111:internet-gateway/igw-0fcc1183636e3b8d7"
      },
      "igw_id": {
        "sensitive": false,
        "value": "igw-0fcc1183636e3b8d7"
      },
      "intra_network_acl_arn": {
        "sensitive": false,
        "value": ""
      },
      "intra_network_acl_id": {
        "sensitive": false,
        "value": ""
      },
      "intra_route_table_association_ids": {
        "sensitive": false,
        "value": []
      },
      "intra_route_table_ids": {
        "sensitive": false,
        "value": []
      },
      "intra_subnet_arns": {
        "sensitive": false,
        "value": []
      },
      "intra_subnets": {
        "sensitive": false,
        "value": []
      },
      "intra_subnets_cidr_blocks": {
        "sensitive": false,
        "value": []
      },
      "intra_subnets_ipv6_cidr_blocks": {
        "sensitive": false,
        "value": []
      },
      "name": {
        "sensitive": false,
        "value": "my-vpc"
      },
      "nat_ids": {
        "sensitive": false,
        "value": [
          "eipalloc-0b021c244233f1d0d"
        ]
      },
      "nat_public_ips": {
        "sensitive": false,
        "value": [
          "34.203.54.123"
        ]
      },
      "natgw_ids": {
        "sensitive": false,
        "value": [
          "nat-09bbccb2477bb5c89"
        ]
      },
      "outpost_network_acl_arn": {
        "sensitive": false,
        "value": ""
      },
      "outpost_network_acl_id": {
        "sensitive": false,
        "value": ""
      },
      "outpost_subnet_arns": {
        "sensitive": false,
        "value": []
      },
      "outpost_subnets": {
        "sensitive": false,
        "value": []
      },
      "outpost_subnets_cidr_blocks": {
        "sensitive": false,
        "value": []
      },
      "outpost_subnets_ipv6_cidr_blocks": {
        "sensitive": false,
        "value": []
      },
      "policy_arn": {
        "sensitive": false,
        "value": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache"
      },
      "private_ipv6_egress_route_ids": {
        "sensitive": false,
        "value": []
      },
      "private_nat_gateway_route_ids": {
        "sensitive": false,
        "value": [
          "r-rtb-077a028aecff03dd51080289494"
        ]
      },
      "private_network_acl_arn": {
        "sensitive": false,
        "value": ""
      },
      "private_network_acl_id": {
        "sensitive": false,
        "value": ""
      },
      "private_route_table_association_ids": {
        "sensitive": false,
        "value": [
          "rtbassoc-099d719101045e997"
        ]
      },
      "private_route_table_ids": {
        "sensitive": false,
        "value": [
          "rtb-077a028aecff03dd5"
        ]
      },
      "private_subnet_arns": {
        "sensitive": false,
        "value": [
          "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-0b6949a41c3b71d3a"
        ]
      },
      "private_subnets": {
        "sensitive": false,
        "value": [
          "subnet-0b6949a41c3b71d3a"
        ]
      },
      "private_subnets_cidr_blocks": {
        "sensitive": false,
        "value": [
          "10.0.1.0/24"
        ]
      },
      "private_subnets_ipv6_cidr_blocks": {
        "sensitive": false,
        "value": [
          ""
        ]
      },
      "public_internet_gateway_ipv6_route_id": {
        "sensitive": false,
        "value": ""
      },
      "public_internet_gateway_route_id": {
        "sensitive": false,
        "value": "r-rtb-02bcb211549855a9a1080289494"
      },
      "public_network_acl_arn": {
        "sensitive": false,
        "value": ""
      },
      "public_network_acl_id": {
        "sensitive": false,
        "value": ""
      },
      "public_route_table_association_ids": {
        "sensitive": false,
        "value": [
          "rtbassoc-0f4c25ff6d9b293c1"
        ]
      },
      "public_route_table_ids": {
        "sensitive": false,
        "value": [
          "rtb-02bcb211549855a9a"
        ]
      },
      "public_subnet_arns": {
        "sensitive": false,
        "value": [
          "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-078845300b6d6c612"
        ]
      },
      "public_subnets": {
        "sensitive": false,
        "value": [
          "subnet-078845300b6d6c612"
        ]
      },
      "public_subnets_cidr_blocks": {
        "sensitive": false,
        "value": [
          "10.0.101.0/24"
        ]
      },
      "public_subnets_ipv6_cidr_blocks": {
        "sensitive": false,
        "value": [
          ""
        ]
      },
      "redshift_network_acl_arn": {
        "sensitive": false,
        "value": ""
      },
      "redshift_network_acl_id": {
        "sensitive": false,
        "value": ""
      },
      "redshift_public_route_table_association_ids": {
        "sensitive": false,
        "value": []
      },
      "redshift_route_table_association_ids": {
        "sensitive": false,
        "value": []
      },
      "redshift_route_table_ids": {
        "sensitive": false,
        "value": [
          "rtb-077a028aecff03dd5"
        ]
      },
      "redshift_subnet_arns": {
        "sensitive": false,
        "value": []
      },
      "redshift_subnet_group": {
        "sensitive": false,
        "value": ""
      },
      "redshift_subnets": {
        "sensitive": false,
        "value": []
      },
      "redshift_subnets_cidr_blocks": {
        "sensitive": false,
        "value": []
      },
      "redshift_subnets_ipv6_cidr_blocks": {
        "sensitive": false,
        "value": []
      },
      "runner_agent_role_arn": {
        "sensitive": false,
        "value": "arn:aws:iam::111111111111:role/spot-runners-instance-role"
      },
      "runner_agent_role_name": {
        "sensitive": false,
        "value": "spot-runners-instance-role"
      },
      "runner_agent_sg_id": {
        "sensitive": false,
        "value": "sg-04e61a7ee5a3569e2"
      },
      "runner_as_group_name": {
        "sensitive": false,
        "value": "docker-default20210629064414620600000006-asg"
      },
      "runner_cache_bucket_arn": {
        "sensitive": false,
        "value": "arn:aws:s3:::111111111111-gitlab-runner-cache"
      },
      "runner_cache_bucket_name": {
        "sensitive": false,
        "value": "111111111111-gitlab-runner-cache"
      },
      "runner_eip": {
        "sensitive": false,
        "value": ""
      },
      "runner_role_arn": {
        "sensitive": false,
        "value": "arn:aws:iam::111111111111:role/spot-runners-docker-machine-role"
      },
      "runner_role_name": {
        "sensitive": false,
        "value": "spot-runners-docker-machine-role"
      },
      "runner_sg_id": {
        "sensitive": false,
        "value": "sg-0f11947f51d7e014d"
      },
      "this_customer_gateway": {
        "sensitive": false,
        "value": {}
      },
      "vgw_arn": {
        "sensitive": false,
        "value": "arn:aws:ec2:us-east-1:111111111111:vpn-gateway/vgw-0b8ad47ad0fcdb5c6"
      },
      "vgw_id": {
        "sensitive": false,
        "value": "vgw-0b8ad47ad0fcdb5c6"
      },
      "vpc_arn": {
        "sensitive": false,
        "value": "arn:aws:ec2:us-east-1:111111111111:vpc/vpc-0b208e2e25d5474cf"
      },
      "vpc_cidr_block": {
        "sensitive": false,
        "value": "10.0.0.0/16"
      },
      "vpc_enable_dns_hostnames": {
        "sensitive": false,
        "value": false
      },
      "vpc_enable_dns_support": {
        "sensitive": false,
        "value": true
      },
      "vpc_flow_log_cloudwatch_iam_role_arn": {
        "sensitive": false,
        "value": ""
      },
      "vpc_flow_log_destination_arn": {
        "sensitive": false,
        "value": ""
      },
      "vpc_flow_log_destination_type": {
        "sensitive": false,
        "value": "cloud-watch-logs"
      },
      "vpc_flow_log_id": {
        "sensitive": false,
        "value": ""
      },
      "vpc_id": {
        "sensitive": false,
        "value": "vpc-0b208e2e25d5474cf"
      },
      "vpc_instance_tenancy": {
        "sensitive": false,
        "value": "default"
      },
      "vpc_ipv6_association_id": {
        "sensitive": false,
        "value": ""
      },
      "vpc_ipv6_cidr_block": {
        "sensitive": false,
        "value": ""
      },
      "vpc_main_route_table_id": {
        "sensitive": false,
        "value": "rtb-0f634df56e151b775"
      },
      "vpc_owner_id": {
        "sensitive": false,
        "value": "111111111111"
      },
      "vpc_secondary_cidr_blocks": {
        "sensitive": false,
        "value": []
      }
    },
    "root_module": {
      "resources": [
        {
          "address": "aws_key_pair.deployer",
          "mode": "managed",
          "type": "aws_key_pair",
          "name": "deployer",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "arn": "arn:aws:ec2:us-east-1:111111111111:key-pair/deployer-key",
            "fingerprint": "d7:ff:a6:63:18:64:9c:57:a1:ee:ca:a4:ad:c2:81:62",
            "id": "deployer-key",
            "key_name": "deployer-key",
            "key_name_prefix": null,
            "key_pair_id": "key-03c17909b58e76013",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 email@example.com",
            "tags": {},
            "tags_all": {}
          }
        }
      ],
      "child_modules": [
        {
          "resources": [
            {
              "address": "module.runner.aws_autoscaling_group.gitlab_runner_instance",
              "mode": "managed",
              "type": "aws_autoscaling_group",
              "name": "gitlab_runner_instance",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:autoscaling:us-east-1:111111111111:autoScalingGroup:d97b1893-8514-4ed5-8087-14b2b723b160:autoScalingGroupName/docker-default20210629064414620600000006-asg",
                "availability_zones": [
                  "us-east-1a"
                ],
                "capacity_rebalance": false,
                "default_cooldown": 300,
                "desired_capacity": 1,
                "enabled_metrics": [],
                "force_delete": false,
                "force_delete_warm_pool": false,
                "health_check_grace_period": 0,
                "health_check_type": "EC2",
                "id": "docker-default20210629064414620600000006-asg",
                "initial_lifecycle_hook": [],
                "instance_refresh": [],
                "launch_configuration": "docker-default20210629064414620600000006",
                "launch_template": [],
                "load_balancers": [],
                "max_instance_lifetime": 0,
                "max_size": 1,
                "metrics_granularity": "1Minute",
                "min_elb_capacity": null,
                "min_size": 1,
                "mixed_instances_policy": [],
                "name": "docker-default20210629064414620600000006-asg",
                "name_prefix": "",
                "placement_group": "",
                "protect_from_scale_in": false,
                "service_linked_role_arn": "arn:aws:iam::111111111111:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
                "suspended_processes": [],
                "tag": [],
                "tags": [
                  {
                    "key": "Environment",
                    "propagate_at_launch": "true",
                    "value": "spot-runners"
                  },
                  {
                    "key": "Name",
                    "propagate_at_launch": "true",
                    "value": "spot-runners"
                  }
                ],
                "target_group_arns": [],
                "termination_policies": [],
                "timeouts": {
                  "delete": "10m"
                },
                "vpc_zone_identifier": [
                  "subnet-0b6949a41c3b71d3a"
                ],
                "wait_for_capacity_timeout": "10m",
                "wait_for_elb_capacity": null,
                "warm_pool": []
              }
            },
            {
              "address": "module.runner.aws_cloudwatch_log_group.environment[0]",
              "mode": "managed",
              "type": "aws_cloudwatch_log_group",
              "name": "environment",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:logs:us-east-1:111111111111:log-group:spot-runners",
                "id": "spot-runners",
                "kms_key_id": "",
                "name": "spot-runners",
                "name_prefix": null,
                "retention_in_days": 0,
                "tags": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "tags_all": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                }
              }
            },
            {
              "address": "module.runner.aws_iam_instance_profile.docker_machine",
              "mode": "managed",
              "type": "aws_iam_instance_profile",
              "name": "docker_machine",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::111111111111:instance-profile/spot-runners-docker-machine-profile",
                "create_date": "2021-06-29T06:44:02Z",
                "id": "spot-runners-docker-machine-profile",
                "name": "spot-runners-docker-machine-profile",
                "name_prefix": null,
                "path": "/",
                "role": "spot-runners-docker-machine-role",
                "tags": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "tags_all": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "unique_id": "AIPARVZ4AQRH532CCQZIQ"
              }
            },
            {
              "address": "module.runner.aws_iam_instance_profile.instance",
              "mode": "managed",
              "type": "aws_iam_instance_profile",
              "name": "instance",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::111111111111:instance-profile/spot-runners-instance-profile",
                "create_date": "2021-06-29T06:44:02Z",
                "id": "spot-runners-instance-profile",
                "name": "spot-runners-instance-profile",
                "name_prefix": null,
                "path": "/",
                "role": "spot-runners-instance-role",
                "tags": {},
                "tags_all": {},
                "unique_id": "AIPARVZ4AQRH2MWITMIQ7"
              }
            },
            {
              "address": "module.runner.aws_iam_policy.instance_docker_machine_policy",
              "mode": "managed",
              "type": "aws_iam_policy",
              "name": "instance_docker_machine_policy",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
                "description": "Policy for docker machine.",
                "id": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
                "name": "spot-runners-docker-machine",
                "name_prefix": null,
                "path": "/",
                "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Action\": [\n          \"ec2:DescribeKeyPairs\",\n          \"ec2:TerminateInstances\",\n          \"ec2:StopInstances\",\n          \"ec2:StartInstances\",\n          \"ec2:RunInstances\",\n          \"ec2:RebootInstances\",\n          \"ec2:CreateKeyPair\",\n          \"ec2:DeleteKeyPair\",\n          \"ec2:ImportKeyPair\",\n          \"ec2:Describe*\",\n          \"ec2:CreateTags\",\n          \"ec2:RequestSpotInstances\",\n          \"ec2:CancelSpotInstanceRequests\",\n          \"ec2:DescribeSubnets\",\n          \"ec2:AssociateIamInstanceProfile\",\n          \"iam:PassRole\"\n        ],\n        \"Effect\": \"Allow\",\n        \"Resource\": \"*\"\n      }\n    ]\n  }\n",
                "policy_id": "ANPARVZ4AQRH33XGM5XIQ",
                "tags": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "tags_all": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                }
              }
            },
            {
              "address": "module.runner.aws_iam_policy.service_linked_role[0]",
              "mode": "managed",
              "type": "aws_iam_policy",
              "name": "service_linked_role",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
                "description": "Policy for creation of service linked roles.",
                "id": "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
                "name": "spot-runners-service_linked_role",
                "name_prefix": null,
                "path": "/",
                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"arn:aws:iam::*:role/aws-service-role/*\"\n    }\n  ]\n}\n",
                "policy_id": "ANPARVZ4AQRHZHJDFJYT6",
                "tags": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "tags_all": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                }
              }
            },
            {
              "address": "module.runner.aws_iam_policy.ssm[0]",
              "mode": "managed",
              "type": "aws_iam_policy",
              "name": "ssm",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::111111111111:policy/spot-runners-ssm",
                "description": "Policy for runner token param access via SSM",
                "id": "arn:aws:iam::111111111111:policy/spot-runners-ssm",
                "name": "spot-runners-ssm",
                "name_prefix": null,
                "path": "/",
                "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:PutParameter\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:GetParameters\"\n            ],\n            \"Resource\": \"arn:aws:ssm:*\"\n        }\n    ]\n}\n",
                "policy_id": "ANPARVZ4AQRH75RT5ISZI",
                "tags": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "tags_all": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                }
              }
            },
            {
              "address": "module.runner.aws_iam_role.docker_machine",
              "mode": "managed",
              "type": "aws_iam_role",
              "name": "docker_machine",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::111111111111:role/spot-runners-docker-machine-role",
                "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                "create_date": "2021-06-29T06:43:59Z",
                "description": "",
                "force_detach_policies": false,
                "id": "spot-runners-docker-machine-role",
                "inline_policy": [],
                "managed_policy_arns": [],
                "max_session_duration": 3600,
                "name": "spot-runners-docker-machine-role",
                "name_prefix": null,
                "path": "/",
                "permissions_boundary": null,
                "tags": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "tags_all": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "unique_id": "AROARVZ4AQRHS5T7HPNI7"
              }
            },
            {
              "address": "module.runner.aws_iam_role.instance",
              "mode": "managed",
              "type": "aws_iam_role",
              "name": "instance",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::111111111111:role/spot-runners-instance-role",
                "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
                "create_date": "2021-06-29T06:43:59Z",
                "description": "",
                "force_detach_policies": false,
                "id": "spot-runners-instance-role",
                "inline_policy": [],
                "managed_policy_arns": [
                  "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
                  "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
                  "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
                  "arn:aws:iam::111111111111:policy/spot-runners-ssm"
                ],
                "max_session_duration": 3600,
                "name": "spot-runners-instance-role",
                "name_prefix": null,
                "path": "/",
                "permissions_boundary": null,
                "tags": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "tags_all": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "unique_id": "AROARVZ4AQRHXOBTFXXJL"
              }
            },
            {
              "address": "module.runner.aws_iam_role_policy.instance[0]",
              "mode": "managed",
              "type": "aws_iam_role_policy",
              "name": "instance",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "id": "spot-runners-instance-role:spot-runners-instance-role",
                "name": "spot-runners-instance-role",
                "name_prefix": null,
                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowLoggingToCloudWatch\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n",
                "role": "spot-runners-instance-role"
              }
            },
            {
              "address": "module.runner.aws_iam_role_policy_attachment.docker_machine_cache_instance[0]",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "docker_machine_cache_instance",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "id": "spot-runners-instance-role-20210629064417554800000007",
                "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
                "role": "spot-runners-instance-role"
              }
            },
            {
              "address": "module.runner.aws_iam_role_policy_attachment.instance_docker_machine_policy",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "instance_docker_machine_policy",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "id": "spot-runners-instance-role-20210629064402357300000002",
                "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
                "role": "spot-runners-instance-role"
              }
            },
            {
              "address": "module.runner.aws_iam_role_policy_attachment.service_linked_role[0]",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "service_linked_role",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "id": "spot-runners-instance-role-20210629064402403100000003",
                "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
                "role": "spot-runners-instance-role"
              }
            },
            {
              "address": "module.runner.aws_iam_role_policy_attachment.ssm[0]",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "ssm",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "id": "spot-runners-instance-role-20210629064402356900000001",
                "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-ssm",
                "role": "spot-runners-instance-role"
              }
            },
            {
              "address": "module.runner.aws_launch_configuration.gitlab_runner_instance",
              "mode": "managed",
              "type": "aws_launch_configuration",
              "name": "gitlab_runner_instance",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:autoscaling:us-east-1:111111111111:launchConfiguration:3da0a436-4462-4c5d-add9-ac9aa5274e85:launchConfigurationName/docker-default20210629064414620600000006",
                "associate_public_ip_address": false,
                "ebs_block_device": [],
                "ebs_optimized": true,
                "enable_monitoring": true,
                "ephemeral_block_device": [],
                "iam_instance_profile": "spot-runners-instance-profile",
                "id": "docker-default20210629064414620600000006",
                "image_id": "ami-0e362514299d32abe",
                "instance_type": "t3.micro",
                "key_name": "deployer-key",
                "metadata_options": [],
                "name": "docker-default20210629064414620600000006",
                "name_prefix": "docker-default",
                "placement_tenancy": null,
                "root_block_device": [
                  {
                    "delete_on_termination": true,
                    "encrypted": true,
                    "iops": 0,
                    "throughput": 0,
                    "volume_size": 8,
                    "volume_type": "gp2"
                  }
                ],
                "security_groups": [
                  "sg-04e61a7ee5a3569e2"
                ],
                "spot_price": "",
                "user_data": "#!/bin/bash -e\nexec \u003e \u003e(tee /var/log/user-data.log | logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\n\nif [[ $(echo false) == false ]]; then\n  set -x\nfi\n\n# Add current hostname to hosts file\ntee /etc/hosts \u003c\u003cEOL\n127.0.0.1   localhost localhost.localdomain $(hostname)\nEOL\n\n\n\nfor i in {1..7}; do\n  echo \"Attempt: ---- \" $i\n  yum -y update \u0026\u0026 break || sleep 60\ndone\n\necho 'installing additional software for logging'\n# installing in a loop to ensure the cli is installed.\nfor i in {1..7}\ndo\n  echo \"Attempt: ---- \" $i\n  yum install -y aws-cli awslogs jq \u0026\u0026 break || sleep 60\ndone\n\n# Inject the CloudWatch Logs configuration file contents\ncat \u003e /etc/awslogs/awslogs.conf \u003c\u003c- EOF\n[general]\nstate_file = /var/lib/awslogs/agent-state\n\n[/var/log/dmesg]\nfile = /var/log/dmesg\nlog_stream_name = {instanceId}/dmesg\nlog_group_name = spot-runners\ninitial_position = start_of_file\n\n[/var/log/messages]\nfile = /var/log/messages\nlog_stream_name = {instanceId}/messages\nlog_group_name = spot-runners\ndatetime_format = %b %d %H:%M:%S\ninitial_position = start_of_file\n\n[/var/log/user-data.log]\nfile = /var/log/user-data.log\nlog_stream_name = {instanceId}/user-data\nlog_group_name = spot-runners\ninitial_position = start_of_file\n\nEOF\n\n# Set the region to send CloudWatch Logs data to (the region where the instance is located)\nregion=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region)\nsed -i -e \"s/region = us-east-1/region = $region/g\" /etc/awslogs/awscli.conf\n\n# Replace instance id.\ninstanceId=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r .instanceId)\nsed -i -e \"s/{instanceId}/$instanceId/g\" /etc/awslogs/awslogs.conf\n\nif grep -q ':2$' /etc/system-release-cpe  ; then\n  # AWS Linux 2 renamed the awslogs service to awslogsd and uses systemd\n  systemctl enable awslogsd\n  systemctl start awslogsd\nelse\n  service awslogs start\n  chkconfig awslogs on\nfi\n\n\nmkdir -p /etc/gitlab-runner\ncat \u003e /etc/gitlab-runner/config.toml \u003c\u003c- EOF\n\nconcurrent = 10\ncheck_interval = 0\n\n[[runners]]\n  name = \"docker-default\"\n  url = \"https://gitlab.com\"\n  token = \"__REPLACED_BY_USER_DATA__\"\n  executor = \"docker+machine\"\n  environment = []\n  pre_build_script = \"\"\n  post_build_script = \"\"\n  pre_clone_script = \"\"\n  request_concurrency = 1\n  output_limit = 4096\n  limit = 0\n  [runners.docker]\n    tls_verify = false\n    image = \"docker:18.03.1-ce\"\n    privileged = true\n    disable_cache = false\n    volumes = [\"/cache\"]\n    shm_size = 0\n    pull_policy = \"always\"\n    runtime = \"\"\n    helper_image = \"\"\n  [runners.docker.tmpfs]\n    \n  [runners.docker.services_tmpfs]\n    \n  [runners.cache]\n    Type = \"s3\"\n    Shared = false\n    [runners.cache.s3]\n      ServerAddress = \"s3.amazonaws.com\"\n      BucketName = \"111111111111-gitlab-runner-cache\"\n      BucketLocation = \"eu-central-1\"\n      Insecure = false\n  [runners.machine]\n    IdleCount = 0\n    IdleTime = 600\n    \n    MachineDriver = \"amazonec2\"\n    MachineName = \"runner-%s\"\n    MachineOptions = [\n      \"amazonec2-instance-type=m5.large\",\n      \"amazonec2-region=eu-central-1\",\n      \"amazonec2-zone=a\",\n      \"amazonec2-vpc-id=vpc-0b208e2e25d5474cf\",\n      \"amazonec2-subnet-id=subnet-0b6949a41c3b71d3a\",\n      \"amazonec2-private-address-only=true\",\n      \"amazonec2-use-private-address=false\",\n      \"amazonec2-request-spot-instance=true\",\n      \"amazonec2-spot-price=0.06\",\n      \"amazonec2-security-group=spot-runners-docker-machine20210629064407218300000004\",\n      \"amazonec2-tags=Name,spot-runners-docker-machine,Environment,spot-runners,Name,spot-runners,\",\n      \"amazonec2-use-ebs-optimized-instance=true\",\n      \"amazonec2-monitoring=false\",\n      \"amazonec2-iam-instance-profile=spot-runners-docker-machine-profile\",\n      \"amazonec2-root-size=16\",\n      \"amazonec2-ami=ami-0dd76f917833aac4b\"\n      \n    ]\n\n    \n    \n    \n    \n\n\n\nEOF\n\n\n\nif [[ `echo docker+machine` == \"docker\" ]]\nthen\n  echo 'installing docker'\n  if grep -q ':2$' /etc/system-release-cpe  ; then\n    # AWS Linux 2 provides docker via extras only and uses systemd (https://aws.amazon.com/amazon-linux-2/release-notes/)\n    amazon-linux-extras install docker\n    usermod -a -G docker ec2-user\n    systemctl enable docker\n    systemctl start docker\n  else\n    yum install docker -y\n    usermod -a -G docker ec2-user\n    service docker start\n  fi\nfi\n\nif [[ `echo false` == \"true\" ]]\nthen\n  yum install amazon-ecr-credential-helper -y\nfi\n\ncurl --fail --retry 6 -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | bash\nyum install gitlab-runner-13.8.0 -y\n\nif [[ `echo https://gitlab-docker-machine-downloads.s3.amazonaws.com/v0.16.2-gitlab.2/docker-machine` == \"\" ]]\nthen\n  curl --fail --retry 6 -L https://github.com/docker/machine/releases/download/v/docker-machine-`uname -s`-`uname -m` \u003e/tmp/docker-machine\nelse\n  curl --fail --retry 6 -L https://gitlab-docker-machine-downloads.s3.amazonaws.com/v0.16.2-gitlab.2/docker-machine \u003e/tmp/docker-machine\nfi\n\nchmod +x /tmp/docker-machine \u0026\u0026 \\\n  mv /tmp/docker-machine /usr/local/bin/docker-machine \u0026\u0026 \\\n  ln -s /usr/local/bin/docker-machine /usr/bin/docker-machine\ndocker-machine --version\n\n# Create a dummy machine so that the cert is generated properly\n# See: https://gitlab.com/gitlab-org/gitlab-runner/issues/3676\n# See: https://github.com/docker/machine/issues/3845#issuecomment-280389178\nexport USER=root\nexport HOME=/root\ndocker-machine create --driver none --url localhost dummy-machine\ndocker-machine rm -y dummy-machine\nunset HOME\nunset USER\n\n# Install jq if not exists\nif ! [ -x \"$(command -v jq)\" ]; then\n  yum install jq -y\nfi\n\ntoken=$(aws ssm get-parameters --names \"spot-runners-runner-token\" --with-decryption --region \"eu-central-1\" | jq -r \".Parameters | .[0] | .Value\")\nif [[ `echo __REPLACED_BY_USER_DATA__` == \"__REPLACED_BY_USER_DATA__\" \u0026\u0026 `echo $token` == \"null\" ]]\nthen\n  token=$(curl --request POST -L \"https://gitlab.com/api/v4/runners\" \\\n    --form \"token=\" \\\n    --form \"tag_list=\" \\\n    --form \"description=\" \\\n    --form \"locked=\" \\\n    --form \"run_untagged=\" \\\n    --form \"maximum_timeout=\" \\\n    --form \"access_level=\" \\\n    | jq -r .token)\n  aws ssm put-parameter --overwrite --type SecureString  --name \"spot-runners-runner-token\" --value=\"$token\" --region \"eu-central-1\"\nfi\n\nsed -i.bak s/__REPLACED_BY_USER_DATA__/`echo $token`/g /etc/gitlab-runner/config.toml\n\n# A small script to remove this runner from being registered with Gitlab.\ncat \u003c\u003cREM \u003e /etc/rc.d/init.d/remove_gitlab_registration\n#!/bin/bash\n# chkconfig: 1356 99 03\n# description: cleans up gitlab runner key\n# processname: remove_runner_key\n#              /etc/rc.d/init.d/remove_gitlab_registration\nlockfile=/var/lock/subsys/remove_gitlab_registration\n\n# This lockfile is necessary so that we'll run the cleanup later.\nstart() {\n    logger \"Setting up Runner Removal Lockfile\"\n    touch \\$lockfile\n}\n\n# Overwrite token in SSM with null and remove runner from Gitlab\nstop() {\n    logger \"Removing Gitlab Runner Token\"\n    aws ssm put-parameter --overwrite --type SecureString  --name \"spot-runners-runner-token\" --region \"eu-central-1\" --value=\"null\" 2\u003e\u00261 | logger \u0026\n    curl -sS --request DELETE \"https://gitlab.com/api/v4/runners\" --form \"token=$token\" 2\u003e\u00261 | logger \u0026\n    retval=\\$?\n    rm -f \\$lockfile\n    return \\$retval\n}\n\n# Map these to start just to be redunant.\n# We don't want to run Stop outside of shutdown.\nrestart() {\n  start\n}\nreload() {\n  start\n}\n\n# Do nothing - there's no status.\nstatus() {\n  :\n}\n\ncase \"\\$1\" in\n    start)\n        \\$1\n        ;;\n    stop)\n        \\$1\n        ;;\n    restart)\n        \\$1\n        ;;\n    status)\n        \\$1\n        ;;\n    *)\n        echo \"Usage: \\$0 {start|stop|status|restart}\"\n        exit 2\n        ;;\nesac\nREM\n\nchmod a+x /etc/init.d/remove_gitlab_registration\n\n# Use chkconfig to link into the runlevel 0 (shutdown) directories\n# This adds \"start\" scripts to levels 1,3,5, and 6, and a \"stop\" to the others.\n# This way we'll not be assigned jobs if we're shutting down, and clean up in Gitlab.\nchkconfig --add remove_gitlab_registration\n\n# As noted above, this does nothing more than make the lockfile.\nservice remove_gitlab_registration start\n\n\n\nservice gitlab-runner restart\nchkconfig gitlab-runner on\n\n",
                "user_data_base64": null,
                "vpc_classic_link_id": "",
                "vpc_classic_link_security_groups": []
              }
            },
            {
              "address": "module.runner.aws_security_group.docker_machine",
              "mode": "managed",
              "type": "aws_security_group",
              "name": "docker_machine",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:111111111111:security-group/sg-0f11947f51d7e014d",
                "description": "A security group containing docker-machine instances",
                "egress": [
                  {
                    "cidr_blocks": [
                      "0.0.0.0/0"
                    ],
                    "description": "Allow egress traffic for group spot-runners-docker-machine20210629064407218300000004",
                    "from_port": 0,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "-1",
                    "security_groups": [],
                    "self": false,
                    "to_port": 0
                  }
                ],
                "id": "sg-0f11947f51d7e014d",
                "ingress": [
                  {
                    "cidr_blocks": [],
                    "description": "Allow SSH traffic from sg-04e61a7ee5a3569e2 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004 on port 22",
                    "from_port": 22,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [
                      "sg-04e61a7ee5a3569e2"
                    ],
                    "self": false,
                    "to_port": 22
                  },
                  {
                    "cidr_blocks": [],
                    "description": "Allow SSH traffic within group spot-runners-docker-machine20210629064407218300000004 on port 22",
                    "from_port": 22,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [],
                    "self": true,
                    "to_port": 22
                  },
                  {
                    "cidr_blocks": [],
                    "description": "Allow docker-machine traffic from group spot-runners-security-group20210629064407225300000005 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004",
                    "from_port": 2376,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [
                      "sg-04e61a7ee5a3569e2"
                    ],
                    "self": false,
                    "to_port": 2376
                  },
                  {
                    "cidr_blocks": [],
                    "description": "Allow docker-machine traffic within group spot-runners-docker-machine20210629064407218300000004 on port 2376",
                    "from_port": 2376,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [],
                    "self": true,
                    "to_port": 2376
                  }
                ],
                "name": "spot-runners-docker-machine20210629064407218300000004",
                "name_prefix": "spot-runners-docker-machine",
                "owner_id": "111111111111",
                "revoke_rules_on_delete": false,
                "tags": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "tags_all": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "timeouts": null,
                "vpc_id": "vpc-0b208e2e25d5474cf"
              }
            },
            {
              "address": "module.runner.aws_security_group.runner",
              "mode": "managed",
              "type": "aws_security_group",
              "name": "runner",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:111111111111:security-group/sg-04e61a7ee5a3569e2",
                "description": "A security group containing gitlab-runner agent instances",
                "egress": [
                  {
                    "cidr_blocks": [
                      "0.0.0.0/0"
                    ],
                    "description": null,
                    "from_port": 0,
                    "ipv6_cidr_blocks": [
                      "::/0"
                    ],
                    "prefix_list_ids": null,
                    "protocol": "-1",
                    "security_groups": null,
                    "self": null,
                    "to_port": 0
                  }
                ],
                "id": "sg-04e61a7ee5a3569e2",
                "ingress": [],
                "name": "spot-runners-security-group20210629064407225300000005",
                "name_prefix": "spot-runners-security-group",
                "owner_id": "111111111111",
                "revoke_rules_on_delete": false,
                "tags": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "tags_all": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "timeouts": null,
                "vpc_id": "vpc-0b208e2e25d5474cf"
              }
            },
            {
              "address": "module.runner.aws_security_group_rule.docker_machine_docker_runner",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "docker_machine_docker_runner",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "Allow docker-machine traffic from group spot-runners-security-group20210629064407225300000005 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004",
                "from_port": 2376,
                "id": "sgrule-1094927821",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-0f11947f51d7e014d",
                "self": false,
                "source_security_group_id": "sg-04e61a7ee5a3569e2",
                "to_port": 2376,
                "type": "ingress"
              }
            },
            {
              "address": "module.runner.aws_security_group_rule.docker_machine_docker_self",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "docker_machine_docker_self",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "Allow docker-machine traffic within group spot-runners-docker-machine20210629064407218300000004 on port 2376",
                "from_port": 2376,
                "id": "sgrule-1846859719",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-0f11947f51d7e014d",
                "self": true,
                "source_security_group_id": "sg-0f11947f51d7e014d",
                "to_port": 2376,
                "type": "ingress"
              }
            },
            {
              "address": "module.runner.aws_security_group_rule.docker_machine_ssh_runner[0]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "docker_machine_ssh_runner",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "Allow SSH traffic from sg-04e61a7ee5a3569e2 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004 on port 22",
                "from_port": 22,
                "id": "sgrule-2770509898",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-0f11947f51d7e014d",
                "self": false,
                "source_security_group_id": "sg-04e61a7ee5a3569e2",
                "to_port": 22,
                "type": "ingress"
              }
            },
            {
              "address": "module.runner.aws_security_group_rule.docker_machine_ssh_self",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "docker_machine_ssh_self",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "Allow SSH traffic within group spot-runners-docker-machine20210629064407218300000004 on port 22",
                "from_port": 22,
                "id": "sgrule-2322936384",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-0f11947f51d7e014d",
                "self": true,
                "source_security_group_id": "sg-0f11947f51d7e014d",
                "to_port": 22,
                "type": "ingress"
              }
            },
            {
              "address": "module.runner.aws_security_group_rule.out_all",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "out_all",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow egress traffic for group spot-runners-docker-machine20210629064407218300000004",
                "from_port": 0,
                "id": "sgrule-3708414327",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_group_id": "sg-0f11947f51d7e014d",
                "self": false,
                "source_security_group_id": null,
                "to_port": 65535,
                "type": "egress"
              }
            },
            {
              "address": "module.runner.aws_ssm_parameter.runner_registration_token",
              "mode": "managed",
              "type": "aws_ssm_parameter",
              "name": "runner_registration_token",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "allowed_pattern": "",
                "arn": "arn:aws:ssm:us-east-1:111111111111:parameter/spot-runners-runner-token",
                "data_type": "text",
                "description": "",
                "id": "spot-runners-runner-token",
                "key_id": "alias/aws/ssm",
                "name": "spot-runners-runner-token",
                "overwrite": null,
                "tags": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "tags_all": {
                  "Environment": "spot-runners",
                  "Name": "spot-runners"
                },
                "tier": "Standard",
                "type": "SecureString",
                "value": "null",
                "version": 1
              }
            },
            {
              "address": "module.runner.data.aws_ami.docker-machine",
              "mode": "data",
              "type": "aws_ami",
              "name": "docker-machine",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "architecture": "x86_64",
                "arn": "arn:aws:ec2:us-east-1::image/ami-0dd76f917833aac4b",
                "block_device_mappings": [
                  {
                    "device_name": "/dev/sda1",
                    "ebs": {
                      "delete_on_termination": "true",
                      "encrypted": "false",
                      "iops": "0",
                      "snapshot_id": "snap-0575f9666981a797f",
                      "throughput": "0",
                      "volume_size": "8",
                      "volume_type": "gp2"
                    },
                    "no_device": "",
                    "virtual_name": ""
                  },
                  {
                    "device_name": "/dev/sdb",
                    "ebs": {},
                    "no_device": "",
                    "virtual_name": "ephemeral0"
                  },
                  {
                    "device_name": "/dev/sdc",
                    "ebs": {},
                    "no_device": "",
                    "virtual_name": "ephemeral1"
                  }
                ],
                "creation_date": "2021-06-22T20:54:40.000Z",
                "description": "Canonical, Ubuntu, 20.04 LTS, amd64 focal image build on 2021-06-21",
                "ena_support": true,
                "executable_users": null,
                "filter": [
                  {
                    "name": "name",
                    "values": [
                      "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"
                    ]
                  }
                ],
                "hypervisor": "xen",
                "id": "ami-0dd76f917833aac4b",
                "image_id": "ami-0dd76f917833aac4b",
                "image_location": "099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210621",
                "image_owner_alias": null,
                "image_type": "machine",
                "kernel_id": null,
                "most_recent": true,
                "name": "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210621",
                "name_regex": null,
                "owner_id": "099720109477",
                "owners": [
                  "099720109477"
                ],
                "platform": null,
                "platform_details": "Linux/UNIX",
                "product_codes": [],
                "public": true,
                "ramdisk_id": null,
                "root_device_name": "/dev/sda1",
                "root_device_type": "ebs",
                "root_snapshot_id": "snap-0575f9666981a797f",
                "sriov_net_support": "simple",
                "state": "available",
                "state_reason": {
                  "code": "UNSET",
                  "message": "UNSET"
                },
                "tags": {},
                "usage_operation": "RunInstances",
                "virtualization_type": "hvm"
              }
            },
            {
              "address": "module.runner.data.aws_ami.runner",
              "mode": "data",
              "type": "aws_ami",
              "name": "runner",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "architecture": "x86_64",
                "arn": "arn:aws:ec2:us-east-1::image/ami-0e362514299d32abe",
                "block_device_mappings": [
                  {
                    "device_name": "/dev/xvda",
                    "ebs": {
                      "delete_on_termination": "true",
                      "encrypted": "false",
                      "iops": "0",
                      "snapshot_id": "snap-03e9050b362f59715",
                      "throughput": "0",
                      "volume_size": "8",
                      "volume_type": "standard"
                    },
                    "no_device": "",
                    "virtual_name": ""
                  }
                ],
                "creation_date": "2021-06-17T17:35:21.000Z",
                "description": "Amazon Linux 2 AMI 2.0.20210617.0 x86_64 HVM ebs",
                "ena_support": true,
                "executable_users": null,
                "filter": [
                  {
                    "name": "name",
                    "values": [
                      "amzn2-ami-hvm-2.*-x86_64-ebs"
                    ]
                  }
                ],
                "hypervisor": "xen",
                "id": "ami-0e362514299d32abe",
                "image_id": "ami-0e362514299d32abe",
                "image_location": "amazon/amzn2-ami-hvm-2.0.20210617.0-x86_64-ebs",
                "image_owner_alias": "amazon",
                "image_type": "machine",
                "kernel_id": null,
                "most_recent": true,
                "name": "amzn2-ami-hvm-2.0.20210617.0-x86_64-ebs",
                "name_regex": null,
                "owner_id": "137112412989",
                "owners": [
                  "amazon"
                ],
                "platform": null,
                "platform_details": "Linux/UNIX",
                "product_codes": [],
                "public": true,
                "ramdisk_id": null,
                "root_device_name": "/dev/xvda",
                "root_device_type": "ebs",
                "root_snapshot_id": "snap-03e9050b362f59715",
                "sriov_net_support": "simple",
                "state": "available",
                "state_reason": {
                  "code": "UNSET",
                  "message": "UNSET"
                },
                "tags": {},
                "usage_operation": "RunInstances",
                "virtualization_type": "hvm"
              }
            },
            {
              "address": "module.runner.data.aws_availability_zone.runners",
              "mode": "data",
              "type": "aws_availability_zone",
              "name": "runners",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "all_availability_zones": null,
                "filter": null,
                "group_name": "us-east-1",
                "id": "us-east-1a",
                "name": "us-east-1a",
                "name_suffix": "a",
                "network_border_group": "us-east-1",
                "opt_in_status": "opt-in-not-required",
                "parent_zone_id": "",
                "parent_zone_name": "",
                "region": "us-east-1",
                "state": "available",
                "zone_id": "use1-az1",
                "zone_type": "availability-zone"
              }
            },
            {
              "address": "module.runner.data.aws_caller_identity.current",
              "mode": "data",
              "type": "aws_caller_identity",
              "name": "current",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "account_id": "111111111111",
                "arn": "arn:aws:sts::111111111111:assumed-role/AWSReservedSSO_admin_in_develop_fb314e4593b59bf2/imanuel.m@indeni.com",
                "id": "111111111111",
                "user_id": "AROARVZ4AQRHRH7ZLU5BZ:imanuel.m@indeni.com"
              }
            },
            {
              "address": "module.runner.data.aws_subnet.runners",
              "mode": "data",
              "type": "aws_subnet",
              "name": "runners",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-0b6949a41c3b71d3a",
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1a",
                "availability_zone_id": "use1-az1",
                "available_ip_address_count": 250,
                "cidr_block": "10.0.1.0/24",
                "customer_owned_ipv4_pool": "",
                "default_for_az": false,
                "filter": null,
                "id": "subnet-0b6949a41c3b71d3a",
                "ipv6_cidr_block": null,
                "ipv6_cidr_block_association_id": null,
                "map_customer_owned_ip_on_launch": false,
                "map_public_ip_on_launch": false,
                "outpost_arn": "",
                "owner_id": "111111111111",
                "state": "available",
                "tags": {
                  "Name": "my-vpc-private-us-east-1a"
                },
                "vpc_id": "vpc-0b208e2e25d5474cf"
              }
            },
            {
              "address": "module.runner.data.null_data_source.agent_tags[0]",
              "mode": "data",
              "type": "null_data_source",
              "name": "agent_tags",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/null",
              "schema_version": 0,
              "values": {
                "has_computed_default": "default",
                "id": "static",
                "inputs": {
                  "key": "Environment",
                  "propagate_at_launch": "true",
                  "value": "spot-runners"
                },
                "outputs": {
                  "key": "Environment",
                  "propagate_at_launch": "true",
                  "value": "spot-runners"
                },
                "random": "2600082111656026709"
              }
            },
            {
              "address": "module.runner.data.null_data_source.agent_tags[1]",
              "mode": "data",
              "type": "null_data_source",
              "name": "agent_tags",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/null",
              "schema_version": 0,
              "values": {
                "has_computed_default": "default",
                "id": "static",
                "inputs": {
                  "key": "Name",
                  "propagate_at_launch": "true",
                  "value": "spot-runners"
                },
                "outputs": {
                  "key": "Name",
                  "propagate_at_launch": "true",
                  "value": "spot-runners"
                },
                "random": "6411846770691303138"
              }
            },
            {
              "address": "module.runner.data.null_data_source.tags[0]",
              "mode": "data",
              "type": "null_data_source",
              "name": "tags",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/null",
              "schema_version": 0,
              "values": {
                "has_computed_default": "default",
                "id": "static",
                "inputs": {
                  "key": "Environment",
                  "propagate_at_launch": "true",
                  "value": "spot-runners"
                },
                "outputs": {
                  "key": "Environment",
                  "propagate_at_launch": "true",
                  "value": "spot-runners"
                },
                "random": "8395036676992944573"
              }
            },
            {
              "address": "module.runner.data.null_data_source.tags[1]",
              "mode": "data",
              "type": "null_data_source",
              "name": "tags",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/null",
              "schema_version": 0,
              "values": {
                "has_computed_default": "default",
                "id": "static",
                "inputs": {
                  "key": "Name",
                  "propagate_at_launch": "true",
                  "value": "spot-runners"
                },
                "outputs": {
                  "key": "Name",
                  "propagate_at_launch": "true",
                  "value": "spot-runners"
                },
                "random": "5777972786976594649"
              }
            },
            {
              "address": "module.runner.null_resource.remove_runner",
              "mode": "managed",
              "type": "null_resource",
              "name": "remove_runner",
              "provider_name": "registry.terraform.io/hashicorp/null",
              "schema_version": 0,
              "values": {
                "id": "755539463458684891",
                "triggers": {
                  "aws_region": "eu-central-1",
                  "runners_gitlab_url": "https://gitlab.com",
                  "script": ".terraform/modules/runner/bin/remove-runner.sh",
                  "secure_parameter_store_runner_token_key": "spot-runners-runner-token"
                }
              }
            }
          ],
          "address": "module.runner",
          "child_modules": [
            {
              "resources": [
                {
                  "address": "module.runner.module.cache.aws_iam_policy.docker_machine_cache[0]",
                  "mode": "managed",
                  "type": "aws_iam_policy",
                  "name": "docker_machine_cache",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
                    "description": "Policy for docker machine instance to access cache",
                    "id": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
                    "name": "spot-runners-docker-machine-cache",
                    "name_prefix": null,
                    "path": "/",
                    "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowGitLabRunnersAccessCache\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:PutObjectAcl\",\n        \"s3:GetObject\",\n        \"s3:GetObjectAcl\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::111111111111-gitlab-runner-cache/*\"\n      ]\n    }\n  ]\n}\n",
                    "policy_id": "ANPARVZ4AQRHY4HK34I7A",
                    "tags": {
                      "Environment": "spot-runners",
                      "Name": "spot-runners"
                    },
                    "tags_all": {
                      "Environment": "spot-runners",
                      "Name": "spot-runners"
                    }
                  }
                },
                {
                  "address": "module.runner.module.cache.aws_s3_bucket.build_cache[0]",
                  "mode": "managed",
                  "type": "aws_s3_bucket",
                  "name": "build_cache",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "acceleration_status": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::111111111111-gitlab-runner-cache",
                    "bucket": "111111111111-gitlab-runner-cache",
                    "bucket_domain_name": "111111111111-gitlab-runner-cache.s3.amazonaws.com",
                    "bucket_prefix": null,
                    "bucket_regional_domain_name": "111111111111-gitlab-runner-cache.s3.amazonaws.com",
                    "cors_rule": [],
                    "force_destroy": true,
                    "grant": [],
                    "hosted_zone_id": "Z3AQBSTGFYJSTF",
                    "id": "111111111111-gitlab-runner-cache",
                    "lifecycle_rule": [
                      {
                        "abort_incomplete_multipart_upload_days": null,
                        "enabled": true,
                        "expiration": [
                          {
                            "date": null,
                            "days": 1,
                            "expired_object_delete_marker": null
                          }
                        ],
                        "id": "clear",
                        "noncurrent_version_expiration": [
                          {
                            "days": 1
                          }
                        ],
                        "noncurrent_version_transition": [],
                        "prefix": "runner/",
                        "tags": null,
                        "transition": []
                      }
                    ],
                    "logging": [],
                    "object_lock_configuration": [],
                    "policy": null,
                    "region": "us-east-1",
                    "replication_configuration": [],
                    "request_payer": "BucketOwner",
                    "server_side_encryption_configuration": [
                      {
                        "rule": [
                          {
                            "apply_server_side_encryption_by_default": [
                              {
                                "kms_master_key_id": null,
                                "sse_algorithm": "AES256"
                              }
                            ],
                            "bucket_key_enabled": null
                          }
                        ]
                      }
                    ],
                    "tags": {
                      "Environment": "spot-runners",
                      "Name": "spot-runners"
                    },
                    "tags_all": {
                      "Environment": "spot-runners",
                      "Name": "spot-runners"
                    },
                    "versioning": [
                      {
                        "enabled": false,
                        "mfa_delete": null
                      }
                    ],
                    "website": [],
                    "website_domain": null,
                    "website_endpoint": null
                  }
                },
                {
                  "address": "module.runner.module.cache.aws_s3_bucket_public_access_block.build_cache_policy[0]",
                  "mode": "managed",
                  "type": "aws_s3_bucket_public_access_block",
                  "name": "build_cache_policy",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "block_public_acls": true,
                    "block_public_policy": true,
                    "bucket": "111111111111-gitlab-runner-cache",
                    "id": "111111111111-gitlab-runner-cache",
                    "ignore_public_acls": true,
                    "restrict_public_buckets": true
                  }
                },
                {
                  "address": "module.runner.module.cache.data.aws_caller_identity.current",
                  "mode": "data",
                  "type": "aws_caller_identity",
                  "name": "current",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "account_id": "111111111111",
                    "arn": "arn:aws:sts::111111111111:assumed-role/AWSReservedSSO_admin_in_develop_fb314e4593b59bf2/imanuel.m@indeni.com",
                    "id": "111111111111",
                    "user_id": "AROARVZ4AQRHRH7ZLU5BZ:imanuel.m@indeni.com"
                  }
                }
              ],
              "address": "module.runner.module.cache"
            }
          ]
        },
        {
          "resources": [
            {
              "address": "module.vpc.aws_eip.nat[0]",
              "mode": "managed",
              "type": "aws_eip",
              "name": "nat",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "address": null,
                "allocation_id": null,
                "associate_with_private_ip": null,
                "association_id": "eipassoc-053b14c526a490295",
                "carrier_ip": "",
                "customer_owned_ip": "",
                "customer_owned_ipv4_pool": "",
                "domain": "vpc",
                "id": "eipalloc-0b021c244233f1d0d",
                "instance": "",
                "network_border_group": "us-east-1",
                "network_interface": "eni-02e617673b89b80b2",
                "private_dns": "ip-10-0-101-124.ec2.internal",
                "private_ip": "10.0.101.124",
                "public_dns": "ec2-34-203-54-123.compute-1.amazonaws.com",
                "public_ip": "34.203.54.123",
                "public_ipv4_pool": "amazon",
                "tags": {
                  "Name": "my-vpc-us-east-1a"
                },
                "tags_all": {
                  "Name": "my-vpc-us-east-1a"
                },
                "timeouts": null,
                "vpc": true
              }
            },
            {
              "address": "module.vpc.aws_internet_gateway.this[0]",
              "mode": "managed",
              "type": "aws_internet_gateway",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:111111111111:internet-gateway/igw-0fcc1183636e3b8d7",
                "id": "igw-0fcc1183636e3b8d7",
                "owner_id": "111111111111",
                "tags": {
                  "Name": "my-vpc"
                },
                "tags_all": {
                  "Name": "my-vpc"
                },
                "vpc_id": "vpc-0b208e2e25d5474cf"
              }
            },
            {
              "address": "module.vpc.aws_nat_gateway.this[0]",
              "mode": "managed",
              "type": "aws_nat_gateway",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "allocation_id": "eipalloc-0b021c244233f1d0d",
                "connectivity_type": "public",
                "id": "nat-09bbccb2477bb5c89",
                "network_interface_id": "eni-02e617673b89b80b2",
                "private_ip": "10.0.101.124",
                "public_ip": "34.203.54.123",
                "subnet_id": "subnet-078845300b6d6c612",
                "tags": {
                  "Name": "my-vpc-us-east-1a"
                },
                "tags_all": {
                  "Name": "my-vpc-us-east-1a"
                }
              }
            },
            {
              "address": "module.vpc.aws_route.private_nat_gateway[0]",
              "mode": "managed",
              "type": "aws_route",
              "name": "private_nat_gateway",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "carrier_gateway_id": "",
                "destination_cidr_block": "0.0.0.0/0",
                "destination_ipv6_cidr_block": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "",
                "id": "r-rtb-077a028aecff03dd51080289494",
                "instance_id": "",
                "instance_owner_id": "",
                "local_gateway_id": "",
                "nat_gateway_id": "nat-09bbccb2477bb5c89",
                "network_interface_id": "",
                "origin": "CreateRoute",
                "route_table_id": "rtb-077a028aecff03dd5",
                "state": "active",
                "timeouts": {
                  "create": "5m",
                  "delete": null
                },
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            },
            {
              "address": "module.vpc.aws_route.public_internet_gateway[0]",
              "mode": "managed",
              "type": "aws_route",
              "name": "public_internet_gateway",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "carrier_gateway_id": "",
                "destination_cidr_block": "0.0.0.0/0",
                "destination_ipv6_cidr_block": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-0fcc1183636e3b8d7",
                "id": "r-rtb-02bcb211549855a9a1080289494",
                "instance_id": "",
                "instance_owner_id": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "origin": "CreateRoute",
                "route_table_id": "rtb-02bcb211549855a9a",
                "state": "active",
                "timeouts": {
                  "create": "5m",
                  "delete": null
                },
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            },
            {
              "address": "module.vpc.aws_route_table.private[0]",
              "mode": "managed",
              "type": "aws_route_table",
              "name": "private",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:111111111111:route-table/rtb-077a028aecff03dd5",
                "id": "rtb-077a028aecff03dd5",
                "owner_id": "111111111111",
                "propagating_vgws": [],
                "route": [
                  {
                    "carrier_gateway_id": "",
                    "cidr_block": "0.0.0.0/0",
                    "destination_prefix_list_id": "",
                    "egress_only_gateway_id": "",
                    "gateway_id": "",
                    "instance_id": "",
                    "ipv6_cidr_block": "",
                    "local_gateway_id": "",
                    "nat_gateway_id": "nat-09bbccb2477bb5c89",
                    "network_interface_id": "",
                    "transit_gateway_id": "",
                    "vpc_endpoint_id": "",
                    "vpc_peering_connection_id": ""
                  }
                ],
                "tags": {
                  "Name": "my-vpc-private-us-east-1a"
                },
                "tags_all": {
                  "Name": "my-vpc-private-us-east-1a"
                },
                "vpc_id": "vpc-0b208e2e25d5474cf"
              }
            },
            {
              "address": "module.vpc.aws_route_table.public[0]",
              "mode": "managed",
              "type": "aws_route_table",
              "name": "public",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:111111111111:route-table/rtb-02bcb211549855a9a",
                "id": "rtb-02bcb211549855a9a",
                "owner_id": "111111111111",
                "propagating_vgws": [],
                "route": [
                  {
                    "carrier_gateway_id": "",
                    "cidr_block": "0.0.0.0/0",
                    "destination_prefix_list_id": "",
                    "egress_only_gateway_id": "",
                    "gateway_id": "igw-0fcc1183636e3b8d7",
                    "instance_id": "",
                    "ipv6_cidr_block": "",
                    "local_gateway_id": "",
                    "nat_gateway_id": "",
                    "network_interface_id": "",
                    "transit_gateway_id": "",
                    "vpc_endpoint_id": "",
                    "vpc_peering_connection_id": ""
                  }
                ],
                "tags": {
                  "Name": "my-vpc-public"
                },
                "tags_all": {
                  "Name": "my-vpc-public"
                },
                "vpc_id": "vpc-0b208e2e25d5474cf"
              }
            },
            {
              "address": "module.vpc.aws_route_table_association.private[0]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "private",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": "",
                "id": "rtbassoc-099d719101045e997",
                "route_table_id": "rtb-077a028aecff03dd5",
                "subnet_id": "subnet-0b6949a41c3b71d3a"
              }
            },
            {
              "address": "module.vpc.aws_route_table_association.public[0]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "public",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": "",
                "id": "rtbassoc-0f4c25ff6d9b293c1",
                "route_table_id": "rtb-02bcb211549855a9a",
                "subnet_id": "subnet-078845300b6d6c612"
              }
            },
            {
              "address": "module.vpc.aws_subnet.private[0]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "private",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-0b6949a41c3b71d3a",
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1a",
                "availability_zone_id": "use1-az1",
                "cidr_block": "10.0.1.0/24",
                "customer_owned_ipv4_pool": "",
                "id": "subnet-0b6949a41c3b71d3a",
                "ipv6_cidr_block": "",
                "ipv6_cidr_block_association_id": "",
                "map_customer_owned_ip_on_launch": false,
                "map_public_ip_on_launch": false,
                "outpost_arn": "",
                "owner_id": "111111111111",
                "tags": {
                  "Name": "my-vpc-private-us-east-1a"
                },
                "tags_all": {
                  "Name": "my-vpc-private-us-east-1a"
                },
                "timeouts": null,
                "vpc_id": "vpc-0b208e2e25d5474cf"
              }
            },
            {
              "address": "module.vpc.aws_subnet.public[0]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "public",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-078845300b6d6c612",
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1a",
                "availability_zone_id": "use1-az1",
                "cidr_block": "10.0.101.0/24",
                "customer_owned_ipv4_pool": "",
                "id": "subnet-078845300b6d6c612",
                "ipv6_cidr_block": "",
                "ipv6_cidr_block_association_id": "",
                "map_customer_owned_ip_on_launch": false,
                "map_public_ip_on_launch": true,
                "outpost_arn": "",
                "owner_id": "111111111111",
                "tags": {
                  "Name": "my-vpc-public-us-east-1a"
                },
                "tags_all": {
                  "Name": "my-vpc-public-us-east-1a"
                },
                "timeouts": null,
                "vpc_id": "vpc-0b208e2e25d5474cf"
              }
            },
            {
              "address": "module.vpc.aws_vpc.this[0]",
              "mode": "managed",
              "type": "aws_vpc",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:111111111111:vpc/vpc-0b208e2e25d5474cf",
                "assign_generated_ipv6_cidr_block": false,
                "cidr_block": "10.0.0.0/16",
                "default_network_acl_id": "acl-0ba2138552c6889f7",
                "default_route_table_id": "rtb-0f634df56e151b775",
                "default_security_group_id": "sg-0031bf33de1b414e1",
                "dhcp_options_id": "dopt-3045214a",
                "enable_classiclink": false,
                "enable_classiclink_dns_support": false,
                "enable_dns_hostnames": false,
                "enable_dns_support": true,
                "id": "vpc-0b208e2e25d5474cf",
                "instance_tenancy": "default",
                "ipv6_association_id": "",
                "ipv6_cidr_block": "",
                "main_route_table_id": "rtb-0f634df56e151b775",
                "owner_id": "111111111111",
                "tags": {
                  "Name": "my-vpc"
                },
                "tags_all": {
                  "Name": "my-vpc"
                }
              }
            },
            {
              "address": "module.vpc.aws_vpn_gateway.this[0]",
              "mode": "managed",
              "type": "aws_vpn_gateway",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "amazon_side_asn": "64512",
                "arn": "arn:aws:ec2:us-east-1:111111111111:vpn-gateway/vgw-0b8ad47ad0fcdb5c6",
                "availability_zone": null,
                "id": "vgw-0b8ad47ad0fcdb5c6",
                "tags": {
                  "Name": "my-vpc"
                },
                "tags_all": {
                  "Name": "my-vpc"
                },
                "vpc_id": "vpc-0b208e2e25d5474cf"
              }
            }
          ],
          "address": "module.vpc"
        }
      ]
    }
  },
  "resource_changes": [
    {
      "address": "aws_key_pair.deployer",
      "mode": "managed",
      "type": "aws_key_pair",
      "name": "deployer",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:key-pair/deployer-key",
          "fingerprint": "d7:ff:a6:63:18:64:9c:57:a1:ee:ca:a4:ad:c2:81:62",
          "id": "deployer-key",
          "key_name": "deployer-key",
          "key_name_prefix": null,
          "key_pair_id": "key-03c17909b58e76013",
          "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 email@example.com",
          "tags": {},
          "tags_all": {}
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:key-pair/deployer-key",
          "fingerprint": "d7:ff:a6:63:18:64:9c:57:a1:ee:ca:a4:ad:c2:81:62",
          "id": "deployer-key",
          "key_name": "deployer-key",
          "key_name_prefix": null,
          "key_pair_id": "key-03c17909b58e76013",
          "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 email@example.com",
          "tags": {},
          "tags_all": {}
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.runner.aws_autoscaling_group.gitlab_runner_instance",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "gitlab_runner_instance",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:autoscaling:us-east-1:111111111111:autoScalingGroup:d97b1893-8514-4ed5-8087-14b2b723b160:autoScalingGroupName/docker-default20210629064414620600000006-asg",
          "availability_zones": [
            "us-east-1a"
          ],
          "capacity_rebalance": false,
          "default_cooldown": 300,
          "desired_capacity": 1,
          "enabled_metrics": [],
          "force_delete": false,
          "force_delete_warm_pool": false,
          "health_check_grace_period": 0,
          "health_check_type": "EC2",
          "id": "docker-default20210629064414620600000006-asg",
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_configuration": "docker-default20210629064414620600000006",
          "launch_template": [],
          "load_balancers": [],
          "max_instance_lifetime": 0,
          "max_size": 1,
          "metrics_granularity": "1Minute",
          "min_elb_capacity": null,
          "min_size": 1,
          "mixed_instances_policy": [],
          "name": "docker-default20210629064414620600000006-asg",
          "name_prefix": "",
          "placement_group": "",
          "protect_from_scale_in": false,
          "service_linked_role_arn": "arn:aws:iam::111111111111:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
          "suspended_processes": [],
          "tag": [],
          "tags": [
            {
              "key": "Environment",
              "propagate_at_launch": "true",
              "value": "spot-runners"
            },
            {
              "key": "Name",
              "propagate_at_launch": "true",
              "value": "spot-runners"
            }
          ],
          "target_group_arns": [],
          "termination_policies": [],
          "timeouts": {
            "delete": "10m"
          },
          "vpc_zone_identifier": [
            "subnet-0b6949a41c3b71d3a"
          ],
          "wait_for_capacity_timeout": "10m",
          "wait_for_elb_capacity": null,
          "warm_pool": []
        },
        "after": {
          "arn": "arn:aws:autoscaling:us-east-1:111111111111:autoScalingGroup:d97b1893-8514-4ed5-8087-14b2b723b160:autoScalingGroupName/docker-default20210629064414620600000006-asg",
          "availability_zones": [
            "us-east-1a"
          ],
          "capacity_rebalance": false,
          "default_cooldown": 300,
          "desired_capacity": 1,
          "enabled_metrics": [],
          "force_delete": false,
          "force_delete_warm_pool": false,
          "health_check_grace_period": 0,
          "health_check_type": "EC2",
          "id": "docker-default20210629064414620600000006-asg",
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_configuration": "docker-default20210629064414620600000006",
          "launch_template": [],
          "load_balancers": [],
          "max_instance_lifetime": 0,
          "max_size": 1,
          "metrics_granularity": "1Minute",
          "min_elb_capacity": null,
          "min_size": 1,
          "mixed_instances_policy": [],
          "name": "docker-default20210629064414620600000006-asg",
          "name_prefix": "",
          "placement_group": "",
          "protect_from_scale_in": false,
          "service_linked_role_arn": "arn:aws:iam::111111111111:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
          "suspended_processes": [],
          "tag": [],
          "tags": [
            {
              "key": "Environment",
              "propagate_at_launch": "true",
              "value": "spot-runners"
            },
            {
              "key": "Name",
              "propagate_at_launch": "true",
              "value": "spot-runners"
            }
          ],
          "target_group_arns": [],
          "termination_policies": [],
          "timeouts": {
            "delete": "10m"
          },
          "vpc_zone_identifier": [
            "subnet-0b6949a41c3b71d3a"
          ],
          "wait_for_capacity_timeout": "10m",
          "wait_for_elb_capacity": null,
          "warm_pool": []
        },
        "after_unknown": {},
        "before_sensitive": {
          "availability_zones": [
            false
          ],
          "enabled_metrics": [],
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_template": [],
          "load_balancers": [],
          "mixed_instances_policy": [],
          "suspended_processes": [],
          "tag": [],
          "tags": [
            {},
            {}
          ],
          "target_group_arns": [],
          "termination_policies": [],
          "timeouts": {},
          "vpc_zone_identifier": [
            false
          ],
          "warm_pool": []
        },
        "after_sensitive": {
          "availability_zones": [
            false
          ],
          "enabled_metrics": [],
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_template": [],
          "load_balancers": [],
          "mixed_instances_policy": [],
          "suspended_processes": [],
          "tag": [],
          "tags": [
            {},
            {}
          ],
          "target_group_arns": [],
          "termination_policies": [],
          "timeouts": {},
          "vpc_zone_identifier": [
            false
          ],
          "warm_pool": []
        }
      }
    },
    {
      "address": "module.runner.aws_cloudwatch_log_group.environment[0]",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "environment",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:logs:us-east-1:111111111111:log-group:spot-runners",
          "id": "spot-runners",
          "kms_key_id": "",
          "name": "spot-runners",
          "name_prefix": null,
          "retention_in_days": 0,
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          }
        },
        "after": {
          "arn": "arn:aws:logs:us-east-1:111111111111:log-group:spot-runners",
          "id": "spot-runners",
          "kms_key_id": "",
          "name": "spot-runners",
          "name_prefix": null,
          "retention_in_days": 0,
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.runner.aws_iam_instance_profile.docker_machine",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "docker_machine",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::111111111111:instance-profile/spot-runners-docker-machine-profile",
          "create_date": "2021-06-29T06:44:02Z",
          "id": "spot-runners-docker-machine-profile",
          "name": "spot-runners-docker-machine-profile",
          "name_prefix": null,
          "path": "/",
          "role": "spot-runners-docker-machine-role",
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "unique_id": "AIPARVZ4AQRH532CCQZIQ"
        },
        "after": {
          "arn": "arn:aws:iam::111111111111:instance-profile/spot-runners-docker-machine-profile",
          "create_date": "2021-06-29T06:44:02Z",
          "id": "spot-runners-docker-machine-profile",
          "name": "spot-runners-docker-machine-profile",
          "name_prefix": null,
          "path": "/",
          "role": "spot-runners-docker-machine-role",
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "unique_id": "AIPARVZ4AQRH532CCQZIQ"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.runner.aws_iam_instance_profile.instance",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "instance",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::111111111111:instance-profile/spot-runners-instance-profile",
          "create_date": "2021-06-29T06:44:02Z",
          "id": "spot-runners-instance-profile",
          "name": "spot-runners-instance-profile",
          "name_prefix": null,
          "path": "/",
          "role": "spot-runners-instance-role",
          "tags": {},
          "tags_all": {},
          "unique_id": "AIPARVZ4AQRH2MWITMIQ7"
        },
        "after": {
          "arn": "arn:aws:iam::111111111111:instance-profile/spot-runners-instance-profile",
          "create_date": "2021-06-29T06:44:02Z",
          "id": "spot-runners-instance-profile",
          "name": "spot-runners-instance-profile",
          "name_prefix": null,
          "path": "/",
          "role": "spot-runners-instance-role",
          "tags": {},
          "tags_all": {},
          "unique_id": "AIPARVZ4AQRH2MWITMIQ7"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.runner.aws_iam_policy.instance_docker_machine_policy",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "instance_docker_machine_policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
          "description": "Policy for docker machine.",
          "id": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
          "name": "spot-runners-docker-machine",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Action\": [\n          \"ec2:DescribeKeyPairs\",\n          \"ec2:TerminateInstances\",\n          \"ec2:StopInstances\",\n          \"ec2:StartInstances\",\n          \"ec2:RunInstances\",\n          \"ec2:RebootInstances\",\n          \"ec2:CreateKeyPair\",\n          \"ec2:DeleteKeyPair\",\n          \"ec2:ImportKeyPair\",\n          \"ec2:Describe*\",\n          \"ec2:CreateTags\",\n          \"ec2:RequestSpotInstances\",\n          \"ec2:CancelSpotInstanceRequests\",\n          \"ec2:DescribeSubnets\",\n          \"ec2:AssociateIamInstanceProfile\",\n          \"iam:PassRole\"\n        ],\n        \"Effect\": \"Allow\",\n        \"Resource\": \"*\"\n      }\n    ]\n  }\n",
          "policy_id": "ANPARVZ4AQRH33XGM5XIQ",
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          }
        },
        "after": {
          "arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
          "description": "Policy for docker machine.",
          "id": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
          "name": "spot-runners-docker-machine",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Action\": [\n          \"ec2:DescribeKeyPairs\",\n          \"ec2:TerminateInstances\",\n          \"ec2:StopInstances\",\n          \"ec2:StartInstances\",\n          \"ec2:RunInstances\",\n          \"ec2:RebootInstances\",\n          \"ec2:CreateKeyPair\",\n          \"ec2:DeleteKeyPair\",\n          \"ec2:ImportKeyPair\",\n          \"ec2:Describe*\",\n          \"ec2:CreateTags\",\n          \"ec2:RequestSpotInstances\",\n          \"ec2:CancelSpotInstanceRequests\",\n          \"ec2:DescribeSubnets\",\n          \"ec2:AssociateIamInstanceProfile\",\n          \"iam:PassRole\"\n        ],\n        \"Effect\": \"Allow\",\n        \"Resource\": \"*\"\n      }\n    ]\n  }\n",
          "policy_id": "ANPARVZ4AQRH33XGM5XIQ",
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.runner.aws_iam_policy.service_linked_role[0]",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "service_linked_role",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
          "description": "Policy for creation of service linked roles.",
          "id": "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
          "name": "spot-runners-service_linked_role",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"arn:aws:iam::*:role/aws-service-role/*\"\n    }\n  ]\n}\n",
          "policy_id": "ANPARVZ4AQRHZHJDFJYT6",
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          }
        },
        "after": {
          "arn": "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
          "description": "Policy for creation of service linked roles.",
          "id": "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
          "name": "spot-runners-service_linked_role",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"arn:aws:iam::*:role/aws-service-role/*\"\n    }\n  ]\n}\n",
          "policy_id": "ANPARVZ4AQRHZHJDFJYT6",
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.runner.aws_iam_policy.ssm[0]",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "ssm",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::111111111111:policy/spot-runners-ssm",
          "description": "Policy for runner token param access via SSM",
          "id": "arn:aws:iam::111111111111:policy/spot-runners-ssm",
          "name": "spot-runners-ssm",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:PutParameter\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:GetParameters\"\n            ],\n            \"Resource\": \"arn:aws:ssm:*\"\n        }\n    ]\n}\n",
          "policy_id": "ANPARVZ4AQRH75RT5ISZI",
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          }
        },
        "after": {
          "arn": "arn:aws:iam::111111111111:policy/spot-runners-ssm",
          "description": "Policy for runner token param access via SSM",
          "id": "arn:aws:iam::111111111111:policy/spot-runners-ssm",
          "name": "spot-runners-ssm",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:PutParameter\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:GetParameters\"\n            ],\n            \"Resource\": \"arn:aws:ssm:*\"\n        }\n    ]\n}\n",
          "policy_id": "ANPARVZ4AQRH75RT5ISZI",
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.runner.aws_iam_role.docker_machine",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "docker_machine",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:iam::111111111111:role/spot-runners-docker-machine-role",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2021-06-29T06:43:59Z",
          "description": "",
          "force_detach_policies": false,
          "id": "spot-runners-docker-machine-role",
          "inline_policy": [
            {
              "name": "",
              "policy": ""
            }
          ],
          "managed_policy_arns": [],
          "max_session_duration": 3600,
          "name": "spot-runners-docker-machine-role",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": null,
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "unique_id": "AROARVZ4AQRHS5T7HPNI7"
        },
        "after": {
          "arn": "arn:aws:iam::111111111111:role/spot-runners-docker-machine-role",
          "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
          "create_date": "2021-06-29T06:43:59Z",
          "description": "",
          "force_detach_policies": false,
          "id": "spot-runners-docker-machine-role",
          "inline_policy": [],
          "managed_policy_arns": [],
          "max_session_duration": 3600,
          "name": "spot-runners-docker-machine-role",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": null,
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "unique_id": "AROARVZ4AQRHS5T7HPNI7"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": [],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.runner.aws_iam_role.instance",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "instance",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:iam::111111111111:role/spot-runners-instance-role",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2021-06-29T06:43:59Z",
          "description": "",
          "force_detach_policies": false,
          "id": "spot-runners-instance-role",
          "inline_policy": [
            {
              "name": "spot-runners-instance-role",
              "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowLoggingToCloudWatch\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n"
            }
          ],
          "managed_policy_arns": [
            "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
            "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
            "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
            "arn:aws:iam::111111111111:policy/spot-runners-ssm"
          ],
          "max_session_duration": 3600,
          "name": "spot-runners-instance-role",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": null,
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "unique_id": "AROARVZ4AQRHXOBTFXXJL"
        },
        "after": {
          "arn": "arn:aws:iam::111111111111:role/spot-runners-instance-role",
          "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
          "create_date": "2021-06-29T06:43:59Z",
          "description": "",
          "force_detach_policies": false,
          "id": "spot-runners-instance-role",
          "inline_policy": [],
          "managed_policy_arns": [
            "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
            "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
            "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
            "arn:aws:iam::111111111111:policy/spot-runners-ssm"
          ],
          "max_session_duration": 3600,
          "name": "spot-runners-instance-role",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": null,
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "unique_id": "AROARVZ4AQRHXOBTFXXJL"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": [
            false,
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [
            false,
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.runner.aws_iam_role_policy.instance[0]",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "instance",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "spot-runners-instance-role:spot-runners-instance-role",
          "name": "spot-runners-instance-role",
          "name_prefix": null,
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowLoggingToCloudWatch\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n",
          "role": "spot-runners-instance-role"
        },
        "after": {
          "id": "spot-runners-instance-role:spot-runners-instance-role",
          "name": "spot-runners-instance-role",
          "name_prefix": null,
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowLoggingToCloudWatch\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n",
          "role": "spot-runners-instance-role"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.runner.aws_iam_role_policy_attachment.docker_machine_cache_instance[0]",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "docker_machine_cache_instance",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "spot-runners-instance-role-20210629064417554800000007",
          "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
          "role": "spot-runners-instance-role"
        },
        "after": {
          "id": "spot-runners-instance-role-20210629064417554800000007",
          "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
          "role": "spot-runners-instance-role"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.runner.aws_iam_role_policy_attachment.instance_docker_machine_policy",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "instance_docker_machine_policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "spot-runners-instance-role-20210629064402357300000002",
          "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
          "role": "spot-runners-instance-role"
        },
        "after": {
          "id": "spot-runners-instance-role-20210629064402357300000002",
          "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
          "role": "spot-runners-instance-role"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.runner.aws_iam_role_policy_attachment.service_linked_role[0]",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "service_linked_role",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "spot-runners-instance-role-20210629064402403100000003",
          "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
          "role": "spot-runners-instance-role"
        },
        "after": {
          "id": "spot-runners-instance-role-20210629064402403100000003",
          "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
          "role": "spot-runners-instance-role"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.runner.aws_iam_role_policy_attachment.ssm[0]",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "ssm",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "spot-runners-instance-role-20210629064402356900000001",
          "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-ssm",
          "role": "spot-runners-instance-role"
        },
        "after": {
          "id": "spot-runners-instance-role-20210629064402356900000001",
          "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-ssm",
          "role": "spot-runners-instance-role"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.runner.aws_launch_configuration.gitlab_runner_instance",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_launch_configuration",
      "name": "gitlab_runner_instance",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:autoscaling:us-east-1:111111111111:launchConfiguration:3da0a436-4462-4c5d-add9-ac9aa5274e85:launchConfigurationName/docker-default20210629064414620600000006",
          "associate_public_ip_address": false,
          "ebs_block_device": [],
          "ebs_optimized": true,
          "enable_monitoring": true,
          "ephemeral_block_device": [],
          "iam_instance_profile": "spot-runners-instance-profile",
          "id": "docker-default20210629064414620600000006",
          "image_id": "ami-0e362514299d32abe",
          "instance_type": "t3.micro",
          "key_name": "deployer-key",
          "metadata_options": [],
          "name": "docker-default20210629064414620600000006",
          "name_prefix": "docker-default",
          "placement_tenancy": null,
          "root_block_device": [
            {
              "delete_on_termination": true,
              "encrypted": true,
              "iops": 0,
              "throughput": 0,
              "volume_size": 8,
              "volume_type": "gp2"
            }
          ],
          "security_groups": [
            "sg-04e61a7ee5a3569e2"
          ],
          "spot_price": "",
          "user_data": "e707d6482d2a5ababa6c206322e420c70162822a",
          "user_data_base64": null,
          "vpc_classic_link_id": "",
          "vpc_classic_link_security_groups": []
        },
        "after": {
          "arn": "arn:aws:autoscaling:us-east-1:111111111111:launchConfiguration:3da0a436-4462-4c5d-add9-ac9aa5274e85:launchConfigurationName/docker-default20210629064414620600000006",
          "associate_public_ip_address": false,
          "ebs_block_device": [],
          "ebs_optimized": true,
          "enable_monitoring": true,
          "ephemeral_block_device": [],
          "iam_instance_profile": "spot-runners-instance-profile",
          "id": "docker-default20210629064414620600000006",
          "image_id": "ami-0e362514299d32abe",
          "instance_type": "t3.micro",
          "key_name": "deployer-key",
          "metadata_options": [],
          "name": "docker-default20210629064414620600000006",
          "name_prefix": "docker-default",
          "placement_tenancy": null,
          "root_block_device": [
            {
              "delete_on_termination": true,
              "encrypted": true,
              "iops": 0,
              "throughput": 0,
              "volume_size": 8,
              "volume_type": "gp2"
            }
          ],
          "security_groups": [
            "sg-04e61a7ee5a3569e2"
          ],
          "spot_price": "",
          "user_data": "#!/bin/bash -e\nexec \u003e \u003e(tee /var/log/user-data.log | logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\n\nif [[ $(echo false) == false ]]; then\n  set -x\nfi\n\n# Add current hostname to hosts file\ntee /etc/hosts \u003c\u003cEOL\n127.0.0.1   localhost localhost.localdomain $(hostname)\nEOL\n\n\n\nfor i in {1..7}; do\n  echo \"Attempt: ---- \" $i\n  yum -y update \u0026\u0026 break || sleep 60\ndone\n\necho 'installing additional software for logging'\n# installing in a loop to ensure the cli is installed.\nfor i in {1..7}\ndo\n  echo \"Attempt: ---- \" $i\n  yum install -y aws-cli awslogs jq \u0026\u0026 break || sleep 60\ndone\n\n# Inject the CloudWatch Logs configuration file contents\ncat \u003e /etc/awslogs/awslogs.conf \u003c\u003c- EOF\n[general]\nstate_file = /var/lib/awslogs/agent-state\n\n[/var/log/dmesg]\nfile = /var/log/dmesg\nlog_stream_name = {instanceId}/dmesg\nlog_group_name = spot-runners\ninitial_position = start_of_file\n\n[/var/log/messages]\nfile = /var/log/messages\nlog_stream_name = {instanceId}/messages\nlog_group_name = spot-runners\ndatetime_format = %b %d %H:%M:%S\ninitial_position = start_of_file\n\n[/var/log/user-data.log]\nfile = /var/log/user-data.log\nlog_stream_name = {instanceId}/user-data\nlog_group_name = spot-runners\ninitial_position = start_of_file\n\nEOF\n\n# Set the region to send CloudWatch Logs data to (the region where the instance is located)\nregion=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region)\nsed -i -e \"s/region = us-east-1/region = $region/g\" /etc/awslogs/awscli.conf\n\n# Replace instance id.\ninstanceId=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r .instanceId)\nsed -i -e \"s/{instanceId}/$instanceId/g\" /etc/awslogs/awslogs.conf\n\nif grep -q ':2$' /etc/system-release-cpe  ; then\n  # AWS Linux 2 renamed the awslogs service to awslogsd and uses systemd\n  systemctl enable awslogsd\n  systemctl start awslogsd\nelse\n  service awslogs start\n  chkconfig awslogs on\nfi\n\n\nmkdir -p /etc/gitlab-runner\ncat \u003e /etc/gitlab-runner/config.toml \u003c\u003c- EOF\n\nconcurrent = 10\ncheck_interval = 0\n\n[[runners]]\n  name = \"docker-default\"\n  url = \"https://gitlab.com\"\n  token = \"__REPLACED_BY_USER_DATA__\"\n  executor = \"docker+machine\"\n  environment = []\n  pre_build_script = \"\"\n  post_build_script = \"\"\n  pre_clone_script = \"\"\n  request_concurrency = 1\n  output_limit = 4096\n  limit = 0\n  [runners.docker]\n    tls_verify = false\n    image = \"docker:18.03.1-ce\"\n    privileged = true\n    disable_cache = false\n    volumes = [\"/cache\"]\n    shm_size = 0\n    pull_policy = \"always\"\n    runtime = \"\"\n    helper_image = \"\"\n  [runners.docker.tmpfs]\n    \n  [runners.docker.services_tmpfs]\n    \n  [runners.cache]\n    Type = \"s3\"\n    Shared = false\n    [runners.cache.s3]\n      ServerAddress = \"s3.amazonaws.com\"\n      BucketName = \"111111111111-gitlab-runner-cache\"\n      BucketLocation = \"eu-central-1\"\n      Insecure = false\n  [runners.machine]\n    IdleCount = 0\n    IdleTime = 600\n    \n    MachineDriver = \"amazonec2\"\n    MachineName = \"runner-%s\"\n    MachineOptions = [\n      \"amazonec2-instance-type=m5.large\",\n      \"amazonec2-region=eu-central-1\",\n      \"amazonec2-zone=a\",\n      \"amazonec2-vpc-id=vpc-0b208e2e25d5474cf\",\n      \"amazonec2-subnet-id=subnet-0b6949a41c3b71d3a\",\n      \"amazonec2-private-address-only=true\",\n      \"amazonec2-use-private-address=false\",\n      \"amazonec2-request-spot-instance=true\",\n      \"amazonec2-spot-price=0.06\",\n      \"amazonec2-security-group=spot-runners-docker-machine20210629064407218300000004\",\n      \"amazonec2-tags=Name,spot-runners-docker-machine,Environment,spot-runners,Name,spot-runners,\",\n      \"amazonec2-use-ebs-optimized-instance=true\",\n      \"amazonec2-monitoring=false\",\n      \"amazonec2-iam-instance-profile=spot-runners-docker-machine-profile\",\n      \"amazonec2-root-size=16\",\n      \"amazonec2-ami=ami-0dd76f917833aac4b\"\n      \n    ]\n\n    \n    \n    \n    \n\n\n\nEOF\n\n\n\nif [[ `echo docker+machine` == \"docker\" ]]\nthen\n  echo 'installing docker'\n  if grep -q ':2$' /etc/system-release-cpe  ; then\n    # AWS Linux 2 provides docker via extras only and uses systemd (https://aws.amazon.com/amazon-linux-2/release-notes/)\n    amazon-linux-extras install docker\n    usermod -a -G docker ec2-user\n    systemctl enable docker\n    systemctl start docker\n  else\n    yum install docker -y\n    usermod -a -G docker ec2-user\n    service docker start\n  fi\nfi\n\nif [[ `echo false` == \"true\" ]]\nthen\n  yum install amazon-ecr-credential-helper -y\nfi\n\ncurl --fail --retry 6 -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | bash\nyum install gitlab-runner-13.8.0 -y\n\nif [[ `echo https://gitlab-docker-machine-downloads.s3.amazonaws.com/v0.16.2-gitlab.2/docker-machine` == \"\" ]]\nthen\n  curl --fail --retry 6 -L https://github.com/docker/machine/releases/download/v/docker-machine-`uname -s`-`uname -m` \u003e/tmp/docker-machine\nelse\n  curl --fail --retry 6 -L https://gitlab-docker-machine-downloads.s3.amazonaws.com/v0.16.2-gitlab.2/docker-machine \u003e/tmp/docker-machine\nfi\n\nchmod +x /tmp/docker-machine \u0026\u0026 \\\n  mv /tmp/docker-machine /usr/local/bin/docker-machine \u0026\u0026 \\\n  ln -s /usr/local/bin/docker-machine /usr/bin/docker-machine\ndocker-machine --version\n\n# Create a dummy machine so that the cert is generated properly\n# See: https://gitlab.com/gitlab-org/gitlab-runner/issues/3676\n# See: https://github.com/docker/machine/issues/3845#issuecomment-280389178\nexport USER=root\nexport HOME=/root\ndocker-machine create --driver none --url localhost dummy-machine\ndocker-machine rm -y dummy-machine\nunset HOME\nunset USER\n\n# Install jq if not exists\nif ! [ -x \"$(command -v jq)\" ]; then\n  yum install jq -y\nfi\n\ntoken=$(aws ssm get-parameters --names \"spot-runners-runner-token\" --with-decryption --region \"eu-central-1\" | jq -r \".Parameters | .[0] | .Value\")\nif [[ `echo __REPLACED_BY_USER_DATA__` == \"__REPLACED_BY_USER_DATA__\" \u0026\u0026 `echo $token` == \"null\" ]]\nthen\n  token=$(curl --request POST -L \"https://gitlab.com/api/v4/runners\" \\\n    --form \"token=\" \\\n    --form \"tag_list=\" \\\n    --form \"description=\" \\\n    --form \"locked=\" \\\n    --form \"run_untagged=\" \\\n    --form \"maximum_timeout=\" \\\n    --form \"access_level=\" \\\n    | jq -r .token)\n  aws ssm put-parameter --overwrite --type SecureString  --name \"spot-runners-runner-token\" --value=\"$token\" --region \"eu-central-1\"\nfi\n\nsed -i.bak s/__REPLACED_BY_USER_DATA__/`echo $token`/g /etc/gitlab-runner/config.toml\n\n# A small script to remove this runner from being registered with Gitlab.\ncat \u003c\u003cREM \u003e /etc/rc.d/init.d/remove_gitlab_registration\n#!/bin/bash\n# chkconfig: 1356 99 03\n# description: cleans up gitlab runner key\n# processname: remove_runner_key\n#              /etc/rc.d/init.d/remove_gitlab_registration\nlockfile=/var/lock/subsys/remove_gitlab_registration\n\n# This lockfile is necessary so that we'll run the cleanup later.\nstart() {\n    logger \"Setting up Runner Removal Lockfile\"\n    touch \\$lockfile\n}\n\n# Overwrite token in SSM with null and remove runner from Gitlab\nstop() {\n    logger \"Removing Gitlab Runner Token\"\n    aws ssm put-parameter --overwrite --type SecureString  --name \"spot-runners-runner-token\" --region \"eu-central-1\" --value=\"null\" 2\u003e\u00261 | logger \u0026\n    curl -sS --request DELETE \"https://gitlab.com/api/v4/runners\" --form \"token=$token\" 2\u003e\u00261 | logger \u0026\n    retval=\\$?\n    rm -f \\$lockfile\n    return \\$retval\n}\n\n# Map these to start just to be redunant.\n# We don't want to run Stop outside of shutdown.\nrestart() {\n  start\n}\nreload() {\n  start\n}\n\n# Do nothing - there's no status.\nstatus() {\n  :\n}\n\ncase \"\\$1\" in\n    start)\n        \\$1\n        ;;\n    stop)\n        \\$1\n        ;;\n    restart)\n        \\$1\n        ;;\n    status)\n        \\$1\n        ;;\n    *)\n        echo \"Usage: \\$0 {start|stop|status|restart}\"\n        exit 2\n        ;;\nesac\nREM\n\nchmod a+x /etc/init.d/remove_gitlab_registration\n\n# Use chkconfig to link into the runlevel 0 (shutdown) directories\n# This adds \"start\" scripts to levels 1,3,5, and 6, and a \"stop\" to the others.\n# This way we'll not be assigned jobs if we're shutting down, and clean up in Gitlab.\nchkconfig --add remove_gitlab_registration\n\n# As noted above, this does nothing more than make the lockfile.\nservice remove_gitlab_registration start\n\n\n\nservice gitlab-runner restart\nchkconfig gitlab-runner on\n\n",
          "user_data_base64": null,
          "vpc_classic_link_id": "",
          "vpc_classic_link_security_groups": []
        },
        "after_unknown": {},
        "before_sensitive": {
          "ebs_block_device": [],
          "ephemeral_block_device": [],
          "metadata_options": [],
          "root_block_device": [
            {}
          ],
          "security_groups": [
            false
          ],
          "vpc_classic_link_security_groups": []
        },
        "after_sensitive": {
          "ebs_block_device": [],
          "ephemeral_block_device": [],
          "metadata_options": [],
          "root_block_device": [
            {}
          ],
          "security_groups": [
            false
          ],
          "vpc_classic_link_security_groups": []
        }
      }
    },
    {
      "address": "module.runner.aws_security_group.docker_machine",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "docker_machine",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:security-group/sg-0f11947f51d7e014d",
          "description": "A security group containing docker-machine instances",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Allow egress traffic for group spot-runners-docker-machine20210629064407218300000004",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "id": "sg-0f11947f51d7e014d",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "Allow SSH traffic from sg-04e61a7ee5a3569e2 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004 on port 22",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-04e61a7ee5a3569e2"
              ],
              "self": false,
              "to_port": 22
            },
            {
              "cidr_blocks": [],
              "description": "Allow SSH traffic within group spot-runners-docker-machine20210629064407218300000004 on port 22",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 22
            },
            {
              "cidr_blocks": [],
              "description": "Allow docker-machine traffic from group spot-runners-security-group20210629064407225300000005 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004",
              "from_port": 2376,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-04e61a7ee5a3569e2"
              ],
              "self": false,
              "to_port": 2376
            },
            {
              "cidr_blocks": [],
              "description": "Allow docker-machine traffic within group spot-runners-docker-machine20210629064407218300000004 on port 2376",
              "from_port": 2376,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 2376
            }
          ],
          "name": "spot-runners-docker-machine20210629064407218300000004",
          "name_prefix": "spot-runners-docker-machine",
          "owner_id": "111111111111",
          "revoke_rules_on_delete": false,
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "timeouts": null,
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:security-group/sg-0f11947f51d7e014d",
          "description": "A security group containing docker-machine instances",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Allow egress traffic for group spot-runners-docker-machine20210629064407218300000004",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "id": "sg-0f11947f51d7e014d",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "Allow SSH traffic from sg-04e61a7ee5a3569e2 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004 on port 22",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-04e61a7ee5a3569e2"
              ],
              "self": false,
              "to_port": 22
            },
            {
              "cidr_blocks": [],
              "description": "Allow SSH traffic within group spot-runners-docker-machine20210629064407218300000004 on port 22",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 22
            },
            {
              "cidr_blocks": [],
              "description": "Allow docker-machine traffic from group spot-runners-security-group20210629064407225300000005 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004",
              "from_port": 2376,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-04e61a7ee5a3569e2"
              ],
              "self": false,
              "to_port": 2376
            },
            {
              "cidr_blocks": [],
              "description": "Allow docker-machine traffic within group spot-runners-docker-machine20210629064407218300000004 on port 2376",
              "from_port": 2376,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 2376
            }
          ],
          "name": "spot-runners-docker-machine20210629064407218300000004",
          "name_prefix": "spot-runners-docker-machine",
          "owner_id": "111111111111",
          "revoke_rules_on_delete": false,
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "timeouts": null,
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after_unknown": {},
        "before_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.runner.aws_security_group.runner",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "runner",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:security-group/sg-04e61a7ee5a3569e2",
          "description": "A security group containing gitlab-runner agent instances",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [
                "::/0"
              ],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "id": "sg-04e61a7ee5a3569e2",
          "ingress": [],
          "name": "spot-runners-security-group20210629064407225300000005",
          "name_prefix": "spot-runners-security-group",
          "owner_id": "111111111111",
          "revoke_rules_on_delete": false,
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "timeouts": null,
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:security-group/sg-04e61a7ee5a3569e2",
          "description": "A security group containing gitlab-runner agent instances",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": null,
              "from_port": 0,
              "ipv6_cidr_blocks": [
                "::/0"
              ],
              "prefix_list_ids": null,
              "protocol": "-1",
              "security_groups": null,
              "self": null,
              "to_port": 0
            }
          ],
          "id": "sg-04e61a7ee5a3569e2",
          "ingress": [],
          "name": "spot-runners-security-group20210629064407225300000005",
          "name_prefix": "spot-runners-security-group",
          "owner_id": "111111111111",
          "revoke_rules_on_delete": false,
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "timeouts": null,
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after_unknown": {},
        "before_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [
                false
              ],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [
                false
              ]
            }
          ],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.runner.aws_security_group_rule.docker_machine_docker_runner",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "docker_machine_docker_runner",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "Allow docker-machine traffic from group spot-runners-security-group20210629064407225300000005 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004",
          "from_port": 2376,
          "id": "sgrule-1094927821",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0f11947f51d7e014d",
          "self": false,
          "source_security_group_id": "sg-04e61a7ee5a3569e2",
          "to_port": 2376,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "Allow docker-machine traffic from group spot-runners-security-group20210629064407225300000005 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004",
          "from_port": 2376,
          "id": "sgrule-1094927821",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0f11947f51d7e014d",
          "self": false,
          "source_security_group_id": "sg-04e61a7ee5a3569e2",
          "to_port": 2376,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.runner.aws_security_group_rule.docker_machine_docker_self",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "docker_machine_docker_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "Allow docker-machine traffic within group spot-runners-docker-machine20210629064407218300000004 on port 2376",
          "from_port": 2376,
          "id": "sgrule-1846859719",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0f11947f51d7e014d",
          "self": true,
          "source_security_group_id": "sg-0f11947f51d7e014d",
          "to_port": 2376,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "Allow docker-machine traffic within group spot-runners-docker-machine20210629064407218300000004 on port 2376",
          "from_port": 2376,
          "id": "sgrule-1846859719",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0f11947f51d7e014d",
          "self": true,
          "source_security_group_id": "sg-0f11947f51d7e014d",
          "to_port": 2376,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.runner.aws_security_group_rule.docker_machine_ssh_runner[0]",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "docker_machine_ssh_runner",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "Allow SSH traffic from sg-04e61a7ee5a3569e2 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004 on port 22",
          "from_port": 22,
          "id": "sgrule-2770509898",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0f11947f51d7e014d",
          "self": false,
          "source_security_group_id": "sg-04e61a7ee5a3569e2",
          "to_port": 22,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "Allow SSH traffic from sg-04e61a7ee5a3569e2 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004 on port 22",
          "from_port": 22,
          "id": "sgrule-2770509898",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0f11947f51d7e014d",
          "self": false,
          "source_security_group_id": "sg-04e61a7ee5a3569e2",
          "to_port": 22,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.runner.aws_security_group_rule.docker_machine_ssh_self",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "docker_machine_ssh_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "Allow SSH traffic within group spot-runners-docker-machine20210629064407218300000004 on port 22",
          "from_port": 22,
          "id": "sgrule-2322936384",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0f11947f51d7e014d",
          "self": true,
          "source_security_group_id": "sg-0f11947f51d7e014d",
          "to_port": 22,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "Allow SSH traffic within group spot-runners-docker-machine20210629064407218300000004 on port 22",
          "from_port": 22,
          "id": "sgrule-2322936384",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0f11947f51d7e014d",
          "self": true,
          "source_security_group_id": "sg-0f11947f51d7e014d",
          "to_port": 22,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.runner.aws_security_group_rule.out_all",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "out_all",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "Allow egress traffic for group spot-runners-docker-machine20210629064407218300000004",
          "from_port": 0,
          "id": "sgrule-3708414327",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "-1",
          "security_group_id": "sg-0f11947f51d7e014d",
          "self": false,
          "source_security_group_id": null,
          "to_port": 0,
          "type": "egress"
        },
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "Allow egress traffic for group spot-runners-docker-machine20210629064407218300000004",
          "from_port": 0,
          "id": "sgrule-3708414327",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "-1",
          "security_group_id": "sg-0f11947f51d7e014d",
          "self": false,
          "source_security_group_id": null,
          "to_port": 65535,
          "type": "egress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [
            false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [
            false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.runner.aws_ssm_parameter.runner_registration_token",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "runner_registration_token",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "allowed_pattern": "",
          "arn": "arn:aws:ssm:us-east-1:111111111111:parameter/spot-runners-runner-token",
          "data_type": "text",
          "description": "",
          "id": "spot-runners-runner-token",
          "key_id": "alias/aws/ssm",
          "name": "spot-runners-runner-token",
          "overwrite": null,
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tier": "Standard",
          "type": "SecureString",
          "value": "null",
          "version": 1
        },
        "after": {
          "allowed_pattern": "",
          "arn": "arn:aws:ssm:us-east-1:111111111111:parameter/spot-runners-runner-token",
          "data_type": "text",
          "description": "",
          "id": "spot-runners-runner-token",
          "key_id": "alias/aws/ssm",
          "name": "spot-runners-runner-token",
          "overwrite": null,
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tier": "Standard",
          "type": "SecureString",
          "value": "null",
          "version": 1
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.runner.data.aws_ami.docker-machine",
      "module_address": "module.runner",
      "mode": "data",
      "type": "aws_ami",
      "name": "docker-machine",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": {
          "architecture": "x86_64",
          "arn": "arn:aws:ec2:us-east-1::image/ami-0dd76f917833aac4b",
          "block_device_mappings": [
            {
              "device_name": "/dev/sda1",
              "ebs": {
                "delete_on_termination": "true",
                "encrypted": "false",
                "iops": "0",
                "snapshot_id": "snap-0575f9666981a797f",
                "throughput": "0",
                "volume_size": "8",
                "volume_type": "gp2"
              },
              "no_device": "",
              "virtual_name": ""
            },
            {
              "device_name": "/dev/sdb",
              "ebs": {},
              "no_device": "",
              "virtual_name": "ephemeral0"
            },
            {
              "device_name": "/dev/sdc",
              "ebs": {},
              "no_device": "",
              "virtual_name": "ephemeral1"
            }
          ],
          "creation_date": "2021-06-22T20:54:40.000Z",
          "description": "Canonical, Ubuntu, 20.04 LTS, amd64 focal image build on 2021-06-21",
          "ena_support": true,
          "executable_users": null,
          "filter": [
            {
              "name": "name",
              "values": [
                "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"
              ]
            }
          ],
          "hypervisor": "xen",
          "id": "ami-0dd76f917833aac4b",
          "image_id": "ami-0dd76f917833aac4b",
          "image_location": "099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210621",
          "image_owner_alias": null,
          "image_type": "machine",
          "kernel_id": null,
          "most_recent": true,
          "name": "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210621",
          "name_regex": null,
          "owner_id": "099720109477",
          "owners": [
            "099720109477"
          ],
          "platform": null,
          "platform_details": "Linux/UNIX",
          "product_codes": [],
          "public": true,
          "ramdisk_id": null,
          "root_device_name": "/dev/sda1",
          "root_device_type": "ebs",
          "root_snapshot_id": "snap-0575f9666981a797f",
          "sriov_net_support": "simple",
          "state": "available",
          "state_reason": {
            "code": "UNSET",
            "message": "UNSET"
          },
          "tags": {},
          "usage_operation": "RunInstances",
          "virtualization_type": "hvm"
        },
        "after": {
          "architecture": "x86_64",
          "arn": "arn:aws:ec2:us-east-1::image/ami-0dd76f917833aac4b",
          "block_device_mappings": [
            {
              "device_name": "/dev/sda1",
              "ebs": {
                "delete_on_termination": "true",
                "encrypted": "false",
                "iops": "0",
                "snapshot_id": "snap-0575f9666981a797f",
                "throughput": "0",
                "volume_size": "8",
                "volume_type": "gp2"
              },
              "no_device": "",
              "virtual_name": ""
            },
            {
              "device_name": "/dev/sdb",
              "ebs": {},
              "no_device": "",
              "virtual_name": "ephemeral0"
            },
            {
              "device_name": "/dev/sdc",
              "ebs": {},
              "no_device": "",
              "virtual_name": "ephemeral1"
            }
          ],
          "creation_date": "2021-06-22T20:54:40.000Z",
          "description": "Canonical, Ubuntu, 20.04 LTS, amd64 focal image build on 2021-06-21",
          "ena_support": true,
          "executable_users": null,
          "filter": [
            {
              "name": "name",
              "values": [
                "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"
              ]
            }
          ],
          "hypervisor": "xen",
          "id": "ami-0dd76f917833aac4b",
          "image_id": "ami-0dd76f917833aac4b",
          "image_location": "099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210621",
          "image_owner_alias": null,
          "image_type": "machine",
          "kernel_id": null,
          "most_recent": true,
          "name": "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210621",
          "name_regex": null,
          "owner_id": "099720109477",
          "owners": [
            "099720109477"
          ],
          "platform": null,
          "platform_details": "Linux/UNIX",
          "product_codes": [],
          "public": true,
          "ramdisk_id": null,
          "root_device_name": "/dev/sda1",
          "root_device_type": "ebs",
          "root_snapshot_id": "snap-0575f9666981a797f",
          "sriov_net_support": "simple",
          "state": "available",
          "state_reason": {
            "code": "UNSET",
            "message": "UNSET"
          },
          "tags": {},
          "usage_operation": "RunInstances",
          "virtualization_type": "hvm"
        },
        "after_unknown": {},
        "before_sensitive": {
          "block_device_mappings": [
            {
              "ebs": {}
            },
            {
              "ebs": {}
            },
            {
              "ebs": {}
            }
          ],
          "filter": [
            {
              "values": [
                false
              ]
            }
          ],
          "owners": [
            false
          ],
          "product_codes": [],
          "state_reason": {},
          "tags": {}
        },
        "after_sensitive": {
          "block_device_mappings": [
            {
              "ebs": {}
            },
            {
              "ebs": {}
            },
            {
              "ebs": {}
            }
          ],
          "filter": [
            {
              "values": [
                false
              ]
            }
          ],
          "owners": [
            false
          ],
          "product_codes": [],
          "state_reason": {},
          "tags": {}
        }
      }
    },
    {
      "address": "module.runner.data.aws_ami.runner",
      "module_address": "module.runner",
      "mode": "data",
      "type": "aws_ami",
      "name": "runner",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": {
          "architecture": "x86_64",
          "arn": "arn:aws:ec2:us-east-1::image/ami-0e362514299d32abe",
          "block_device_mappings": [
            {
              "device_name": "/dev/xvda",
              "ebs": {
                "delete_on_termination": "true",
                "encrypted": "false",
                "iops": "0",
                "snapshot_id": "snap-03e9050b362f59715",
                "throughput": "0",
                "volume_size": "8",
                "volume_type": "standard"
              },
              "no_device": "",
              "virtual_name": ""
            }
          ],
          "creation_date": "2021-06-17T17:35:21.000Z",
          "description": "Amazon Linux 2 AMI 2.0.20210617.0 x86_64 HVM ebs",
          "ena_support": true,
          "executable_users": null,
          "filter": [
            {
              "name": "name",
              "values": [
                "amzn2-ami-hvm-2.*-x86_64-ebs"
              ]
            }
          ],
          "hypervisor": "xen",
          "id": "ami-0e362514299d32abe",
          "image_id": "ami-0e362514299d32abe",
          "image_location": "amazon/amzn2-ami-hvm-2.0.20210617.0-x86_64-ebs",
          "image_owner_alias": "amazon",
          "image_type": "machine",
          "kernel_id": null,
          "most_recent": true,
          "name": "amzn2-ami-hvm-2.0.20210617.0-x86_64-ebs",
          "name_regex": null,
          "owner_id": "137112412989",
          "owners": [
            "amazon"
          ],
          "platform": null,
          "platform_details": "Linux/UNIX",
          "product_codes": [],
          "public": true,
          "ramdisk_id": null,
          "root_device_name": "/dev/xvda",
          "root_device_type": "ebs",
          "root_snapshot_id": "snap-03e9050b362f59715",
          "sriov_net_support": "simple",
          "state": "available",
          "state_reason": {
            "code": "UNSET",
            "message": "UNSET"
          },
          "tags": {},
          "usage_operation": "RunInstances",
          "virtualization_type": "hvm"
        },
        "after": {
          "architecture": "x86_64",
          "arn": "arn:aws:ec2:us-east-1::image/ami-0e362514299d32abe",
          "block_device_mappings": [
            {
              "device_name": "/dev/xvda",
              "ebs": {
                "delete_on_termination": "true",
                "encrypted": "false",
                "iops": "0",
                "snapshot_id": "snap-03e9050b362f59715",
                "throughput": "0",
                "volume_size": "8",
                "volume_type": "standard"
              },
              "no_device": "",
              "virtual_name": ""
            }
          ],
          "creation_date": "2021-06-17T17:35:21.000Z",
          "description": "Amazon Linux 2 AMI 2.0.20210617.0 x86_64 HVM ebs",
          "ena_support": true,
          "executable_users": null,
          "filter": [
            {
              "name": "name",
              "values": [
                "amzn2-ami-hvm-2.*-x86_64-ebs"
              ]
            }
          ],
          "hypervisor": "xen",
          "id": "ami-0e362514299d32abe",
          "image_id": "ami-0e362514299d32abe",
          "image_location": "amazon/amzn2-ami-hvm-2.0.20210617.0-x86_64-ebs",
          "image_owner_alias": "amazon",
          "image_type": "machine",
          "kernel_id": null,
          "most_recent": true,
          "name": "amzn2-ami-hvm-2.0.20210617.0-x86_64-ebs",
          "name_regex": null,
          "owner_id": "137112412989",
          "owners": [
            "amazon"
          ],
          "platform": null,
          "platform_details": "Linux/UNIX",
          "product_codes": [],
          "public": true,
          "ramdisk_id": null,
          "root_device_name": "/dev/xvda",
          "root_device_type": "ebs",
          "root_snapshot_id": "snap-03e9050b362f59715",
          "sriov_net_support": "simple",
          "state": "available",
          "state_reason": {
            "code": "UNSET",
            "message": "UNSET"
          },
          "tags": {},
          "usage_operation": "RunInstances",
          "virtualization_type": "hvm"
        },
        "after_unknown": {},
        "before_sensitive": {
          "block_device_mappings": [
            {
              "ebs": {}
            }
          ],
          "filter": [
            {
              "values": [
                false
              ]
            }
          ],
          "owners": [
            false
          ],
          "product_codes": [],
          "state_reason": {},
          "tags": {}
        },
        "after_sensitive": {
          "block_device_mappings": [
            {
              "ebs": {}
            }
          ],
          "filter": [
            {
              "values": [
                false
              ]
            }
          ],
          "owners": [
            false
          ],
          "product_codes": [],
          "state_reason": {},
          "tags": {}
        }
      }
    },
    {
      "address": "module.runner.data.aws_availability_zone.runners",
      "module_address": "module.runner",
      "mode": "data",
      "type": "aws_availability_zone",
      "name": "runners",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": {
          "all_availability_zones": null,
          "filter": null,
          "group_name": "us-east-1",
          "id": "us-east-1a",
          "name": "us-east-1a",
          "name_suffix": "a",
          "network_border_group": "us-east-1",
          "opt_in_status": "opt-in-not-required",
          "parent_zone_id": "",
          "parent_zone_name": "",
          "region": "us-east-1",
          "state": "available",
          "zone_id": "use1-az1",
          "zone_type": "availability-zone"
        },
        "after": {
          "all_availability_zones": null,
          "filter": null,
          "group_name": "us-east-1",
          "id": "us-east-1a",
          "name": "us-east-1a",
          "name_suffix": "a",
          "network_border_group": "us-east-1",
          "opt_in_status": "opt-in-not-required",
          "parent_zone_id": "",
          "parent_zone_name": "",
          "region": "us-east-1",
          "state": "available",
          "zone_id": "use1-az1",
          "zone_type": "availability-zone"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.runner.data.aws_caller_identity.current",
      "module_address": "module.runner",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": {
          "account_id": "111111111111",
          "arn": "arn:aws:sts::111111111111:assumed-role/AWSReservedSSO_admin_in_develop_fb314e4593b59bf2/imanuel.m@indeni.com",
          "id": "111111111111",
          "user_id": "AROARVZ4AQRHRH7ZLU5BZ:imanuel.m@indeni.com"
        },
        "after": {
          "account_id": "111111111111",
          "arn": "arn:aws:sts::111111111111:assumed-role/AWSReservedSSO_admin_in_develop_fb314e4593b59bf2/imanuel.m@indeni.com",
          "id": "111111111111",
          "user_id": "AROARVZ4AQRHRH7ZLU5BZ:imanuel.m@indeni.com"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.runner.data.aws_subnet.runners",
      "module_address": "module.runner",
      "mode": "data",
      "type": "aws_subnet",
      "name": "runners",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-0b6949a41c3b71d3a",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "availability_zone_id": "use1-az1",
          "available_ip_address_count": 250,
          "cidr_block": "10.0.1.0/24",
          "customer_owned_ipv4_pool": "",
          "default_for_az": false,
          "filter": null,
          "id": "subnet-0b6949a41c3b71d3a",
          "ipv6_cidr_block": null,
          "ipv6_cidr_block_association_id": null,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "111111111111",
          "state": "available",
          "tags": {
            "Name": "my-vpc-private-us-east-1a"
          },
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-0b6949a41c3b71d3a",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "availability_zone_id": "use1-az1",
          "available_ip_address_count": 250,
          "cidr_block": "10.0.1.0/24",
          "customer_owned_ipv4_pool": "",
          "default_for_az": false,
          "filter": null,
          "id": "subnet-0b6949a41c3b71d3a",
          "ipv6_cidr_block": null,
          "ipv6_cidr_block_association_id": null,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "111111111111",
          "state": "available",
          "tags": {
            "Name": "my-vpc-private-us-east-1a"
          },
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {}
        },
        "after_sensitive": {
          "tags": {}
        }
      }
    },
    {
      "address": "module.runner.data.null_data_source.agent_tags[0]",
      "module_address": "module.runner",
      "mode": "data",
      "type": "null_data_source",
      "name": "agent_tags",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "read"
        ],
        "before": {
          "has_computed_default": "default",
          "id": "static",
          "inputs": {
            "key": "Environment",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "outputs": {
            "key": "Environment",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "random": "2600082111656026709"
        },
        "after": {
          "has_computed_default": "default",
          "id": "static",
          "inputs": {
            "key": "Environment",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "outputs": {
            "key": "Environment",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "random": "2600082111656026709"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inputs": {},
          "outputs": {}
        },
        "after_sensitive": {
          "inputs": {},
          "outputs": {}
        }
      }
    },
    {
      "address": "module.runner.data.null_data_source.agent_tags[1]",
      "module_address": "module.runner",
      "mode": "data",
      "type": "null_data_source",
      "name": "agent_tags",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "read"
        ],
        "before": {
          "has_computed_default": "default",
          "id": "static",
          "inputs": {
            "key": "Name",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "outputs": {
            "key": "Name",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "random": "6411846770691303138"
        },
        "after": {
          "has_computed_default": "default",
          "id": "static",
          "inputs": {
            "key": "Name",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "outputs": {
            "key": "Name",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "random": "6411846770691303138"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inputs": {},
          "outputs": {}
        },
        "after_sensitive": {
          "inputs": {},
          "outputs": {}
        }
      }
    },
    {
      "address": "module.runner.data.null_data_source.tags[0]",
      "module_address": "module.runner",
      "mode": "data",
      "type": "null_data_source",
      "name": "tags",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "read"
        ],
        "before": {
          "has_computed_default": "default",
          "id": "static",
          "inputs": {
            "key": "Environment",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "outputs": {
            "key": "Environment",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "random": "8395036676992944573"
        },
        "after": {
          "has_computed_default": "default",
          "id": "static",
          "inputs": {
            "key": "Environment",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "outputs": {
            "key": "Environment",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "random": "8395036676992944573"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inputs": {},
          "outputs": {}
        },
        "after_sensitive": {
          "inputs": {},
          "outputs": {}
        }
      }
    },
    {
      "address": "module.runner.data.null_data_source.tags[1]",
      "module_address": "module.runner",
      "mode": "data",
      "type": "null_data_source",
      "name": "tags",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "read"
        ],
        "before": {
          "has_computed_default": "default",
          "id": "static",
          "inputs": {
            "key": "Name",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "outputs": {
            "key": "Name",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "random": "5777972786976594649"
        },
        "after": {
          "has_computed_default": "default",
          "id": "static",
          "inputs": {
            "key": "Name",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "outputs": {
            "key": "Name",
            "propagate_at_launch": "true",
            "value": "spot-runners"
          },
          "random": "5777972786976594649"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inputs": {},
          "outputs": {}
        },
        "after_sensitive": {
          "inputs": {},
          "outputs": {}
        }
      }
    },
    {
      "address": "module.runner.module.cache.aws_iam_policy.docker_machine_cache[0]",
      "module_address": "module.runner.module.cache",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "docker_machine_cache",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
          "description": "Policy for docker machine instance to access cache",
          "id": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
          "name": "spot-runners-docker-machine-cache",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowGitLabRunnersAccessCache\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:PutObjectAcl\",\n        \"s3:GetObject\",\n        \"s3:GetObjectAcl\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::111111111111-gitlab-runner-cache/*\"\n      ]\n    }\n  ]\n}\n",
          "policy_id": "ANPARVZ4AQRHY4HK34I7A",
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          }
        },
        "after": {
          "arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
          "description": "Policy for docker machine instance to access cache",
          "id": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
          "name": "spot-runners-docker-machine-cache",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowGitLabRunnersAccessCache\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:PutObjectAcl\",\n        \"s3:GetObject\",\n        \"s3:GetObjectAcl\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::111111111111-gitlab-runner-cache/*\"\n      ]\n    }\n  ]\n}\n",
          "policy_id": "ANPARVZ4AQRHY4HK34I7A",
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.runner.module.cache.aws_s3_bucket.build_cache[0]",
      "module_address": "module.runner.module.cache",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "build_cache",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "acceleration_status": "",
          "acl": "private",
          "arn": "arn:aws:s3:::111111111111-gitlab-runner-cache",
          "bucket": "111111111111-gitlab-runner-cache",
          "bucket_domain_name": "111111111111-gitlab-runner-cache.s3.amazonaws.com",
          "bucket_prefix": null,
          "bucket_regional_domain_name": "111111111111-gitlab-runner-cache.s3.amazonaws.com",
          "cors_rule": [],
          "force_destroy": true,
          "grant": [],
          "hosted_zone_id": "Z3AQBSTGFYJSTF",
          "id": "111111111111-gitlab-runner-cache",
          "lifecycle_rule": [
            {
              "abort_incomplete_multipart_upload_days": 0,
              "enabled": true,
              "expiration": [
                {
                  "date": "",
                  "days": 1,
                  "expired_object_delete_marker": false
                }
              ],
              "id": "clear",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "runner/",
              "tags": {},
              "transition": []
            }
          ],
          "logging": [],
          "object_lock_configuration": [],
          "policy": null,
          "region": "us-east-1",
          "replication_configuration": [],
          "request_payer": "BucketOwner",
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {
                      "kms_master_key_id": "",
                      "sse_algorithm": "AES256"
                    }
                  ],
                  "bucket_key_enabled": false
                }
              ]
            }
          ],
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "versioning": [
            {
              "enabled": false,
              "mfa_delete": false
            }
          ],
          "website": [],
          "website_domain": null,
          "website_endpoint": null
        },
        "after": {
          "acceleration_status": "",
          "acl": "private",
          "arn": "arn:aws:s3:::111111111111-gitlab-runner-cache",
          "bucket": "111111111111-gitlab-runner-cache",
          "bucket_domain_name": "111111111111-gitlab-runner-cache.s3.amazonaws.com",
          "bucket_prefix": null,
          "bucket_regional_domain_name": "111111111111-gitlab-runner-cache.s3.amazonaws.com",
          "cors_rule": [],
          "force_destroy": true,
          "grant": [],
          "hosted_zone_id": "Z3AQBSTGFYJSTF",
          "id": "111111111111-gitlab-runner-cache",
          "lifecycle_rule": [
            {
              "abort_incomplete_multipart_upload_days": null,
              "enabled": true,
              "expiration": [
                {
                  "date": null,
                  "days": 1,
                  "expired_object_delete_marker": null
                }
              ],
              "id": "clear",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "runner/",
              "tags": null,
              "transition": []
            }
          ],
          "logging": [],
          "object_lock_configuration": [],
          "policy": null,
          "region": "us-east-1",
          "replication_configuration": [],
          "request_payer": "BucketOwner",
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {
                      "kms_master_key_id": null,
                      "sse_algorithm": "AES256"
                    }
                  ],
                  "bucket_key_enabled": null
                }
              ]
            }
          ],
          "tags": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "tags_all": {
            "Environment": "spot-runners",
            "Name": "spot-runners"
          },
          "versioning": [
            {
              "enabled": false,
              "mfa_delete": null
            }
          ],
          "website": [],
          "website_domain": null,
          "website_endpoint": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "cors_rule": [],
          "grant": [],
          "lifecycle_rule": [
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "tags": {},
              "transition": []
            }
          ],
          "logging": [],
          "object_lock_configuration": [],
          "replication_configuration": [],
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {}
                  ]
                }
              ]
            }
          ],
          "tags": {},
          "tags_all": {},
          "versioning": [
            {}
          ],
          "website": []
        },
        "after_sensitive": {
          "cors_rule": [],
          "grant": [],
          "lifecycle_rule": [
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            }
          ],
          "logging": [],
          "object_lock_configuration": [],
          "replication_configuration": [],
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {}
                  ]
                }
              ]
            }
          ],
          "tags": {},
          "tags_all": {},
          "versioning": [
            {}
          ],
          "website": []
        }
      }
    },
    {
      "address": "module.runner.module.cache.aws_s3_bucket_public_access_block.build_cache_policy[0]",
      "module_address": "module.runner.module.cache",
      "mode": "managed",
      "type": "aws_s3_bucket_public_access_block",
      "name": "build_cache_policy",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "block_public_acls": true,
          "block_public_policy": true,
          "bucket": "111111111111-gitlab-runner-cache",
          "id": "111111111111-gitlab-runner-cache",
          "ignore_public_acls": true,
          "restrict_public_buckets": true
        },
        "after": {
          "block_public_acls": true,
          "block_public_policy": true,
          "bucket": "111111111111-gitlab-runner-cache",
          "id": "111111111111-gitlab-runner-cache",
          "ignore_public_acls": true,
          "restrict_public_buckets": true
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.runner.module.cache.data.aws_caller_identity.current",
      "module_address": "module.runner.module.cache",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": {
          "account_id": "111111111111",
          "arn": "arn:aws:sts::111111111111:assumed-role/AWSReservedSSO_admin_in_develop_fb314e4593b59bf2/imanuel.m@indeni.com",
          "id": "111111111111",
          "user_id": "AROARVZ4AQRHRH7ZLU5BZ:imanuel.m@indeni.com"
        },
        "after": {
          "account_id": "111111111111",
          "arn": "arn:aws:sts::111111111111:assumed-role/AWSReservedSSO_admin_in_develop_fb314e4593b59bf2/imanuel.m@indeni.com",
          "id": "111111111111",
          "user_id": "AROARVZ4AQRHRH7ZLU5BZ:imanuel.m@indeni.com"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.runner.null_resource.remove_runner",
      "module_address": "module.runner",
      "mode": "managed",
      "type": "null_resource",
      "name": "remove_runner",
      "provider_name": "registry.terraform.io/hashicorp/null",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "755539463458684891",
          "triggers": {
            "aws_region": "eu-central-1",
            "runners_gitlab_url": "https://gitlab.com",
            "script": ".terraform/modules/runner/bin/remove-runner.sh",
            "secure_parameter_store_runner_token_key": "spot-runners-runner-token"
          }
        },
        "after": {
          "id": "755539463458684891",
          "triggers": {
            "aws_region": "eu-central-1",
            "runners_gitlab_url": "https://gitlab.com",
            "script": ".terraform/modules/runner/bin/remove-runner.sh",
            "secure_parameter_store_runner_token_key": "spot-runners-runner-token"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "triggers": {}
        },
        "after_sensitive": {
          "triggers": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_eip.nat[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "address": null,
          "allocation_id": null,
          "associate_with_private_ip": null,
          "association_id": "eipassoc-053b14c526a490295",
          "carrier_ip": "",
          "customer_owned_ip": "",
          "customer_owned_ipv4_pool": "",
          "domain": "vpc",
          "id": "eipalloc-0b021c244233f1d0d",
          "instance": "",
          "network_border_group": "us-east-1",
          "network_interface": "eni-02e617673b89b80b2",
          "private_dns": "ip-10-0-101-124.ec2.internal",
          "private_ip": "10.0.101.124",
          "public_dns": "ec2-34-203-54-123.compute-1.amazonaws.com",
          "public_ip": "34.203.54.123",
          "public_ipv4_pool": "amazon",
          "tags": {
            "Name": "my-vpc-us-east-1a"
          },
          "tags_all": {
            "Name": "my-vpc-us-east-1a"
          },
          "timeouts": null,
          "vpc": true
        },
        "after": {
          "address": null,
          "allocation_id": null,
          "associate_with_private_ip": null,
          "association_id": "eipassoc-053b14c526a490295",
          "carrier_ip": "",
          "customer_owned_ip": "",
          "customer_owned_ipv4_pool": "",
          "domain": "vpc",
          "id": "eipalloc-0b021c244233f1d0d",
          "instance": "",
          "network_border_group": "us-east-1",
          "network_interface": "eni-02e617673b89b80b2",
          "private_dns": "ip-10-0-101-124.ec2.internal",
          "private_ip": "10.0.101.124",
          "public_dns": "ec2-34-203-54-123.compute-1.amazonaws.com",
          "public_ip": "34.203.54.123",
          "public_ipv4_pool": "amazon",
          "tags": {
            "Name": "my-vpc-us-east-1a"
          },
          "tags_all": {
            "Name": "my-vpc-us-east-1a"
          },
          "timeouts": null,
          "vpc": true
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_internet_gateway.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:internet-gateway/igw-0fcc1183636e3b8d7",
          "id": "igw-0fcc1183636e3b8d7",
          "owner_id": "111111111111",
          "tags": {
            "Name": "my-vpc"
          },
          "tags_all": {
            "Name": "my-vpc"
          },
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:internet-gateway/igw-0fcc1183636e3b8d7",
          "id": "igw-0fcc1183636e3b8d7",
          "owner_id": "111111111111",
          "tags": {
            "Name": "my-vpc"
          },
          "tags_all": {
            "Name": "my-vpc"
          },
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_nat_gateway.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "allocation_id": "eipalloc-0b021c244233f1d0d",
          "connectivity_type": "public",
          "id": "nat-09bbccb2477bb5c89",
          "network_interface_id": "eni-02e617673b89b80b2",
          "private_ip": "10.0.101.124",
          "public_ip": "34.203.54.123",
          "subnet_id": "subnet-078845300b6d6c612",
          "tags": {
            "Name": "my-vpc-us-east-1a"
          },
          "tags_all": {
            "Name": "my-vpc-us-east-1a"
          }
        },
        "after": {
          "allocation_id": "eipalloc-0b021c244233f1d0d",
          "connectivity_type": "public",
          "id": "nat-09bbccb2477bb5c89",
          "network_interface_id": "eni-02e617673b89b80b2",
          "private_ip": "10.0.101.124",
          "public_ip": "34.203.54.123",
          "subnet_id": "subnet-078845300b6d6c612",
          "tags": {
            "Name": "my-vpc-us-east-1a"
          },
          "tags_all": {
            "Name": "my-vpc-us-east-1a"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route.private_nat_gateway[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "carrier_gateway_id": "",
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "",
          "id": "r-rtb-077a028aecff03dd51080289494",
          "instance_id": "",
          "instance_owner_id": "",
          "local_gateway_id": "",
          "nat_gateway_id": "nat-09bbccb2477bb5c89",
          "network_interface_id": "",
          "origin": "CreateRoute",
          "route_table_id": "rtb-077a028aecff03dd5",
          "state": "active",
          "timeouts": {
            "create": "5m",
            "delete": null
          },
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
        },
        "after": {
          "carrier_gateway_id": "",
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "",
          "id": "r-rtb-077a028aecff03dd51080289494",
          "instance_id": "",
          "instance_owner_id": "",
          "local_gateway_id": "",
          "nat_gateway_id": "nat-09bbccb2477bb5c89",
          "network_interface_id": "",
          "origin": "CreateRoute",
          "route_table_id": "rtb-077a028aecff03dd5",
          "state": "active",
          "timeouts": {
            "create": "5m",
            "delete": null
          },
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
        },
        "after_unknown": {},
        "before_sensitive": {
          "timeouts": {}
        },
        "after_sensitive": {
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route.public_internet_gateway[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "carrier_gateway_id": "",
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "igw-0fcc1183636e3b8d7",
          "id": "r-rtb-02bcb211549855a9a1080289494",
          "instance_id": "",
          "instance_owner_id": "",
          "local_gateway_id": "",
          "nat_gateway_id": "",
          "network_interface_id": "",
          "origin": "CreateRoute",
          "route_table_id": "rtb-02bcb211549855a9a",
          "state": "active",
          "timeouts": {
            "create": "5m",
            "delete": null
          },
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
        },
        "after": {
          "carrier_gateway_id": "",
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "igw-0fcc1183636e3b8d7",
          "id": "r-rtb-02bcb211549855a9a1080289494",
          "instance_id": "",
          "instance_owner_id": "",
          "local_gateway_id": "",
          "nat_gateway_id": "",
          "network_interface_id": "",
          "origin": "CreateRoute",
          "route_table_id": "rtb-02bcb211549855a9a",
          "state": "active",
          "timeouts": {
            "create": "5m",
            "delete": null
          },
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
        },
        "after_unknown": {},
        "before_sensitive": {
          "timeouts": {}
        },
        "after_sensitive": {
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route_table.private[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:route-table/rtb-077a028aecff03dd5",
          "id": "rtb-077a028aecff03dd5",
          "owner_id": "111111111111",
          "propagating_vgws": [],
          "route": [
            {
              "carrier_gateway_id": "",
              "cidr_block": "0.0.0.0/0",
              "destination_prefix_list_id": "",
              "egress_only_gateway_id": "",
              "gateway_id": "",
              "instance_id": "",
              "ipv6_cidr_block": "",
              "local_gateway_id": "",
              "nat_gateway_id": "nat-09bbccb2477bb5c89",
              "network_interface_id": "",
              "transit_gateway_id": "",
              "vpc_endpoint_id": "",
              "vpc_peering_connection_id": ""
            }
          ],
          "tags": {
            "Name": "my-vpc-private-us-east-1a"
          },
          "tags_all": {
            "Name": "my-vpc-private-us-east-1a"
          },
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:route-table/rtb-077a028aecff03dd5",
          "id": "rtb-077a028aecff03dd5",
          "owner_id": "111111111111",
          "propagating_vgws": [],
          "route": [
            {
              "carrier_gateway_id": "",
              "cidr_block": "0.0.0.0/0",
              "destination_prefix_list_id": "",
              "egress_only_gateway_id": "",
              "gateway_id": "",
              "instance_id": "",
              "ipv6_cidr_block": "",
              "local_gateway_id": "",
              "nat_gateway_id": "nat-09bbccb2477bb5c89",
              "network_interface_id": "",
              "transit_gateway_id": "",
              "vpc_endpoint_id": "",
              "vpc_peering_connection_id": ""
            }
          ],
          "tags": {
            "Name": "my-vpc-private-us-east-1a"
          },
          "tags_all": {
            "Name": "my-vpc-private-us-east-1a"
          },
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after_unknown": {},
        "before_sensitive": {
          "propagating_vgws": [],
          "route": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route_table.public[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:route-table/rtb-02bcb211549855a9a",
          "id": "rtb-02bcb211549855a9a",
          "owner_id": "111111111111",
          "propagating_vgws": [],
          "route": [
            {
              "carrier_gateway_id": "",
              "cidr_block": "0.0.0.0/0",
              "destination_prefix_list_id": "",
              "egress_only_gateway_id": "",
              "gateway_id": "igw-0fcc1183636e3b8d7",
              "instance_id": "",
              "ipv6_cidr_block": "",
              "local_gateway_id": "",
              "nat_gateway_id": "",
              "network_interface_id": "",
              "transit_gateway_id": "",
              "vpc_endpoint_id": "",
              "vpc_peering_connection_id": ""
            }
          ],
          "tags": {
            "Name": "my-vpc-public"
          },
          "tags_all": {
            "Name": "my-vpc-public"
          },
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:route-table/rtb-02bcb211549855a9a",
          "id": "rtb-02bcb211549855a9a",
          "owner_id": "111111111111",
          "propagating_vgws": [],
          "route": [
            {
              "carrier_gateway_id": "",
              "cidr_block": "0.0.0.0/0",
              "destination_prefix_list_id": "",
              "egress_only_gateway_id": "",
              "gateway_id": "igw-0fcc1183636e3b8d7",
              "instance_id": "",
              "ipv6_cidr_block": "",
              "local_gateway_id": "",
              "nat_gateway_id": "",
              "network_interface_id": "",
              "transit_gateway_id": "",
              "vpc_endpoint_id": "",
              "vpc_peering_connection_id": ""
            }
          ],
          "tags": {
            "Name": "my-vpc-public"
          },
          "tags_all": {
            "Name": "my-vpc-public"
          },
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after_unknown": {},
        "before_sensitive": {
          "propagating_vgws": [],
          "route": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.private[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "gateway_id": "",
          "id": "rtbassoc-099d719101045e997",
          "route_table_id": "rtb-077a028aecff03dd5",
          "subnet_id": "subnet-0b6949a41c3b71d3a"
        },
        "after": {
          "gateway_id": "",
          "id": "rtbassoc-099d719101045e997",
          "route_table_id": "rtb-077a028aecff03dd5",
          "subnet_id": "subnet-0b6949a41c3b71d3a"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.public[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "gateway_id": "",
          "id": "rtbassoc-0f4c25ff6d9b293c1",
          "route_table_id": "rtb-02bcb211549855a9a",
          "subnet_id": "subnet-078845300b6d6c612"
        },
        "after": {
          "gateway_id": "",
          "id": "rtbassoc-0f4c25ff6d9b293c1",
          "route_table_id": "rtb-02bcb211549855a9a",
          "subnet_id": "subnet-078845300b6d6c612"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_subnet.private[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-0b6949a41c3b71d3a",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "availability_zone_id": "use1-az1",
          "cidr_block": "10.0.1.0/24",
          "customer_owned_ipv4_pool": "",
          "id": "subnet-0b6949a41c3b71d3a",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "111111111111",
          "tags": {
            "Name": "my-vpc-private-us-east-1a"
          },
          "tags_all": {
            "Name": "my-vpc-private-us-east-1a"
          },
          "timeouts": null,
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-0b6949a41c3b71d3a",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "availability_zone_id": "use1-az1",
          "cidr_block": "10.0.1.0/24",
          "customer_owned_ipv4_pool": "",
          "id": "subnet-0b6949a41c3b71d3a",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "111111111111",
          "tags": {
            "Name": "my-vpc-private-us-east-1a"
          },
          "tags_all": {
            "Name": "my-vpc-private-us-east-1a"
          },
          "timeouts": null,
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.public[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-078845300b6d6c612",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "availability_zone_id": "use1-az1",
          "cidr_block": "10.0.101.0/24",
          "customer_owned_ipv4_pool": "",
          "id": "subnet-078845300b6d6c612",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": true,
          "outpost_arn": "",
          "owner_id": "111111111111",
          "tags": {
            "Name": "my-vpc-public-us-east-1a"
          },
          "tags_all": {
            "Name": "my-vpc-public-us-east-1a"
          },
          "timeouts": null,
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-078845300b6d6c612",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "availability_zone_id": "use1-az1",
          "cidr_block": "10.0.101.0/24",
          "customer_owned_ipv4_pool": "",
          "id": "subnet-078845300b6d6c612",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": true,
          "outpost_arn": "",
          "owner_id": "111111111111",
          "tags": {
            "Name": "my-vpc-public-us-east-1a"
          },
          "tags_all": {
            "Name": "my-vpc-public-us-east-1a"
          },
          "timeouts": null,
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_vpc.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:vpc/vpc-0b208e2e25d5474cf",
          "assign_generated_ipv6_cidr_block": false,
          "cidr_block": "10.0.0.0/16",
          "default_network_acl_id": "acl-0ba2138552c6889f7",
          "default_route_table_id": "rtb-0f634df56e151b775",
          "default_security_group_id": "sg-0031bf33de1b414e1",
          "dhcp_options_id": "dopt-3045214a",
          "enable_classiclink": false,
          "enable_classiclink_dns_support": false,
          "enable_dns_hostnames": false,
          "enable_dns_support": true,
          "id": "vpc-0b208e2e25d5474cf",
          "instance_tenancy": "default",
          "ipv6_association_id": "",
          "ipv6_cidr_block": "",
          "main_route_table_id": "rtb-0f634df56e151b775",
          "owner_id": "111111111111",
          "tags": {
            "Name": "my-vpc"
          },
          "tags_all": {
            "Name": "my-vpc"
          }
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:111111111111:vpc/vpc-0b208e2e25d5474cf",
          "assign_generated_ipv6_cidr_block": false,
          "cidr_block": "10.0.0.0/16",
          "default_network_acl_id": "acl-0ba2138552c6889f7",
          "default_route_table_id": "rtb-0f634df56e151b775",
          "default_security_group_id": "sg-0031bf33de1b414e1",
          "dhcp_options_id": "dopt-3045214a",
          "enable_classiclink": false,
          "enable_classiclink_dns_support": false,
          "enable_dns_hostnames": false,
          "enable_dns_support": true,
          "id": "vpc-0b208e2e25d5474cf",
          "instance_tenancy": "default",
          "ipv6_association_id": "",
          "ipv6_cidr_block": "",
          "main_route_table_id": "rtb-0f634df56e151b775",
          "owner_id": "111111111111",
          "tags": {
            "Name": "my-vpc"
          },
          "tags_all": {
            "Name": "my-vpc"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_vpn_gateway.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_vpn_gateway",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "amazon_side_asn": "64512",
          "arn": "arn:aws:ec2:us-east-1:111111111111:vpn-gateway/vgw-0b8ad47ad0fcdb5c6",
          "availability_zone": null,
          "id": "vgw-0b8ad47ad0fcdb5c6",
          "tags": {
            "Name": "my-vpc"
          },
          "tags_all": {
            "Name": "my-vpc"
          },
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after": {
          "amazon_side_asn": "64512",
          "arn": "arn:aws:ec2:us-east-1:111111111111:vpn-gateway/vgw-0b8ad47ad0fcdb5c6",
          "availability_zone": null,
          "id": "vgw-0b8ad47ad0fcdb5c6",
          "tags": {
            "Name": "my-vpc"
          },
          "tags_all": {
            "Name": "my-vpc"
          },
          "vpc_id": "vpc-0b208e2e25d5474cf"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    }
  ],
  "output_changes": {
    "arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "arn:aws:s3:::111111111111-gitlab-runner-cache",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "azs": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "us-east-1a",
        "us-east-1b",
        "us-east-1c"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "bucket": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "111111111111-gitlab-runner-cache",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cgw_arns": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cgw_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "database_internet_gateway_route_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "database_ipv6_egress_route_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "database_nat_gateway_route_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "database_network_acl_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "database_network_acl_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "database_route_table_association_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "database_route_table_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "rtb-077a028aecff03dd5"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "database_subnet_arns": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "database_subnet_group": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "database_subnet_group_name": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "database_subnets": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "database_subnets_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "database_subnets_ipv6_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "default_network_acl_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "acl-0ba2138552c6889f7",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "default_route_table_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "rtb-0f634df56e151b775",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "default_security_group_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "sg-0031bf33de1b414e1",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "default_vpc_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "default_vpc_cidr_block": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "default_vpc_default_network_acl_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "default_vpc_default_route_table_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "default_vpc_default_security_group_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "default_vpc_enable_dns_hostnames": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "default_vpc_enable_dns_support": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "default_vpc_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "default_vpc_instance_tenancy": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "default_vpc_main_route_table_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "egress_only_internet_gateway_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "elasticache_network_acl_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "elasticache_network_acl_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "elasticache_route_table_association_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "elasticache_route_table_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "rtb-077a028aecff03dd5"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "elasticache_subnet_arns": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "elasticache_subnet_group": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "elasticache_subnet_group_name": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "elasticache_subnets": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "elasticache_subnets_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "elasticache_subnets_ipv6_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "igw_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "arn:aws:ec2:us-east-1:111111111111:internet-gateway/igw-0fcc1183636e3b8d7",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "igw_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "igw-0fcc1183636e3b8d7",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "intra_network_acl_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "intra_network_acl_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "intra_route_table_association_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "intra_route_table_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "intra_subnet_arns": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "intra_subnets": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "intra_subnets_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "intra_subnets_ipv6_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "name": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "my-vpc",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "nat_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "eipalloc-0b021c244233f1d0d"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "nat_public_ips": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "34.203.54.123"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "natgw_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "nat-09bbccb2477bb5c89"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "outpost_network_acl_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "outpost_network_acl_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "outpost_subnet_arns": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "outpost_subnets": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "outpost_subnets_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "outpost_subnets_ipv6_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "policy_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "private_ipv6_egress_route_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "private_nat_gateway_route_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "r-rtb-077a028aecff03dd51080289494"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "private_network_acl_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "private_network_acl_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "private_route_table_association_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "rtbassoc-099d719101045e997"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "private_route_table_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "rtb-077a028aecff03dd5"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "private_subnet_arns": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-0b6949a41c3b71d3a"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "private_subnets": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "subnet-0b6949a41c3b71d3a"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "private_subnets_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "10.0.1.0/24"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "private_subnets_ipv6_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        ""
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "public_internet_gateway_ipv6_route_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "public_internet_gateway_route_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "r-rtb-02bcb211549855a9a1080289494",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "public_network_acl_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "public_network_acl_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "public_route_table_association_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "rtbassoc-0f4c25ff6d9b293c1"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "public_route_table_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "rtb-02bcb211549855a9a"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "public_subnet_arns": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-078845300b6d6c612"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "public_subnets": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "subnet-078845300b6d6c612"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "public_subnets_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "10.0.101.0/24"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "public_subnets_ipv6_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        ""
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "redshift_network_acl_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "redshift_network_acl_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "redshift_public_route_table_association_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "redshift_route_table_association_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "redshift_route_table_ids": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "rtb-077a028aecff03dd5"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "redshift_subnet_arns": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "redshift_subnet_group": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "redshift_subnets": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "redshift_subnets_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "redshift_subnets_ipv6_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "runner_agent_role_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "arn:aws:iam::111111111111:role/spot-runners-instance-role",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "runner_agent_role_name": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "spot-runners-instance-role",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "runner_agent_sg_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "sg-04e61a7ee5a3569e2",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "runner_as_group_name": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "docker-default20210629064414620600000006-asg",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "runner_cache_bucket_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "arn:aws:s3:::111111111111-gitlab-runner-cache",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "runner_cache_bucket_name": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "111111111111-gitlab-runner-cache",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "runner_eip": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "runner_role_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "arn:aws:iam::111111111111:role/spot-runners-docker-machine-role",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "runner_role_name": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "spot-runners-docker-machine-role",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "runner_sg_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "sg-0f11947f51d7e014d",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "this_customer_gateway": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": {},
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vgw_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "arn:aws:ec2:us-east-1:111111111111:vpn-gateway/vgw-0b8ad47ad0fcdb5c6",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vgw_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "vgw-0b8ad47ad0fcdb5c6",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "arn:aws:ec2:us-east-1:111111111111:vpc/vpc-0b208e2e25d5474cf",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_cidr_block": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "10.0.0.0/16",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_enable_dns_hostnames": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": false,
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_enable_dns_support": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": true,
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_flow_log_cloudwatch_iam_role_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_flow_log_destination_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_flow_log_destination_type": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "cloud-watch-logs",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_flow_log_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "vpc-0b208e2e25d5474cf",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_instance_tenancy": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "default",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_ipv6_association_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_ipv6_cidr_block": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_main_route_table_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "rtb-0f634df56e151b775",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_owner_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "111111111111",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_secondary_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    }
  },
  "prior_state": {
    "format_version": "0.1",
    "terraform_version": "1.0.0",
    "values": {
      "root_module": {
        "resources": [
          {
            "address": "aws_key_pair.deployer",
            "mode": "managed",
            "type": "aws_key_pair",
            "name": "deployer",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 1,
            "values": {
              "arn": "arn:aws:ec2:us-east-1:111111111111:key-pair/deployer-key",
              "fingerprint": "d7:ff:a6:63:18:64:9c:57:a1:ee:ca:a4:ad:c2:81:62",
              "id": "deployer-key",
              "key_name": "deployer-key",
              "key_name_prefix": null,
              "key_pair_id": "key-03c17909b58e76013",
              "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 email@example.com",
              "tags": {},
              "tags_all": {}
            }
          }
        ],
        "child_modules": [
          {
            "resources": [
              {
                "address": "module.runner.aws_autoscaling_group.gitlab_runner_instance",
                "mode": "managed",
                "type": "aws_autoscaling_group",
                "name": "gitlab_runner_instance",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:autoscaling:us-east-1:111111111111:autoScalingGroup:d97b1893-8514-4ed5-8087-14b2b723b160:autoScalingGroupName/docker-default20210629064414620600000006-asg",
                  "availability_zones": [
                    "us-east-1a"
                  ],
                  "capacity_rebalance": false,
                  "default_cooldown": 300,
                  "desired_capacity": 1,
                  "enabled_metrics": [],
                  "force_delete": false,
                  "force_delete_warm_pool": false,
                  "health_check_grace_period": 0,
                  "health_check_type": "EC2",
                  "id": "docker-default20210629064414620600000006-asg",
                  "initial_lifecycle_hook": [],
                  "instance_refresh": [],
                  "launch_configuration": "docker-default20210629064414620600000006",
                  "launch_template": [],
                  "load_balancers": [],
                  "max_instance_lifetime": 0,
                  "max_size": 1,
                  "metrics_granularity": "1Minute",
                  "min_elb_capacity": null,
                  "min_size": 1,
                  "mixed_instances_policy": [],
                  "name": "docker-default20210629064414620600000006-asg",
                  "name_prefix": "",
                  "placement_group": "",
                  "protect_from_scale_in": false,
                  "service_linked_role_arn": "arn:aws:iam::111111111111:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
                  "suspended_processes": [],
                  "tag": [],
                  "tags": [
                    {
                      "key": "Environment",
                      "propagate_at_launch": "true",
                      "value": "spot-runners"
                    },
                    {
                      "key": "Name",
                      "propagate_at_launch": "true",
                      "value": "spot-runners"
                    }
                  ],
                  "target_group_arns": [],
                  "termination_policies": [],
                  "timeouts": {
                    "delete": "10m"
                  },
                  "vpc_zone_identifier": [
                    "subnet-0b6949a41c3b71d3a"
                  ],
                  "wait_for_capacity_timeout": "10m",
                  "wait_for_elb_capacity": null,
                  "warm_pool": []
                },
                "depends_on": [
                  "aws_key_pair.deployer",
                  "module.runner.aws_eip.gitlab_runner",
                  "module.runner.aws_iam_role.instance",
                  "module.vpc.aws_vpc.this",
                  "module.runner.aws_iam_instance_profile.docker_machine",
                  "module.runner.aws_iam_role.docker_machine",
                  "module.runner.aws_security_group.docker_machine",
                  "module.runner.data.null_data_source.agent_tags",
                  "module.runner.module.cache.data.aws_caller_identity.current",
                  "module.runner.aws_iam_instance_profile.instance",
                  "module.runner.aws_security_group.runner",
                  "module.runner.data.aws_ami.docker-machine",
                  "module.runner.data.aws_availability_zone.runners",
                  "module.runner.data.aws_caller_identity.current",
                  "module.runner.data.aws_subnet.runners",
                  "module.runner.module.cache.aws_s3_bucket.build_cache",
                  "module.runner.module.cache.random_string.s3_suffix",
                  "module.vpc.aws_subnet.private",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                  "module.runner.aws_launch_configuration.gitlab_runner_instance",
                  "module.runner.data.aws_ami.runner"
                ]
              },
              {
                "address": "module.runner.aws_cloudwatch_log_group.environment[0]",
                "mode": "managed",
                "type": "aws_cloudwatch_log_group",
                "name": "environment",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:logs:us-east-1:111111111111:log-group:spot-runners",
                  "id": "spot-runners",
                  "kms_key_id": "",
                  "name": "spot-runners",
                  "name_prefix": null,
                  "retention_in_days": 0,
                  "tags": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "tags_all": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  }
                },
                "depends_on": [
                  "module.runner.aws_kms_key.default",
                  "module.runner.data.aws_caller_identity.current"
                ]
              },
              {
                "address": "module.runner.aws_iam_instance_profile.docker_machine",
                "mode": "managed",
                "type": "aws_iam_instance_profile",
                "name": "docker_machine",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::111111111111:instance-profile/spot-runners-docker-machine-profile",
                  "create_date": "2021-06-29T06:44:02Z",
                  "id": "spot-runners-docker-machine-profile",
                  "name": "spot-runners-docker-machine-profile",
                  "name_prefix": null,
                  "path": "/",
                  "role": "spot-runners-docker-machine-role",
                  "tags": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "tags_all": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "unique_id": "AIPARVZ4AQRH532CCQZIQ"
                },
                "depends_on": [
                  "module.runner.aws_iam_role.docker_machine",
                  "module.runner.data.aws_caller_identity.current"
                ]
              },
              {
                "address": "module.runner.aws_iam_instance_profile.instance",
                "mode": "managed",
                "type": "aws_iam_instance_profile",
                "name": "instance",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::111111111111:instance-profile/spot-runners-instance-profile",
                  "create_date": "2021-06-29T06:44:02Z",
                  "id": "spot-runners-instance-profile",
                  "name": "spot-runners-instance-profile",
                  "name_prefix": null,
                  "path": "/",
                  "role": "spot-runners-instance-role",
                  "tags": {},
                  "tags_all": {},
                  "unique_id": "AIPARVZ4AQRH2MWITMIQ7"
                },
                "depends_on": [
                  "module.runner.aws_iam_role.instance",
                  "module.runner.data.aws_caller_identity.current"
                ]
              },
              {
                "address": "module.runner.aws_iam_policy.instance_docker_machine_policy",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "instance_docker_machine_policy",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
                  "description": "Policy for docker machine.",
                  "id": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
                  "name": "spot-runners-docker-machine",
                  "name_prefix": null,
                  "path": "/",
                  "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Action\": [\n          \"ec2:DescribeKeyPairs\",\n          \"ec2:TerminateInstances\",\n          \"ec2:StopInstances\",\n          \"ec2:StartInstances\",\n          \"ec2:RunInstances\",\n          \"ec2:RebootInstances\",\n          \"ec2:CreateKeyPair\",\n          \"ec2:DeleteKeyPair\",\n          \"ec2:ImportKeyPair\",\n          \"ec2:Describe*\",\n          \"ec2:CreateTags\",\n          \"ec2:RequestSpotInstances\",\n          \"ec2:CancelSpotInstanceRequests\",\n          \"ec2:DescribeSubnets\",\n          \"ec2:AssociateIamInstanceProfile\",\n          \"iam:PassRole\"\n        ],\n        \"Effect\": \"Allow\",\n        \"Resource\": \"*\"\n      }\n    ]\n  }\n",
                  "policy_id": "ANPARVZ4AQRH33XGM5XIQ",
                  "tags": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "tags_all": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  }
                }
              },
              {
                "address": "module.runner.aws_iam_policy.service_linked_role[0]",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "service_linked_role",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
                  "description": "Policy for creation of service linked roles.",
                  "id": "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
                  "name": "spot-runners-service_linked_role",
                  "name_prefix": null,
                  "path": "/",
                  "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"arn:aws:iam::*:role/aws-service-role/*\"\n    }\n  ]\n}\n",
                  "policy_id": "ANPARVZ4AQRHZHJDFJYT6",
                  "tags": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "tags_all": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  }
                }
              },
              {
                "address": "module.runner.aws_iam_policy.ssm[0]",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "ssm",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::111111111111:policy/spot-runners-ssm",
                  "description": "Policy for runner token param access via SSM",
                  "id": "arn:aws:iam::111111111111:policy/spot-runners-ssm",
                  "name": "spot-runners-ssm",
                  "name_prefix": null,
                  "path": "/",
                  "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:PutParameter\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:GetParameters\"\n            ],\n            \"Resource\": \"arn:aws:ssm:*\"\n        }\n    ]\n}\n",
                  "policy_id": "ANPARVZ4AQRH75RT5ISZI",
                  "tags": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "tags_all": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  }
                }
              },
              {
                "address": "module.runner.aws_iam_role.docker_machine",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "docker_machine",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::111111111111:role/spot-runners-docker-machine-role",
                  "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                  "create_date": "2021-06-29T06:43:59Z",
                  "description": "",
                  "force_detach_policies": false,
                  "id": "spot-runners-docker-machine-role",
                  "inline_policy": [
                    {
                      "name": "",
                      "policy": ""
                    }
                  ],
                  "managed_policy_arns": [],
                  "max_session_duration": 3600,
                  "name": "spot-runners-docker-machine-role",
                  "name_prefix": null,
                  "path": "/",
                  "permissions_boundary": null,
                  "tags": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "tags_all": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "unique_id": "AROARVZ4AQRHS5T7HPNI7"
                },
                "depends_on": [
                  "module.runner.data.aws_caller_identity.current"
                ]
              },
              {
                "address": "module.runner.aws_iam_role.instance",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "instance",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::111111111111:role/spot-runners-instance-role",
                  "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                  "create_date": "2021-06-29T06:43:59Z",
                  "description": "",
                  "force_detach_policies": false,
                  "id": "spot-runners-instance-role",
                  "inline_policy": [
                    {
                      "name": "spot-runners-instance-role",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowLoggingToCloudWatch\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n"
                    }
                  ],
                  "managed_policy_arns": [
                    "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
                    "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
                    "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
                    "arn:aws:iam::111111111111:policy/spot-runners-ssm"
                  ],
                  "max_session_duration": 3600,
                  "name": "spot-runners-instance-role",
                  "name_prefix": null,
                  "path": "/",
                  "permissions_boundary": null,
                  "tags": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "tags_all": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "unique_id": "AROARVZ4AQRHXOBTFXXJL"
                },
                "depends_on": [
                  "module.runner.data.aws_caller_identity.current"
                ]
              },
              {
                "address": "module.runner.aws_iam_role_policy.instance[0]",
                "mode": "managed",
                "type": "aws_iam_role_policy",
                "name": "instance",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "spot-runners-instance-role:spot-runners-instance-role",
                  "name": "spot-runners-instance-role",
                  "name_prefix": null,
                  "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowLoggingToCloudWatch\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    }\n  ]\n}\n",
                  "role": "spot-runners-instance-role"
                },
                "depends_on": [
                  "module.runner.aws_iam_role.instance",
                  "module.runner.data.aws_caller_identity.current"
                ]
              },
              {
                "address": "module.runner.aws_iam_role_policy_attachment.docker_machine_cache_instance[0]",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "docker_machine_cache_instance",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "spot-runners-instance-role-20210629064417554800000007",
                  "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
                  "role": "spot-runners-instance-role"
                },
                "depends_on": [
                  "module.runner.module.cache.aws_iam_policy.docker_machine_cache",
                  "module.runner.module.cache.aws_s3_bucket.build_cache",
                  "module.runner.module.cache.data.aws_caller_identity.current",
                  "module.runner.module.cache.random_string.s3_suffix",
                  "module.runner.aws_iam_role.instance",
                  "module.runner.data.aws_caller_identity.current"
                ]
              },
              {
                "address": "module.runner.aws_iam_role_policy_attachment.instance_docker_machine_policy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "instance_docker_machine_policy",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "spot-runners-instance-role-20210629064402357300000002",
                  "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine",
                  "role": "spot-runners-instance-role"
                },
                "depends_on": [
                  "module.runner.aws_iam_policy.instance_docker_machine_policy",
                  "module.runner.aws_iam_role.instance",
                  "module.runner.data.aws_caller_identity.current"
                ]
              },
              {
                "address": "module.runner.aws_iam_role_policy_attachment.service_linked_role[0]",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "service_linked_role",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "spot-runners-instance-role-20210629064402403100000003",
                  "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-service_linked_role",
                  "role": "spot-runners-instance-role"
                },
                "depends_on": [
                  "module.runner.aws_iam_policy.service_linked_role",
                  "module.runner.aws_iam_role.instance",
                  "module.runner.data.aws_caller_identity.current"
                ]
              },
              {
                "address": "module.runner.aws_iam_role_policy_attachment.ssm[0]",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "ssm",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "spot-runners-instance-role-20210629064402356900000001",
                  "policy_arn": "arn:aws:iam::111111111111:policy/spot-runners-ssm",
                  "role": "spot-runners-instance-role"
                },
                "depends_on": [
                  "module.runner.aws_iam_policy.ssm",
                  "module.runner.aws_iam_role.instance",
                  "module.runner.data.aws_caller_identity.current"
                ]
              },
              {
                "address": "module.runner.aws_launch_configuration.gitlab_runner_instance",
                "mode": "managed",
                "type": "aws_launch_configuration",
                "name": "gitlab_runner_instance",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:autoscaling:us-east-1:111111111111:launchConfiguration:3da0a436-4462-4c5d-add9-ac9aa5274e85:launchConfigurationName/docker-default20210629064414620600000006",
                  "associate_public_ip_address": false,
                  "ebs_block_device": [],
                  "ebs_optimized": true,
                  "enable_monitoring": true,
                  "ephemeral_block_device": [],
                  "iam_instance_profile": "spot-runners-instance-profile",
                  "id": "docker-default20210629064414620600000006",
                  "image_id": "ami-0e362514299d32abe",
                  "instance_type": "t3.micro",
                  "key_name": "deployer-key",
                  "metadata_options": [],
                  "name": "docker-default20210629064414620600000006",
                  "name_prefix": "docker-default",
                  "placement_tenancy": null,
                  "root_block_device": [
                    {
                      "delete_on_termination": true,
                      "encrypted": true,
                      "iops": 0,
                      "throughput": 0,
                      "volume_size": 8,
                      "volume_type": "gp2"
                    }
                  ],
                  "security_groups": [
                    "sg-04e61a7ee5a3569e2"
                  ],
                  "spot_price": "",
                  "user_data": "e707d6482d2a5ababa6c206322e420c70162822a",
                  "user_data_base64": null,
                  "vpc_classic_link_id": "",
                  "vpc_classic_link_security_groups": []
                },
                "depends_on": [
                  "module.runner.module.cache.random_string.s3_suffix",
                  "module.vpc.aws_subnet.private",
                  "aws_key_pair.deployer",
                  "module.runner.aws_iam_instance_profile.instance",
                  "module.runner.data.aws_caller_identity.current",
                  "module.runner.data.aws_subnet.runners",
                  "module.runner.module.cache.data.aws_caller_identity.current",
                  "module.vpc.aws_vpc.this",
                  "module.runner.aws_iam_role.docker_machine",
                  "module.runner.data.aws_ami.runner",
                  "module.runner.aws_security_group.runner",
                  "module.runner.data.aws_ami.docker-machine",
                  "module.runner.module.cache.aws_s3_bucket.build_cache",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                  "module.runner.aws_eip.gitlab_runner",
                  "module.runner.aws_security_group.docker_machine",
                  "module.runner.data.aws_availability_zone.runners",
                  "module.runner.aws_iam_instance_profile.docker_machine",
                  "module.runner.aws_iam_role.instance"
                ]
              },
              {
                "address": "module.runner.aws_security_group.docker_machine",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "docker_machine",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:111111111111:security-group/sg-0f11947f51d7e014d",
                  "description": "A security group containing docker-machine instances",
                  "egress": [
                    {
                      "cidr_blocks": [
                        "0.0.0.0/0"
                      ],
                      "description": "Allow egress traffic for group spot-runners-docker-machine20210629064407218300000004",
                      "from_port": 0,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "-1",
                      "security_groups": [],
                      "self": false,
                      "to_port": 0
                    }
                  ],
                  "id": "sg-0f11947f51d7e014d",
                  "ingress": [
                    {
                      "cidr_blocks": [],
                      "description": "Allow SSH traffic from sg-04e61a7ee5a3569e2 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004 on port 22",
                      "from_port": 22,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [
                        "sg-04e61a7ee5a3569e2"
                      ],
                      "self": false,
                      "to_port": 22
                    },
                    {
                      "cidr_blocks": [],
                      "description": "Allow SSH traffic within group spot-runners-docker-machine20210629064407218300000004 on port 22",
                      "from_port": 22,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [],
                      "self": true,
                      "to_port": 22
                    },
                    {
                      "cidr_blocks": [],
                      "description": "Allow docker-machine traffic from group spot-runners-security-group20210629064407225300000005 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004",
                      "from_port": 2376,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [
                        "sg-04e61a7ee5a3569e2"
                      ],
                      "self": false,
                      "to_port": 2376
                    },
                    {
                      "cidr_blocks": [],
                      "description": "Allow docker-machine traffic within group spot-runners-docker-machine20210629064407218300000004 on port 2376",
                      "from_port": 2376,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [],
                      "self": true,
                      "to_port": 2376
                    }
                  ],
                  "name": "spot-runners-docker-machine20210629064407218300000004",
                  "name_prefix": "spot-runners-docker-machine",
                  "owner_id": "111111111111",
                  "revoke_rules_on_delete": false,
                  "tags": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "tags_all": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "timeouts": null,
                  "vpc_id": "vpc-0b208e2e25d5474cf"
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.runner.aws_security_group.runner",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "runner",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:111111111111:security-group/sg-04e61a7ee5a3569e2",
                  "description": "A security group containing gitlab-runner agent instances",
                  "egress": [
                    {
                      "cidr_blocks": [
                        "0.0.0.0/0"
                      ],
                      "description": "",
                      "from_port": 0,
                      "ipv6_cidr_blocks": [
                        "::/0"
                      ],
                      "prefix_list_ids": [],
                      "protocol": "-1",
                      "security_groups": [],
                      "self": false,
                      "to_port": 0
                    }
                  ],
                  "id": "sg-04e61a7ee5a3569e2",
                  "ingress": [],
                  "name": "spot-runners-security-group20210629064407225300000005",
                  "name_prefix": "spot-runners-security-group",
                  "owner_id": "111111111111",
                  "revoke_rules_on_delete": false,
                  "tags": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "tags_all": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "timeouts": null,
                  "vpc_id": "vpc-0b208e2e25d5474cf"
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.runner.aws_security_group_rule.docker_machine_docker_runner",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_docker_runner",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "Allow docker-machine traffic from group spot-runners-security-group20210629064407225300000005 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004",
                  "from_port": 2376,
                  "id": "sgrule-1094927821",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-0f11947f51d7e014d",
                  "self": false,
                  "source_security_group_id": "sg-04e61a7ee5a3569e2",
                  "to_port": 2376,
                  "type": "ingress"
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.runner.aws_security_group.docker_machine",
                  "module.runner.aws_security_group.runner"
                ]
              },
              {
                "address": "module.runner.aws_security_group_rule.docker_machine_docker_self",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_docker_self",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "Allow docker-machine traffic within group spot-runners-docker-machine20210629064407218300000004 on port 2376",
                  "from_port": 2376,
                  "id": "sgrule-1846859719",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-0f11947f51d7e014d",
                  "self": true,
                  "source_security_group_id": "sg-0f11947f51d7e014d",
                  "to_port": 2376,
                  "type": "ingress"
                },
                "depends_on": [
                  "module.runner.aws_security_group.docker_machine",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.runner.aws_security_group_rule.docker_machine_ssh_runner[0]",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_ssh_runner",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "Allow SSH traffic from sg-04e61a7ee5a3569e2 to docker-machine instances in group spot-runners-docker-machine20210629064407218300000004 on port 22",
                  "from_port": 22,
                  "id": "sgrule-2770509898",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-0f11947f51d7e014d",
                  "self": false,
                  "source_security_group_id": "sg-04e61a7ee5a3569e2",
                  "to_port": 22,
                  "type": "ingress"
                },
                "depends_on": [
                  "module.runner.aws_security_group.docker_machine",
                  "module.runner.aws_security_group.runner",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.runner.aws_security_group_rule.docker_machine_ssh_self",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_ssh_self",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "Allow SSH traffic within group spot-runners-docker-machine20210629064407218300000004 on port 22",
                  "from_port": 22,
                  "id": "sgrule-2322936384",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-0f11947f51d7e014d",
                  "self": true,
                  "source_security_group_id": "sg-0f11947f51d7e014d",
                  "to_port": 22,
                  "type": "ingress"
                },
                "depends_on": [
                  "module.runner.aws_security_group.docker_machine",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.runner.aws_security_group_rule.out_all",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "out_all",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": "Allow egress traffic for group spot-runners-docker-machine20210629064407218300000004",
                  "from_port": 0,
                  "id": "sgrule-3708414327",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "-1",
                  "security_group_id": "sg-0f11947f51d7e014d",
                  "self": false,
                  "source_security_group_id": null,
                  "to_port": 0,
                  "type": "egress"
                },
                "depends_on": [
                  "module.runner.aws_security_group.docker_machine",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.runner.aws_ssm_parameter.runner_registration_token",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "runner_registration_token",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "allowed_pattern": "",
                  "arn": "arn:aws:ssm:us-east-1:111111111111:parameter/spot-runners-runner-token",
                  "data_type": "text",
                  "description": "",
                  "id": "spot-runners-runner-token",
                  "key_id": "alias/aws/ssm",
                  "name": "spot-runners-runner-token",
                  "overwrite": null,
                  "tags": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "tags_all": {
                    "Environment": "spot-runners",
                    "Name": "spot-runners"
                  },
                  "tier": "Standard",
                  "type": "SecureString",
                  "value": "null",
                  "version": 1
                }
              },
              {
                "address": "module.runner.data.aws_ami.docker-machine",
                "mode": "data",
                "type": "aws_ami",
                "name": "docker-machine",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "architecture": "x86_64",
                  "arn": "arn:aws:ec2:us-east-1::image/ami-0dd76f917833aac4b",
                  "block_device_mappings": [
                    {
                      "device_name": "/dev/sda1",
                      "ebs": {
                        "delete_on_termination": "true",
                        "encrypted": "false",
                        "iops": "0",
                        "snapshot_id": "snap-0575f9666981a797f",
                        "throughput": "0",
                        "volume_size": "8",
                        "volume_type": "gp2"
                      },
                      "no_device": "",
                      "virtual_name": ""
                    },
                    {
                      "device_name": "/dev/sdb",
                      "ebs": {},
                      "no_device": "",
                      "virtual_name": "ephemeral0"
                    },
                    {
                      "device_name": "/dev/sdc",
                      "ebs": {},
                      "no_device": "",
                      "virtual_name": "ephemeral1"
                    }
                  ],
                  "creation_date": "2021-06-22T20:54:40.000Z",
                  "description": "Canonical, Ubuntu, 20.04 LTS, amd64 focal image build on 2021-06-21",
                  "ena_support": true,
                  "executable_users": null,
                  "filter": [
                    {
                      "name": "name",
                      "values": [
                        "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"
                      ]
                    }
                  ],
                  "hypervisor": "xen",
                  "id": "ami-0dd76f917833aac4b",
                  "image_id": "ami-0dd76f917833aac4b",
                  "image_location": "099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210621",
                  "image_owner_alias": null,
                  "image_type": "machine",
                  "kernel_id": null,
                  "most_recent": true,
                  "name": "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210621",
                  "name_regex": null,
                  "owner_id": "099720109477",
                  "owners": [
                    "099720109477"
                  ],
                  "platform": null,
                  "platform_details": "Linux/UNIX",
                  "product_codes": [],
                  "public": true,
                  "ramdisk_id": null,
                  "root_device_name": "/dev/sda1",
                  "root_device_type": "ebs",
                  "root_snapshot_id": "snap-0575f9666981a797f",
                  "sriov_net_support": "simple",
                  "state": "available",
                  "state_reason": {
                    "code": "UNSET",
                    "message": "UNSET"
                  },
                  "tags": {},
                  "usage_operation": "RunInstances",
                  "virtualization_type": "hvm"
                }
              },
              {
                "address": "module.runner.data.aws_ami.runner",
                "mode": "data",
                "type": "aws_ami",
                "name": "runner",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "architecture": "x86_64",
                  "arn": "arn:aws:ec2:us-east-1::image/ami-0e362514299d32abe",
                  "block_device_mappings": [
                    {
                      "device_name": "/dev/xvda",
                      "ebs": {
                        "delete_on_termination": "true",
                        "encrypted": "false",
                        "iops": "0",
                        "snapshot_id": "snap-03e9050b362f59715",
                        "throughput": "0",
                        "volume_size": "8",
                        "volume_type": "standard"
                      },
                      "no_device": "",
                      "virtual_name": ""
                    }
                  ],
                  "creation_date": "2021-06-17T17:35:21.000Z",
                  "description": "Amazon Linux 2 AMI 2.0.20210617.0 x86_64 HVM ebs",
                  "ena_support": true,
                  "executable_users": null,
                  "filter": [
                    {
                      "name": "name",
                      "values": [
                        "amzn2-ami-hvm-2.*-x86_64-ebs"
                      ]
                    }
                  ],
                  "hypervisor": "xen",
                  "id": "ami-0e362514299d32abe",
                  "image_id": "ami-0e362514299d32abe",
                  "image_location": "amazon/amzn2-ami-hvm-2.0.20210617.0-x86_64-ebs",
                  "image_owner_alias": "amazon",
                  "image_type": "machine",
                  "kernel_id": null,
                  "most_recent": true,
                  "name": "amzn2-ami-hvm-2.0.20210617.0-x86_64-ebs",
                  "name_regex": null,
                  "owner_id": "137112412989",
                  "owners": [
                    "amazon"
                  ],
                  "platform": null,
                  "platform_details": "Linux/UNIX",
                  "product_codes": [],
                  "public": true,
                  "ramdisk_id": null,
                  "root_device_name": "/dev/xvda",
                  "root_device_type": "ebs",
                  "root_snapshot_id": "snap-03e9050b362f59715",
                  "sriov_net_support": "simple",
                  "state": "available",
                  "state_reason": {
                    "code": "UNSET",
                    "message": "UNSET"
                  },
                  "tags": {},
                  "usage_operation": "RunInstances",
                  "virtualization_type": "hvm"
                }
              },
              {
                "address": "module.runner.data.aws_availability_zone.runners",
                "mode": "data",
                "type": "aws_availability_zone",
                "name": "runners",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "all_availability_zones": null,
                  "filter": null,
                  "group_name": "us-east-1",
                  "id": "us-east-1a",
                  "name": "us-east-1a",
                  "name_suffix": "a",
                  "network_border_group": "us-east-1",
                  "opt_in_status": "opt-in-not-required",
                  "parent_zone_id": "",
                  "parent_zone_name": "",
                  "region": "us-east-1",
                  "state": "available",
                  "zone_id": "use1-az1",
                  "zone_type": "availability-zone"
                }
              },
              {
                "address": "module.runner.data.aws_caller_identity.current",
                "mode": "data",
                "type": "aws_caller_identity",
                "name": "current",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "account_id": "111111111111",
                  "arn": "arn:aws:sts::111111111111:assumed-role/AWSReservedSSO_admin_in_develop_fb314e4593b59bf2/imanuel.m@indeni.com",
                  "id": "111111111111",
                  "user_id": "AROARVZ4AQRHRH7ZLU5BZ:imanuel.m@indeni.com"
                }
              },
              {
                "address": "module.runner.data.aws_subnet.runners",
                "mode": "data",
                "type": "aws_subnet",
                "name": "runners",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-0b6949a41c3b71d3a",
                  "assign_ipv6_address_on_creation": false,
                  "availability_zone": "us-east-1a",
                  "availability_zone_id": "use1-az1",
                  "available_ip_address_count": 250,
                  "cidr_block": "10.0.1.0/24",
                  "customer_owned_ipv4_pool": "",
                  "default_for_az": false,
                  "filter": null,
                  "id": "subnet-0b6949a41c3b71d3a",
                  "ipv6_cidr_block": null,
                  "ipv6_cidr_block_association_id": null,
                  "map_customer_owned_ip_on_launch": false,
                  "map_public_ip_on_launch": false,
                  "outpost_arn": "",
                  "owner_id": "111111111111",
                  "state": "available",
                  "tags": {
                    "Name": "my-vpc-private-us-east-1a"
                  },
                  "vpc_id": "vpc-0b208e2e25d5474cf"
                }
              },
              {
                "address": "module.runner.data.null_data_source.agent_tags[0]",
                "mode": "data",
                "type": "null_data_source",
                "name": "agent_tags",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/null",
                "schema_version": 0,
                "values": {
                  "has_computed_default": "default",
                  "id": "static",
                  "inputs": {
                    "key": "Environment",
                    "propagate_at_launch": "true",
                    "value": "spot-runners"
                  },
                  "outputs": {
                    "key": "Environment",
                    "propagate_at_launch": "true",
                    "value": "spot-runners"
                  },
                  "random": "2600082111656026709"
                }
              },
              {
                "address": "module.runner.data.null_data_source.agent_tags[1]",
                "mode": "data",
                "type": "null_data_source",
                "name": "agent_tags",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/null",
                "schema_version": 0,
                "values": {
                  "has_computed_default": "default",
                  "id": "static",
                  "inputs": {
                    "key": "Name",
                    "propagate_at_launch": "true",
                    "value": "spot-runners"
                  },
                  "outputs": {
                    "key": "Name",
                    "propagate_at_launch": "true",
                    "value": "spot-runners"
                  },
                  "random": "6411846770691303138"
                }
              },
              {
                "address": "module.runner.data.null_data_source.tags[0]",
                "mode": "data",
                "type": "null_data_source",
                "name": "tags",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/null",
                "schema_version": 0,
                "values": {
                  "has_computed_default": "default",
                  "id": "static",
                  "inputs": {
                    "key": "Environment",
                    "propagate_at_launch": "true",
                    "value": "spot-runners"
                  },
                  "outputs": {
                    "key": "Environment",
                    "propagate_at_launch": "true",
                    "value": "spot-runners"
                  },
                  "random": "8395036676992944573"
                }
              },
              {
                "address": "module.runner.data.null_data_source.tags[1]",
                "mode": "data",
                "type": "null_data_source",
                "name": "tags",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/null",
                "schema_version": 0,
                "values": {
                  "has_computed_default": "default",
                  "id": "static",
                  "inputs": {
                    "key": "Name",
                    "propagate_at_launch": "true",
                    "value": "spot-runners"
                  },
                  "outputs": {
                    "key": "Name",
                    "propagate_at_launch": "true",
                    "value": "spot-runners"
                  },
                  "random": "5777972786976594649"
                }
              },
              {
                "address": "module.runner.null_resource.remove_runner",
                "mode": "managed",
                "type": "null_resource",
                "name": "remove_runner",
                "provider_name": "registry.terraform.io/hashicorp/null",
                "schema_version": 0,
                "values": {
                  "id": "755539463458684891",
                  "triggers": {
                    "aws_region": "eu-central-1",
                    "runners_gitlab_url": "https://gitlab.com",
                    "script": ".terraform/modules/runner/bin/remove-runner.sh",
                    "secure_parameter_store_runner_token_key": "spot-runners-runner-token"
                  }
                },
                "depends_on": [
                  "module.runner.aws_ssm_parameter.runner_registration_token"
                ]
              }
            ],
            "address": "module.runner",
            "child_modules": [
              {
                "resources": [
                  {
                    "address": "module.runner.module.cache.aws_iam_policy.docker_machine_cache[0]",
                    "mode": "managed",
                    "type": "aws_iam_policy",
                    "name": "docker_machine_cache",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
                      "description": "Policy for docker machine instance to access cache",
                      "id": "arn:aws:iam::111111111111:policy/spot-runners-docker-machine-cache",
                      "name": "spot-runners-docker-machine-cache",
                      "name_prefix": null,
                      "path": "/",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"allowGitLabRunnersAccessCache\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:PutObjectAcl\",\n        \"s3:GetObject\",\n        \"s3:GetObjectAcl\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::111111111111-gitlab-runner-cache/*\"\n      ]\n    }\n  ]\n}\n",
                      "policy_id": "ANPARVZ4AQRHY4HK34I7A",
                      "tags": {
                        "Environment": "spot-runners",
                        "Name": "spot-runners"
                      },
                      "tags_all": {
                        "Environment": "spot-runners",
                        "Name": "spot-runners"
                      }
                    },
                    "depends_on": [
                      "module.runner.module.cache.aws_s3_bucket.build_cache",
                      "module.runner.module.cache.data.aws_caller_identity.current",
                      "module.runner.module.cache.random_string.s3_suffix"
                    ]
                  },
                  {
                    "address": "module.runner.module.cache.aws_s3_bucket.build_cache[0]",
                    "mode": "managed",
                    "type": "aws_s3_bucket",
                    "name": "build_cache",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "acceleration_status": "",
                      "acl": "private",
                      "arn": "arn:aws:s3:::111111111111-gitlab-runner-cache",
                      "bucket": "111111111111-gitlab-runner-cache",
                      "bucket_domain_name": "111111111111-gitlab-runner-cache.s3.amazonaws.com",
                      "bucket_prefix": null,
                      "bucket_regional_domain_name": "111111111111-gitlab-runner-cache.s3.amazonaws.com",
                      "cors_rule": [],
                      "force_destroy": true,
                      "grant": [],
                      "hosted_zone_id": "Z3AQBSTGFYJSTF",
                      "id": "111111111111-gitlab-runner-cache",
                      "lifecycle_rule": [
                        {
                          "abort_incomplete_multipart_upload_days": 0,
                          "enabled": true,
                          "expiration": [
                            {
                              "date": "",
                              "days": 1,
                              "expired_object_delete_marker": false
                            }
                          ],
                          "id": "clear",
                          "noncurrent_version_expiration": [
                            {
                              "days": 1
                            }
                          ],
                          "noncurrent_version_transition": [],
                          "prefix": "runner/",
                          "tags": {},
                          "transition": []
                        }
                      ],
                      "logging": [],
                      "object_lock_configuration": [],
                      "policy": null,
                      "region": "us-east-1",
                      "replication_configuration": [],
                      "request_payer": "BucketOwner",
                      "server_side_encryption_configuration": [
                        {
                          "rule": [
                            {
                              "apply_server_side_encryption_by_default": [
                                {
                                  "kms_master_key_id": "",
                                  "sse_algorithm": "AES256"
                                }
                              ],
                              "bucket_key_enabled": false
                            }
                          ]
                        }
                      ],
                      "tags": {
                        "Environment": "spot-runners",
                        "Name": "spot-runners"
                      },
                      "tags_all": {
                        "Environment": "spot-runners",
                        "Name": "spot-runners"
                      },
                      "versioning": [
                        {
                          "enabled": false,
                          "mfa_delete": false
                        }
                      ],
                      "website": [],
                      "website_domain": null,
                      "website_endpoint": null
                    },
                    "depends_on": [
                      "module.runner.module.cache.data.aws_caller_identity.current",
                      "module.runner.module.cache.random_string.s3_suffix"
                    ]
                  },
                  {
                    "address": "module.runner.module.cache.aws_s3_bucket_public_access_block.build_cache_policy[0]",
                    "mode": "managed",
                    "type": "aws_s3_bucket_public_access_block",
                    "name": "build_cache_policy",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "block_public_acls": true,
                      "block_public_policy": true,
                      "bucket": "111111111111-gitlab-runner-cache",
                      "id": "111111111111-gitlab-runner-cache",
                      "ignore_public_acls": true,
                      "restrict_public_buckets": true
                    },
                    "depends_on": [
                      "module.runner.module.cache.aws_s3_bucket.build_cache",
                      "module.runner.module.cache.data.aws_caller_identity.current",
                      "module.runner.module.cache.random_string.s3_suffix"
                    ]
                  },
                  {
                    "address": "module.runner.module.cache.data.aws_caller_identity.current",
                    "mode": "data",
                    "type": "aws_caller_identity",
                    "name": "current",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "account_id": "111111111111",
                      "arn": "arn:aws:sts::111111111111:assumed-role/AWSReservedSSO_admin_in_develop_fb314e4593b59bf2/imanuel.m@indeni.com",
                      "id": "111111111111",
                      "user_id": "AROARVZ4AQRHRH7ZLU5BZ:imanuel.m@indeni.com"
                    }
                  }
                ],
                "address": "module.runner.module.cache"
              }
            ]
          },
          {
            "resources": [
              {
                "address": "module.vpc.aws_eip.nat[0]",
                "mode": "managed",
                "type": "aws_eip",
                "name": "nat",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "address": null,
                  "allocation_id": null,
                  "associate_with_private_ip": null,
                  "association_id": "eipassoc-053b14c526a490295",
                  "carrier_ip": "",
                  "customer_owned_ip": "",
                  "customer_owned_ipv4_pool": "",
                  "domain": "vpc",
                  "id": "eipalloc-0b021c244233f1d0d",
                  "instance": "",
                  "network_border_group": "us-east-1",
                  "network_interface": "eni-02e617673b89b80b2",
                  "private_dns": "ip-10-0-101-124.ec2.internal",
                  "private_ip": "10.0.101.124",
                  "public_dns": "ec2-34-203-54-123.compute-1.amazonaws.com",
                  "public_ip": "34.203.54.123",
                  "public_ipv4_pool": "amazon",
                  "tags": {
                    "Name": "my-vpc-us-east-1a"
                  },
                  "tags_all": {
                    "Name": "my-vpc-us-east-1a"
                  },
                  "timeouts": null,
                  "vpc": true
                }
              },
              {
                "address": "module.vpc.aws_internet_gateway.this[0]",
                "mode": "managed",
                "type": "aws_internet_gateway",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:111111111111:internet-gateway/igw-0fcc1183636e3b8d7",
                  "id": "igw-0fcc1183636e3b8d7",
                  "owner_id": "111111111111",
                  "tags": {
                    "Name": "my-vpc"
                  },
                  "tags_all": {
                    "Name": "my-vpc"
                  },
                  "vpc_id": "vpc-0b208e2e25d5474cf"
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_nat_gateway.this[0]",
                "mode": "managed",
                "type": "aws_nat_gateway",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "allocation_id": "eipalloc-0b021c244233f1d0d",
                  "connectivity_type": "public",
                  "id": "nat-09bbccb2477bb5c89",
                  "network_interface_id": "eni-02e617673b89b80b2",
                  "private_ip": "10.0.101.124",
                  "public_ip": "34.203.54.123",
                  "subnet_id": "subnet-078845300b6d6c612",
                  "tags": {
                    "Name": "my-vpc-us-east-1a"
                  },
                  "tags_all": {
                    "Name": "my-vpc-us-east-1a"
                  }
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                  "module.vpc.aws_eip.nat",
                  "module.vpc.aws_internet_gateway.this",
                  "module.vpc.aws_subnet.public"
                ]
              },
              {
                "address": "module.vpc.aws_route.private_nat_gateway[0]",
                "mode": "managed",
                "type": "aws_route",
                "name": "private_nat_gateway",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "carrier_gateway_id": "",
                  "destination_cidr_block": "0.0.0.0/0",
                  "destination_ipv6_cidr_block": "",
                  "destination_prefix_list_id": "",
                  "egress_only_gateway_id": "",
                  "gateway_id": "",
                  "id": "r-rtb-077a028aecff03dd51080289494",
                  "instance_id": "",
                  "instance_owner_id": "",
                  "local_gateway_id": "",
                  "nat_gateway_id": "nat-09bbccb2477bb5c89",
                  "network_interface_id": "",
                  "origin": "CreateRoute",
                  "route_table_id": "rtb-077a028aecff03dd5",
                  "state": "active",
                  "timeouts": {
                    "create": "5m",
                    "delete": null
                  },
                  "transit_gateway_id": "",
                  "vpc_endpoint_id": "",
                  "vpc_peering_connection_id": ""
                },
                "depends_on": [
                  "module.vpc.aws_eip.nat",
                  "module.vpc.aws_internet_gateway.this",
                  "module.vpc.aws_nat_gateway.this",
                  "module.vpc.aws_route_table.private",
                  "module.vpc.aws_subnet.public",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_route.public_internet_gateway[0]",
                "mode": "managed",
                "type": "aws_route",
                "name": "public_internet_gateway",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "carrier_gateway_id": "",
                  "destination_cidr_block": "0.0.0.0/0",
                  "destination_ipv6_cidr_block": "",
                  "destination_prefix_list_id": "",
                  "egress_only_gateway_id": "",
                  "gateway_id": "igw-0fcc1183636e3b8d7",
                  "id": "r-rtb-02bcb211549855a9a1080289494",
                  "instance_id": "",
                  "instance_owner_id": "",
                  "local_gateway_id": "",
                  "nat_gateway_id": "",
                  "network_interface_id": "",
                  "origin": "CreateRoute",
                  "route_table_id": "rtb-02bcb211549855a9a",
                  "state": "active",
                  "timeouts": {
                    "create": "5m",
                    "delete": null
                  },
                  "transit_gateway_id": "",
                  "vpc_endpoint_id": "",
                  "vpc_peering_connection_id": ""
                },
                "depends_on": [
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                  "module.vpc.aws_internet_gateway.this",
                  "module.vpc.aws_route_table.public",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.vpc.aws_route_table.private[0]",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "private",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:111111111111:route-table/rtb-077a028aecff03dd5",
                  "id": "rtb-077a028aecff03dd5",
                  "owner_id": "111111111111",
                  "propagating_vgws": [],
                  "route": [
                    {
                      "carrier_gateway_id": "",
                      "cidr_block": "0.0.0.0/0",
                      "destination_prefix_list_id": "",
                      "egress_only_gateway_id": "",
                      "gateway_id": "",
                      "instance_id": "",
                      "ipv6_cidr_block": "",
                      "local_gateway_id": "",
                      "nat_gateway_id": "nat-09bbccb2477bb5c89",
                      "network_interface_id": "",
                      "transit_gateway_id": "",
                      "vpc_endpoint_id": "",
                      "vpc_peering_connection_id": ""
                    }
                  ],
                  "tags": {
                    "Name": "my-vpc-private-us-east-1a"
                  },
                  "tags_all": {
                    "Name": "my-vpc-private-us-east-1a"
                  },
                  "vpc_id": "vpc-0b208e2e25d5474cf"
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_route_table.public[0]",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "public",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:111111111111:route-table/rtb-02bcb211549855a9a",
                  "id": "rtb-02bcb211549855a9a",
                  "owner_id": "111111111111",
                  "propagating_vgws": [],
                  "route": [
                    {
                      "carrier_gateway_id": "",
                      "cidr_block": "0.0.0.0/0",
                      "destination_prefix_list_id": "",
                      "egress_only_gateway_id": "",
                      "gateway_id": "igw-0fcc1183636e3b8d7",
                      "instance_id": "",
                      "ipv6_cidr_block": "",
                      "local_gateway_id": "",
                      "nat_gateway_id": "",
                      "network_interface_id": "",
                      "transit_gateway_id": "",
                      "vpc_endpoint_id": "",
                      "vpc_peering_connection_id": ""
                    }
                  ],
                  "tags": {
                    "Name": "my-vpc-public"
                  },
                  "tags_all": {
                    "Name": "my-vpc-public"
                  },
                  "vpc_id": "vpc-0b208e2e25d5474cf"
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_route_table_association.private[0]",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "private",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "gateway_id": "",
                  "id": "rtbassoc-099d719101045e997",
                  "route_table_id": "rtb-077a028aecff03dd5",
                  "subnet_id": "subnet-0b6949a41c3b71d3a"
                },
                "depends_on": [
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
                  "module.vpc.aws_route_table.private",
                  "module.vpc.aws_subnet.private",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.vpc.aws_route_table_association.public[0]",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "public",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "gateway_id": "",
                  "id": "rtbassoc-0f4c25ff6d9b293c1",
                  "route_table_id": "rtb-02bcb211549855a9a",
                  "subnet_id": "subnet-078845300b6d6c612"
                },
                "depends_on": [
                  "module.vpc.aws_route_table.public",
                  "module.vpc.aws_subnet.public",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_subnet.private[0]",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "private",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-0b6949a41c3b71d3a",
                  "assign_ipv6_address_on_creation": false,
                  "availability_zone": "us-east-1a",
                  "availability_zone_id": "use1-az1",
                  "cidr_block": "10.0.1.0/24",
                  "customer_owned_ipv4_pool": "",
                  "id": "subnet-0b6949a41c3b71d3a",
                  "ipv6_cidr_block": "",
                  "ipv6_cidr_block_association_id": "",
                  "map_customer_owned_ip_on_launch": false,
                  "map_public_ip_on_launch": false,
                  "outpost_arn": "",
                  "owner_id": "111111111111",
                  "tags": {
                    "Name": "my-vpc-private-us-east-1a"
                  },
                  "tags_all": {
                    "Name": "my-vpc-private-us-east-1a"
                  },
                  "timeouts": null,
                  "vpc_id": "vpc-0b208e2e25d5474cf"
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_subnet.public[0]",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "public",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:111111111111:subnet/subnet-078845300b6d6c612",
                  "assign_ipv6_address_on_creation": false,
                  "availability_zone": "us-east-1a",
                  "availability_zone_id": "use1-az1",
                  "cidr_block": "10.0.101.0/24",
                  "customer_owned_ipv4_pool": "",
                  "id": "subnet-078845300b6d6c612",
                  "ipv6_cidr_block": "",
                  "ipv6_cidr_block_association_id": "",
                  "map_customer_owned_ip_on_launch": false,
                  "map_public_ip_on_launch": true,
                  "outpost_arn": "",
                  "owner_id": "111111111111",
                  "tags": {
                    "Name": "my-vpc-public-us-east-1a"
                  },
                  "tags_all": {
                    "Name": "my-vpc-public-us-east-1a"
                  },
                  "timeouts": null,
                  "vpc_id": "vpc-0b208e2e25d5474cf"
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_vpc.this[0]",
                "mode": "managed",
                "type": "aws_vpc",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:111111111111:vpc/vpc-0b208e2e25d5474cf",
                  "assign_generated_ipv6_cidr_block": false,
                  "cidr_block": "10.0.0.0/16",
                  "default_network_acl_id": "acl-0ba2138552c6889f7",
                  "default_route_table_id": "rtb-0f634df56e151b775",
                  "default_security_group_id": "sg-0031bf33de1b414e1",
                  "dhcp_options_id": "dopt-3045214a",
                  "enable_classiclink": false,
                  "enable_classiclink_dns_support": false,
                  "enable_dns_hostnames": false,
                  "enable_dns_support": true,
                  "id": "vpc-0b208e2e25d5474cf",
                  "instance_tenancy": "default",
                  "ipv6_association_id": "",
                  "ipv6_cidr_block": "",
                  "main_route_table_id": "rtb-0f634df56e151b775",
                  "owner_id": "111111111111",
                  "tags": {
                    "Name": "my-vpc"
                  },
                  "tags_all": {
                    "Name": "my-vpc"
                  }
                }
              },
              {
                "address": "module.vpc.aws_vpn_gateway.this[0]",
                "mode": "managed",
                "type": "aws_vpn_gateway",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "amazon_side_asn": "64512",
                  "arn": "arn:aws:ec2:us-east-1:111111111111:vpn-gateway/vgw-0b8ad47ad0fcdb5c6",
                  "availability_zone": null,
                  "id": "vgw-0b8ad47ad0fcdb5c6",
                  "tags": {
                    "Name": "my-vpc"
                  },
                  "tags_all": {
                    "Name": "my-vpc"
                  },
                  "vpc_id": "vpc-0b208e2e25d5474cf"
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              }
            ],
            "address": "module.vpc"
          }
        ]
      }
    }
  },
  "configuration": {
    "provider_config": {
      "module.runner:aws": {
        "name": "aws",
        "version_constraint": "\u003e= 3.35.0",
        "module_address": "module.runner"
      },
      "module.runner:null": {
        "name": "null",
        "module_address": "module.runner"
      },
      "module.vpc:aws": {
        "name": "aws",
        "version_constraint": "\u003e= 3.15.0",
        "module_address": "module.vpc"
      }
    },
    "root_module": {
      "resources": [
        {
          "address": "aws_key_pair.deployer",
          "mode": "managed",
          "type": "aws_key_pair",
          "name": "deployer",
          "provider_config_key": "aws",
          "expressions": {
            "key_name": {
              "constant_value": "deployer-key"
            },
            "public_key": {
              "constant_value": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 email@example.com"
            }
          },
          "schema_version": 1,
          "raw_data": {
            "FileName": "main.tf",
            "StartLine": 17,
            "EndLine": 20
          }
        }
      ],
      "module_calls": {
        "runner": {
          "source": "npalm/gitlab-runner/aws",
          "expressions": {
            "aws_region": {
              "constant_value": "eu-central-1"
            },
            "environment": {
              "constant_value": "spot-runners"
            },
            "runners_gitlab_url": {
              "constant_value": "https://gitlab.com"
            },
            "runners_name": {
              "constant_value": "docker-default"
            },
            "ssh_key_pair": {
              "references": [
                "aws_key_pair.deployer"
              ]
            },
            "subnet_id_runners": {
              "references": [
                "module.vpc.private_subnets"
              ]
            },
            "subnet_ids_gitlab_runner": {
              "references": [
                "module.vpc.private_subnets"
              ]
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id"
              ]
            }
          },
          "module": {
            "outputs": {
              "runner_agent_role_arn": {
                "expression": {
                  "references": [
                    "aws_iam_role.instance"
                  ]
                },
                "description": "ARN of the role used for the ec2 instance for the GitLab runner agent."
              },
              "runner_agent_role_name": {
                "expression": {
                  "references": [
                    "aws_iam_role.instance"
                  ]
                },
                "description": "Name of the role used for the ec2 instance for the GitLab runner agent."
              },
              "runner_agent_sg_id": {
                "expression": {
                  "references": [
                    "aws_security_group.runner"
                  ]
                },
                "description": "ID of the security group attached to the GitLab runner agent."
              },
              "runner_as_group_name": {
                "expression": {
                  "references": [
                    "aws_autoscaling_group.gitlab_runner_instance"
                  ]
                },
                "description": "Name of the autoscaling group for the gitlab-runner instance"
              },
              "runner_cache_bucket_arn": {
                "expression": {
                  "references": [
                    "module.cache.arn"
                  ]
                },
                "description": "ARN of the S3 for the build cache."
              },
              "runner_cache_bucket_name": {
                "expression": {
                  "references": [
                    "module.cache.bucket"
                  ]
                },
                "description": "Name of the S3 for the build cache."
              },
              "runner_eip": {
                "expression": {
                  "references": [
                    "aws_eip.gitlab_runner"
                  ]
                },
                "description": "EIP of the Gitlab Runner"
              },
              "runner_role_arn": {
                "expression": {
                  "references": [
                    "aws_iam_role.docker_machine"
                  ]
                },
                "description": "ARN of the role used for the docker machine runners."
              },
              "runner_role_name": {
                "expression": {
                  "references": [
                    "aws_iam_role.docker_machine"
                  ]
                },
                "description": "Name of the role used for the docker machine runners."
              },
              "runner_sg_id": {
                "expression": {
                  "references": [
                    "aws_security_group.docker_machine"
                  ]
                },
                "description": "ID of the security group attached to the docker machine runners."
              }
            },
            "resources": [
              {
                "address": "aws_autoscaling_group.gitlab_runner_instance",
                "mode": "managed",
                "type": "aws_autoscaling_group",
                "name": "gitlab_runner_instance",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "desired_capacity": {
                    "constant_value": "1"
                  },
                  "enabled_metrics": {
                    "references": [
                      "var.metrics_autoscaling"
                    ]
                  },
                  "health_check_grace_period": {
                    "constant_value": 0
                  },
                  "launch_configuration": {
                    "references": [
                      "aws_launch_configuration.gitlab_runner_instance"
                    ]
                  },
                  "max_size": {
                    "constant_value": "1"
                  },
                  "min_size": {
                    "constant_value": "1"
                  },
                  "name": {
                    "references": [
                      "local.enable_asg_recreation",
                      "aws_launch_configuration.gitlab_runner_instance",
                      "var.environment"
                    ]
                  },
                  "tags": {
                    "references": [
                      "data.null_data_source.agent_tags"
                    ]
                  },
                  "timeouts": {
                    "delete": {
                      "references": [
                        "var.asg_delete_timeout"
                      ]
                    }
                  },
                  "vpc_zone_identifier": {
                    "references": [
                      "var.subnet_ids_gitlab_runner"
                    ]
                  }
                },
                "schema_version": 0,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 157,
                  "EndLine": 170
                }
              },
              {
                "address": "aws_autoscaling_schedule.scale_in",
                "mode": "managed",
                "type": "aws_autoscaling_schedule",
                "name": "scale_in",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "autoscaling_group_name": {
                    "references": [
                      "aws_autoscaling_group.gitlab_runner_instance"
                    ]
                  },
                  "desired_capacity": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "max_size": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "min_size": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "recurrence": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "scheduled_action_name": {
                    "references": [
                      "aws_autoscaling_group.gitlab_runner_instance"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_schedule"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 172,
                  "EndLine": 180
                }
              },
              {
                "address": "aws_autoscaling_schedule.scale_out",
                "mode": "managed",
                "type": "aws_autoscaling_schedule",
                "name": "scale_out",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "autoscaling_group_name": {
                    "references": [
                      "aws_autoscaling_group.gitlab_runner_instance"
                    ]
                  },
                  "desired_capacity": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "max_size": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "min_size": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "recurrence": {
                    "references": [
                      "var.schedule_config"
                    ]
                  },
                  "scheduled_action_name": {
                    "references": [
                      "aws_autoscaling_group.gitlab_runner_instance"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_schedule"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 182,
                  "EndLine": 190
                }
              },
              {
                "address": "aws_cloudwatch_log_group.environment",
                "mode": "managed",
                "type": "aws_cloudwatch_log_group",
                "name": "environment",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "kms_key_id": {
                    "references": [
                      "local.kms_key"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "retention_in_days": {
                    "references": [
                      "var.cloudwatch_logging_retention_in_days"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_cloudwatch_logging"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/logging.tf",
                  "StartLine": 17,
                  "EndLine": 23
                }
              },
              {
                "address": "aws_eip.gitlab_runner",
                "mode": "managed",
                "type": "aws_eip",
                "name": "gitlab_runner",
                "provider_config_key": "runner:aws",
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_eip"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 386,
                  "EndLine": 388
                }
              },
              {
                "address": "aws_iam_instance_profile.docker_machine",
                "mode": "managed",
                "type": "aws_iam_instance_profile",
                "name": "docker_machine",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "name": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.docker_machine"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 343,
                  "EndLine": 347
                }
              },
              {
                "address": "aws_iam_instance_profile.instance",
                "mode": "managed",
                "type": "aws_iam_instance_profile",
                "name": "instance",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "name": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 260,
                  "EndLine": 263
                }
              },
              {
                "address": "aws_iam_policy.eip",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "eip",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Policy for runner to assign EIP"
                  },
                  "name": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "path": {
                    "constant_value": "/"
                  },
                  "policy": {
                    "references": [
                      "path.module"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_eip"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 413,
                  "EndLine": 421
                }
              },
              {
                "address": "aws_iam_policy.instance_docker_machine_policy",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "instance_docker_machine_policy",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Policy for docker machine."
                  },
                  "name": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "path": {
                    "constant_value": "/"
                  },
                  "policy": {
                    "references": [
                      "path.module"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 275,
                  "EndLine": 281
                }
              },
              {
                "address": "aws_iam_policy.instance_session_manager_policy",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "instance_session_manager_policy",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Policy session manager."
                  },
                  "name": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "path": {
                    "constant_value": "/"
                  },
                  "policy": {
                    "references": [
                      "path.module"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_runner_ssm_access"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 291,
                  "EndLine": 299
                }
              },
              {
                "address": "aws_iam_policy.service_linked_role",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "service_linked_role",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Policy for creation of service linked roles."
                  },
                  "name": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "path": {
                    "constant_value": "/"
                  },
                  "policy": {
                    "references": [
                      "path.module",
                      "var.arn_format"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.allow_iam_service_linked_role_creation"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 369,
                  "EndLine": 377
                }
              },
              {
                "address": "aws_iam_policy.ssm",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "ssm",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Policy for runner token param access via SSM"
                  },
                  "name": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "path": {
                    "constant_value": "/"
                  },
                  "policy": {
                    "references": [
                      "path.module",
                      "var.arn_format"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_manage_gitlab_token"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 393,
                  "EndLine": 401
                }
              },
              {
                "address": "aws_iam_role.docker_machine",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "docker_machine",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "assume_role_policy": {
                    "references": [
                      "var.docker_machine_role_json",
                      "var.docker_machine_role_json",
                      "path.module"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "permissions_boundary": {
                    "references": [
                      "var.permissions_boundary",
                      "var.arn_format",
                      "data.aws_caller_identity.current",
                      "var.permissions_boundary"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 336,
                  "EndLine": 341
                }
              },
              {
                "address": "aws_iam_role.instance",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "instance",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "assume_role_policy": {
                    "references": [
                      "var.instance_role_json",
                      "var.instance_role_json",
                      "path.module"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "permissions_boundary": {
                    "references": [
                      "var.permissions_boundary",
                      "var.arn_format",
                      "data.aws_caller_identity.current",
                      "var.permissions_boundary"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 265,
                  "EndLine": 270
                }
              },
              {
                "address": "aws_iam_role_policy.instance",
                "mode": "managed",
                "type": "aws_iam_role_policy",
                "name": "instance",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "name": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "policy": {
                    "references": [
                      "path.module",
                      "var.arn_format"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_cloudwatch_logging"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/logging.tf",
                  "StartLine": 1,
                  "EndLine": 6
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.docker_machine_cache_instance",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "docker_machine_cache_instance",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "local.bucket_policy"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.cache_bucket",
                    "var.cache_bucket"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 327,
                  "EndLine": 331
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.docker_machine_session_manager_aws_managed",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "docker_machine_session_manager_aws_managed",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "var.arn_format"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.docker_machine"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_docker_machine_ssm_access"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 359,
                  "EndLine": 364
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.docker_machine_user_defined_policies",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "docker_machine_user_defined_policies",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "var.docker_machine_iam_policy_arns",
                      "count.index"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.docker_machine"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.docker_machine_iam_policy_arns"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 352,
                  "EndLine": 356
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.eip",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "eip",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.eip[0]"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_eip"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 423,
                  "EndLine": 428
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.instance_docker_machine_policy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "instance_docker_machine_policy",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.instance_docker_machine_policy"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 283,
                  "EndLine": 286
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.instance_session_manager_aws_managed",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "instance_session_manager_aws_managed",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "var.arn_format"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_runner_ssm_access"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 308,
                  "EndLine": 313
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.instance_session_manager_policy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "instance_session_manager_policy",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.instance_session_manager_policy[0]"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_runner_ssm_access"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 301,
                  "EndLine": 306
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.service_linked_role",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "service_linked_role",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.service_linked_role[0]"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.allow_iam_service_linked_role_creation"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 379,
                  "EndLine": 384
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.ssm",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "ssm",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.ssm[0]"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_manage_gitlab_token"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 403,
                  "EndLine": 408
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.user_defined_policies",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "user_defined_policies",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "var.runner_iam_policy_arns",
                      "count.index"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.instance"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.runner_iam_policy_arns"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 318,
                  "EndLine": 322
                }
              },
              {
                "address": "aws_kms_alias.default",
                "mode": "managed",
                "type": "aws_kms_alias",
                "name": "default",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "name": {
                    "references": [
                      "var.kms_alias_name"
                    ]
                  },
                  "target_key_id": {
                    "references": [
                      "aws_kms_key.default[0]"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_kms",
                    "var.kms_alias_name"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/kms.tf",
                  "StartLine": 17,
                  "EndLine": 21
                }
              },
              {
                "address": "aws_kms_key.default",
                "mode": "managed",
                "type": "aws_kms_key",
                "name": "default",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "deletion_window_in_days": {
                    "references": [
                      "var.kms_deletion_window_in_days",
                      "var.kms_deletion_window_in_days"
                    ]
                  },
                  "description": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "enable_key_rotation": {
                    "references": [
                      "var.kms_deletion_window_in_days"
                    ]
                  },
                  "policy": {
                    "references": [
                      "path.module",
                      "var.arn_format",
                      "var.aws_region",
                      "data.aws_caller_identity.current"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_kms"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/kms.tf",
                  "StartLine": 1,
                  "EndLine": 15
                }
              },
              {
                "address": "aws_launch_configuration.gitlab_runner_instance",
                "mode": "managed",
                "type": "aws_launch_configuration",
                "name": "gitlab_runner_instance",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "associate_public_ip_address": {
                    "references": [
                      "var.runners_use_private_address"
                    ]
                  },
                  "ebs_optimized": {
                    "references": [
                      "var.runner_instance_ebs_optimized"
                    ]
                  },
                  "enable_monitoring": {
                    "references": [
                      "var.runner_instance_enable_monitoring"
                    ]
                  },
                  "iam_instance_profile": {
                    "references": [
                      "aws_iam_instance_profile.instance"
                    ]
                  },
                  "image_id": {
                    "references": [
                      "data.aws_ami.runner"
                    ]
                  },
                  "instance_type": {
                    "references": [
                      "var.instance_type"
                    ]
                  },
                  "key_name": {
                    "references": [
                      "var.ssh_key_pair"
                    ]
                  },
                  "name_prefix": {
                    "references": [
                      "var.runners_name"
                    ]
                  },
                  "security_groups": {
                    "references": [
                      "aws_security_group.runner"
                    ]
                  },
                  "spot_price": {
                    "references": [
                      "var.runner_instance_spot_price"
                    ]
                  },
                  "user_data": {
                    "references": [
                      "local.template_user_data"
                    ]
                  }
                },
                "schema_version": 0,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 206,
                  "EndLine": 233
                }
              },
              {
                "address": "aws_security_group.docker_machine",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "docker_machine",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.docker_machine_security_group_description"
                    ]
                  },
                  "name_prefix": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.tags",
                      "local.name_sg"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "var.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/security_groups.tf",
                  "StartLine": 123,
                  "EndLine": 134
                }
              },
              {
                "address": "aws_security_group.runner",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "runner",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.gitlab_runner_security_group_description"
                    ]
                  },
                  "name_prefix": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.tags",
                      "local.name_sg"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "var.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/security_groups.tf",
                  "StartLine": 5,
                  "EndLine": 33
                }
              },
              {
                "address": "aws_security_group_rule.docker_machine_docker_runner",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_docker_runner",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "aws_security_group.runner",
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "from_port": {
                    "constant_value": 2376
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "aws_security_group.runner"
                    ]
                  },
                  "to_port": {
                    "constant_value": 2376
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/security_groups.tf",
                  "StartLine": 141,
                  "EndLine": 155
                }
              },
              {
                "address": "aws_security_group_rule.docker_machine_docker_self",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_docker_self",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "from_port": {
                    "constant_value": 2376
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "self": {
                    "constant_value": true
                  },
                  "to_port": {
                    "constant_value": 2376
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/security_groups.tf",
                  "StartLine": 213,
                  "EndLine": 226
                }
              },
              {
                "address": "aws_security_group_rule.docker_machine_ping_runner",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_ping_runner",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "local.security_groups_ping",
                      "count.index",
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "from_port": {
                    "constant_value": -1
                  },
                  "protocol": {
                    "constant_value": "icmp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "local.security_groups_ping",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "constant_value": -1
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "local.security_groups_ping"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/security_groups.tf",
                  "StartLine": 190,
                  "EndLine": 206
                }
              },
              {
                "address": "aws_security_group_rule.docker_machine_ping_self",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_ping_self",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "from_port": {
                    "constant_value": -1
                  },
                  "protocol": {
                    "constant_value": "icmp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "self": {
                    "constant_value": true
                  },
                  "to_port": {
                    "constant_value": -1
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.enable_ping"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/security_groups.tf",
                  "StartLine": 245,
                  "EndLine": 259
                }
              },
              {
                "address": "aws_security_group_rule.docker_machine_ssh_runner",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_ssh_runner",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "local.security_groups_ssh",
                      "count.index",
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "from_port": {
                    "constant_value": 22
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "local.security_groups_ssh",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "constant_value": 22
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "local.security_groups_ssh"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/security_groups.tf",
                  "StartLine": 171,
                  "EndLine": 187
                }
              },
              {
                "address": "aws_security_group_rule.docker_machine_ssh_self",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "docker_machine_ssh_self",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "from_port": {
                    "constant_value": 22
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "self": {
                    "constant_value": true
                  },
                  "to_port": {
                    "constant_value": 22
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/security_groups.tf",
                  "StartLine": 229,
                  "EndLine": 242
                }
              },
              {
                "address": "aws_security_group_rule.out_all",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "out_all",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "cidr_blocks": {
                    "constant_value": [
                      "0.0.0.0/0"
                    ]
                  },
                  "description": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "from_port": {
                    "constant_value": 0
                  },
                  "protocol": {
                    "constant_value": "-1"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.docker_machine"
                    ]
                  },
                  "to_port": {
                    "constant_value": 65535
                  },
                  "type": {
                    "constant_value": "egress"
                  }
                },
                "schema_version": 2,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/security_groups.tf",
                  "StartLine": 266,
                  "EndLine": 279
                }
              },
              {
                "address": "aws_security_group_rule.runner_ping",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "runner_ping",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "cidr_blocks": {
                    "references": [
                      "var.gitlab_runner_ssh_cidr_blocks",
                      "count.index"
                    ]
                  },
                  "description": {
                    "references": [
                      "var.gitlab_runner_ssh_cidr_blocks",
                      "count.index",
                      "aws_security_group.runner"
                    ]
                  },
                  "from_port": {
                    "constant_value": -1
                  },
                  "protocol": {
                    "constant_value": "icmp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.runner"
                    ]
                  },
                  "to_port": {
                    "constant_value": -1
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.gitlab_runner_ssh_cidr_blocks",
                    "var.enable_ping",
                    "var.gitlab_runner_ssh_cidr_blocks"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/security_groups.tf",
                  "StartLine": 59,
                  "EndLine": 75
                }
              },
              {
                "address": "aws_security_group_rule.runner_ping_group",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "runner_ping_group",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.gitlab_runner_security_group_ids",
                      "count.index",
                      "aws_security_group.runner"
                    ]
                  },
                  "from_port": {
                    "constant_value": -1
                  },
                  "protocol": {
                    "constant_value": "icmp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.runner"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "var.gitlab_runner_security_group_ids",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "constant_value": -1
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.gitlab_runner_security_group_ids",
                    "var.enable_ping",
                    "var.gitlab_runner_security_group_ids"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/security_groups.tf",
                  "StartLine": 101,
                  "EndLine": 117
                }
              },
              {
                "address": "aws_security_group_rule.runner_ssh",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "runner_ssh",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "cidr_blocks": {
                    "references": [
                      "var.gitlab_runner_ssh_cidr_blocks",
                      "count.index"
                    ]
                  },
                  "description": {
                    "references": [
                      "var.gitlab_runner_ssh_cidr_blocks",
                      "count.index",
                      "aws_security_group.runner"
                    ]
                  },
                  "from_port": {
                    "constant_value": 22
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.runner"
                    ]
                  },
                  "to_port": {
                    "constant_value": 22
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.gitlab_runner_ssh_cidr_blocks",
                    "var.enable_gitlab_runner_ssh_access",
                    "var.gitlab_runner_ssh_cidr_blocks"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/security_groups.tf",
                  "StartLine": 40,
                  "EndLine": 56
                }
              },
              {
                "address": "aws_security_group_rule.runner_ssh_group",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "runner_ssh_group",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.gitlab_runner_security_group_ids",
                      "count.index",
                      "aws_security_group.runner"
                    ]
                  },
                  "from_port": {
                    "constant_value": 22
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.runner"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "var.gitlab_runner_security_group_ids",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "constant_value": 22
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.gitlab_runner_security_group_ids",
                    "var.enable_gitlab_runner_ssh_access",
                    "var.gitlab_runner_security_group_ids"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/security_groups.tf",
                  "StartLine": 82,
                  "EndLine": 98
                }
              },
              {
                "address": "aws_ssm_parameter.runner_registration_token",
                "mode": "managed",
                "type": "aws_ssm_parameter",
                "name": "runner_registration_token",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "name": {
                    "references": [
                      "local.secure_parameter_store_runner_token_key"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.tags"
                    ]
                  },
                  "type": {
                    "constant_value": "SecureString"
                  },
                  "value": {
                    "constant_value": "null"
                  }
                },
                "schema_version": 0,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 12,
                  "EndLine": 22
                }
              },
              {
                "address": "null_resource.remove_runner",
                "mode": "managed",
                "type": "null_resource",
                "name": "remove_runner",
                "provider_config_key": "runner:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "self",
                          "self",
                          "self",
                          "self"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "path.module",
                      "var.aws_region",
                      "var.runners_gitlab_url",
                      "local.secure_parameter_store_runner_token_key"
                    ]
                  }
                },
                "schema_version": 0,
                "depends_on": [
                  "aws_ssm_parameter.runner_registration_token"
                ],
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 24,
                  "EndLine": 38
                }
              },
              {
                "address": "data.aws_ami.docker-machine",
                "mode": "data",
                "type": "aws_ami",
                "name": "docker-machine",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "most_recent": {
                    "constant_value": "true"
                  },
                  "owners": {
                    "references": [
                      "var.runner_ami_owners"
                    ]
                  }
                },
                "schema_version": 0,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 143,
                  "EndLine": 155
                }
              },
              {
                "address": "data.aws_ami.runner",
                "mode": "data",
                "type": "aws_ami",
                "name": "runner",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "most_recent": {
                    "constant_value": "true"
                  },
                  "owners": {
                    "references": [
                      "var.ami_owners"
                    ]
                  }
                },
                "schema_version": 0,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 192,
                  "EndLine": 204
                }
              },
              {
                "address": "data.aws_availability_zone.runners",
                "mode": "data",
                "type": "aws_availability_zone",
                "name": "runners",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "name": {
                    "references": [
                      "data.aws_subnet.runners"
                    ]
                  }
                },
                "schema_version": 0,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 7,
                  "EndLine": 9
                }
              },
              {
                "address": "data.aws_caller_identity.current",
                "mode": "data",
                "type": "aws_caller_identity",
                "name": "current",
                "provider_config_key": "runner:aws",
                "schema_version": 0,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 1,
                  "EndLine": 1
                }
              },
              {
                "address": "data.aws_subnet.runners",
                "mode": "data",
                "type": "aws_subnet",
                "name": "runners",
                "provider_config_key": "runner:aws",
                "expressions": {
                  "id": {
                    "references": [
                      "var.subnet_id_runners"
                    ]
                  }
                },
                "schema_version": 0,
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 3,
                  "EndLine": 5
                }
              },
              {
                "address": "data.null_data_source.agent_tags",
                "mode": "data",
                "type": "null_data_source",
                "name": "agent_tags",
                "provider_config_key": "runner:null",
                "expressions": {
                  "inputs": {
                    "references": [
                      "local.agent_tags",
                      "count.index",
                      "local.agent_tags",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.agent_tags"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/tags.tf",
                  "StartLine": 42,
                  "EndLine": 50
                }
              },
              {
                "address": "data.null_data_source.tags",
                "mode": "data",
                "type": "null_data_source",
                "name": "tags",
                "provider_config_key": "runner:null",
                "expressions": {
                  "inputs": {
                    "references": [
                      "local.tags",
                      "count.index",
                      "local.tags",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.tags"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/tags.tf",
                  "StartLine": 32,
                  "EndLine": 40
                }
              }
            ],
            "module_calls": {
              "cache": {
                "source": "./modules/cache",
                "expressions": {
                  "cache_bucket_name_include_account_id": {
                    "references": [
                      "var.cache_bucket_name_include_account_id"
                    ]
                  },
                  "cache_bucket_prefix": {
                    "references": [
                      "var.cache_bucket_prefix"
                    ]
                  },
                  "cache_bucket_set_random_suffix": {
                    "references": [
                      "var.cache_bucket_set_random_suffix"
                    ]
                  },
                  "cache_bucket_versioning": {
                    "references": [
                      "var.cache_bucket_versioning"
                    ]
                  },
                  "cache_expiration_days": {
                    "references": [
                      "var.cache_expiration_days"
                    ]
                  },
                  "create_cache_bucket": {
                    "references": [
                      "var.cache_bucket"
                    ]
                  },
                  "environment": {
                    "references": [
                      "var.environment"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.tags"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "arn": {
                      "expression": {
                        "references": [
                          "aws_s3_bucket.build_cache"
                        ]
                      },
                      "description": "The ARN of the created bucket."
                    },
                    "bucket": {
                      "expression": {
                        "references": [
                          "aws_s3_bucket.build_cache"
                        ]
                      },
                      "description": "Name of the created bucket."
                    },
                    "policy_arn": {
                      "expression": {
                        "references": [
                          "aws_iam_policy.docker_machine_cache"
                        ]
                      },
                      "description": "Policy for users of the cache (bucket)."
                    }
                  },
                  "resources": [
                    {
                      "address": "aws_iam_policy.docker_machine_cache",
                      "mode": "managed",
                      "type": "aws_iam_policy",
                      "name": "docker_machine_cache",
                      "provider_config_key": "cache:aws",
                      "expressions": {
                        "description": {
                          "constant_value": "Policy for docker machine instance to access cache"
                        },
                        "name": {
                          "references": [
                            "var.environment"
                          ]
                        },
                        "path": {
                          "constant_value": "/"
                        },
                        "policy": {
                          "references": [
                            "path.module",
                            "var.create_cache_bucket",
                            "aws_s3_bucket.build_cache",
                            "var.arn_format",
                            "aws_s3_bucket.build_cache[0]"
                          ]
                        },
                        "tags": {
                          "references": [
                            "local.tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create_cache_bucket"
                        ]
                      },
                      "raw_data": {
                        "FileName": ".terraform/modules/runner/modules/cache/main.tf",
                        "StartLine": 76,
                        "EndLine": 89
                      }
                    },
                    {
                      "address": "aws_s3_bucket.build_cache",
                      "mode": "managed",
                      "type": "aws_s3_bucket",
                      "name": "build_cache",
                      "provider_config_key": "cache:aws",
                      "expressions": {
                        "acl": {
                          "constant_value": "private"
                        },
                        "bucket": {
                          "references": [
                            "local.cache_bucket_name"
                          ]
                        },
                        "force_destroy": {
                          "constant_value": true
                        },
                        "lifecycle_rule": [
                          {
                            "enabled": {
                              "references": [
                                "var.cache_lifecycle_clear"
                              ]
                            },
                            "expiration": [
                              {
                                "days": {
                                  "references": [
                                    "var.cache_expiration_days"
                                  ]
                                }
                              }
                            ],
                            "id": {
                              "constant_value": "clear"
                            },
                            "noncurrent_version_expiration": [
                              {
                                "days": {
                                  "references": [
                                    "var.cache_expiration_days"
                                  ]
                                }
                              }
                            ],
                            "prefix": {
                              "references": [
                                "var.cache_lifecycle_prefix"
                              ]
                            }
                          }
                        ],
                        "server_side_encryption_configuration": [
                          {
                            "rule": [
                              {
                                "apply_server_side_encryption_by_default": [
                                  {
                                    "sse_algorithm": {
                                      "constant_value": "AES256"
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "tags": {
                          "references": [
                            "local.tags"
                          ]
                        },
                        "versioning": [
                          {
                            "enabled": {
                              "references": [
                                "var.cache_bucket_versioning"
                              ]
                            }
                          }
                        ]
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create_cache_bucket"
                        ]
                      },
                      "raw_data": {
                        "FileName": ".terraform/modules/runner/modules/cache/main.tf",
                        "StartLine": 26,
                        "EndLine": 62
                      }
                    },
                    {
                      "address": "aws_s3_bucket_public_access_block.build_cache_policy",
                      "mode": "managed",
                      "type": "aws_s3_bucket_public_access_block",
                      "name": "build_cache_policy",
                      "provider_config_key": "cache:aws",
                      "expressions": {
                        "block_public_acls": {
                          "constant_value": true
                        },
                        "block_public_policy": {
                          "constant_value": true
                        },
                        "bucket": {
                          "references": [
                            "aws_s3_bucket.build_cache[0]"
                          ]
                        },
                        "ignore_public_acls": {
                          "constant_value": true
                        },
                        "restrict_public_buckets": {
                          "constant_value": true
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create_cache_bucket"
                        ]
                      },
                      "raw_data": {
                        "FileName": ".terraform/modules/runner/modules/cache/main.tf",
                        "StartLine": 65,
                        "EndLine": 74
                      }
                    },
                    {
                      "address": "random_string.s3_suffix",
                      "mode": "managed",
                      "type": "random_string",
                      "name": "s3_suffix",
                      "provider_config_key": "cache:random",
                      "expressions": {
                        "length": {
                          "constant_value": 8
                        },
                        "special": {
                          "constant_value": false
                        },
                        "upper": {
                          "constant_value": false
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "var.cache_bucket_set_random_suffix"
                        ]
                      },
                      "raw_data": {
                        "FileName": ".terraform/modules/runner/modules/cache/main.tf",
                        "StartLine": 19,
                        "EndLine": 24
                      }
                    },
                    {
                      "address": "data.aws_caller_identity.current",
                      "mode": "data",
                      "type": "aws_caller_identity",
                      "name": "current",
                      "provider_config_key": "cache:aws",
                      "schema_version": 0,
                      "raw_data": {
                        "FileName": ".terraform/modules/runner/modules/cache/main.tf",
                        "StartLine": 1,
                        "EndLine": 1
                      }
                    }
                  ],
                  "variables": {
                    "arn_format": {
                      "default": "arn:aws",
                      "description": "ARN format to be used. May be changed to support deployment in GovCloud/China regions."
                    },
                    "cache_bucket_name_include_account_id": {
                      "default": true,
                      "description": "Boolean to add current account ID to cache bucket name."
                    },
                    "cache_bucket_prefix": {
                      "default": "",
                      "description": "Prefix for s3 cache bucket name."
                    },
                    "cache_bucket_set_random_suffix": {
                      "default": false,
                      "description": "Random string suffix for s3 cache bucket"
                    },
                    "cache_bucket_versioning": {
                      "default": "false",
                      "description": "Boolean used to enable versioning on the cache bucket, false by default."
                    },
                    "cache_expiration_days": {
                      "default": 1,
                      "description": "Number of days before cache objects expires."
                    },
                    "cache_lifecycle_clear": {
                      "default": true,
                      "description": "Enable the rule to cleanup the cache for expired objects."
                    },
                    "cache_lifecycle_prefix": {
                      "default": "runner/",
                      "description": "Object key prefix identifying one or more objects to which the clean up rule applies."
                    },
                    "create_cache_bucket": {
                      "default": true,
                      "description": "This module is by default included in the runner module. To disable the creation of the bucket this parameter can be disabled."
                    },
                    "environment": {
                      "description": "A name that identifies the environment, used as prefix and for tagging."
                    },
                    "tags": {
                      "default": {},
                      "description": "Map of tags that will be added to created resources. By default resources will be tagged with name and environment."
                    }
                  }
                },
                "raw_data": {
                  "FileName": ".terraform/modules/runner/main.tf",
                  "StartLine": 243,
                  "EndLine": 255
                }
              }
            },
            "variables": {
              "agent_tags": {
                "default": {},
                "description": "Map of tags that will be added to agent EC2 instances."
              },
              "allow_iam_service_linked_role_creation": {
                "default": true,
                "description": "Boolean used to control attaching the policy to a runner instance to create service linked roles."
              },
              "ami_filter": {
                "default": {
                  "name": [
                    "amzn2-ami-hvm-2.*-x86_64-ebs"
                  ]
                },
                "description": "List of maps used to create the AMI filter for the Gitlab runner agent AMI. Must resolve to an Amazon Linux 1 or 2 image."
              },
              "ami_owners": {
                "default": [
                  "amazon"
                ],
                "description": "The list of owners used to select the AMI of Gitlab runner agent instances."
              },
              "arn_format": {
                "default": "arn:aws",
                "description": "ARN format to be used. May be changed to support deployment in GovCloud/China regions."
              },
              "asg_delete_timeout": {
                "default": "10m",
                "description": "Timeout when trying to delete the Runner ASG."
              },
              "aws_region": {
                "description": "AWS region."
              },
              "aws_zone": {
                "default": "a",
                "description": "Deprecated. Will be removed in the next major release."
              },
              "cache_bucket": {
                "default": {
                  "bucket": "",
                  "create": "true",
                  "policy": ""
                },
                "description": "Configuration to control the creation of the cache bucket. By default the bucket will be created and used as shared cache. To use the same cache across multiple runners disable the creation of the cache and provide a policy and bucket name. See the public runner example for more details."
              },
              "cache_bucket_name_include_account_id": {
                "default": true,
                "description": "Boolean to add current account ID to cache bucket name."
              },
              "cache_bucket_prefix": {
                "default": "",
                "description": "Prefix for s3 cache bucket name."
              },
              "cache_bucket_set_random_suffix": {
                "default": false,
                "description": "Append the cache bucket name with a random string suffix"
              },
              "cache_bucket_versioning": {
                "default": false,
                "description": "Boolean used to enable versioning on the cache bucket, false by default."
              },
              "cache_expiration_days": {
                "default": 1,
                "description": "Number of days before cache objects expires."
              },
              "cache_shared": {
                "default": false,
                "description": "Enables cache sharing between runners, false by default."
              },
              "cloudwatch_logging_retention_in_days": {
                "default": 0,
                "description": "Retention for cloudwatch logs. Defaults to unlimited"
              },
              "docker_machine_download_url": {
                "default": "https://gitlab-docker-machine-downloads.s3.amazonaws.com/v0.16.2-gitlab.2/docker-machine",
                "description": "Full url pointing to a linux x64 distribution of docker machine. Once set `docker_machine_version` will be ingored. For example the GitLab version, https://gitlab-docker-machine-downloads.s3.amazonaws.com/v0.16.2-gitlab.2/docker-machine."
              },
              "docker_machine_iam_policy_arns": {
                "default": [],
                "description": "List of policy ARNs to be added to the instance profile of the docker machine runners."
              },
              "docker_machine_instance_type": {
                "default": "m5.large",
                "description": "Instance type used for the instances hosting docker-machine."
              },
              "docker_machine_options": {
                "default": [],
                "description": "List of additional options for the docker machine config. Each element of this list must be a key=value pair. E.g. '[\"amazonec2-zone=a\"]'"
              },
              "docker_machine_role_json": {
                "default": "",
                "description": "Docker machine runner instance override policy, expected to be in JSON format."
              },
              "docker_machine_security_group_description": {
                "default": "A security group containing docker-machine instances",
                "description": "A description for the docker-machine security group"
              },
              "docker_machine_spot_price_bid": {
                "default": "0.06",
                "description": "Spot price bid."
              },
              "docker_machine_version": {
                "default": "",
                "description": "By default docker_machine_download_url is used to set the docker machine version. Version of docker-machine. The version will be ingored once `docker_machine_download_url` is set."
              },
              "enable_asg_recreation": {
                "default": true,
                "description": "Enable automatic redeployment of the Runner ASG when the Launch Configs change."
              },
              "enable_cloudwatch_logging": {
                "default": true,
                "description": "Boolean used to enable or disable the CloudWatch logging."
              },
              "enable_docker_machine_ssm_access": {
                "default": false,
                "description": "Add IAM policies to the docker-machine instances to connect via the Session Manager."
              },
              "enable_eip": {
                "default": false,
                "description": "Enable the assignment of an EIP to the gitlab runner instance"
              },
              "enable_forced_updates": {
                "default": null,
                "description": "DEPRECATED! and is replaced by `enable_asg_recreation. Setting this variable to true will do the oposite as expected. For backward compatibility the variable will remain some releases. Old desription: Enable automatic redeployment of the Runner ASG when the Launch Configs change."
              },
              "enable_gitlab_runner_ssh_access": {
                "default": false,
                "description": "Enables SSH Access to the gitlab runner instance."
              },
              "enable_kms": {
                "default": false,
                "description": "Let the module manage a KMS key, logs will be encrypted via KMS. Be-aware of the costs of an custom key."
              },
              "enable_manage_gitlab_token": {
                "default": true,
                "description": "Boolean to enable the management of the GitLab token in SSM. If `true` the token will be stored in SSM, which means the SSM property is a terraform managed resource. If `false` the Gitlab token will be stored in the SSM by the user-data script during creation of the the instance. However the SSM parameter is not managed by terraform and will remain in SSM after a `terraform destroy`."
              },
              "enable_ping": {
                "default": false,
                "description": "Allow ICMP Ping to the ec2 instances."
              },
              "enable_runner_ssm_access": {
                "default": false,
                "description": "Add IAM policies to the runner agent instance to connect via the Session Manager."
              },
              "enable_runner_user_data_trace_log": {
                "default": false,
                "description": "Enable bash xtrace for the user data script that creates the EC2 instance for the runner agent. Be aware this could log sensitive data such as you GitLab runner token."
              },
              "enable_schedule": {
                "default": false,
                "description": "Flag used to enable/disable auto scaling group schedule for the runner instance. "
              },
              "environment": {
                "description": "A name that identifies the environment, used as prefix and for tagging."
              },
              "gitlab_runner_egress_rules": {
                "default": [
                  {
                    "cidr_blocks": [
                      "0.0.0.0/0"
                    ],
                    "description": null,
                    "from_port": 0,
                    "ipv6_cidr_blocks": [
                      "::/0"
                    ],
                    "prefix_list_ids": null,
                    "protocol": "-1",
                    "security_groups": null,
                    "self": null,
                    "to_port": 0
                  }
                ],
                "description": "List of egress rules for the gitlab runner instance."
              },
              "gitlab_runner_registration_config": {
                "default": {
                  "access_level": "",
                  "description": "",
                  "locked_to_project": "",
                  "maximum_timeout": "",
                  "registration_token": "",
                  "run_untagged": "",
                  "tag_list": ""
                },
                "description": "Configuration used to register the runner. See the README for an example, or reference the examples in the examples directory of this repo."
              },
              "gitlab_runner_security_group_description": {
                "default": "A security group containing gitlab-runner agent instances",
                "description": "A description for the gitlab-runner security group"
              },
              "gitlab_runner_security_group_ids": {
                "default": [],
                "description": "A list of security group ids that are allowed to access the gitlab runner agent"
              },
              "gitlab_runner_ssh_cidr_blocks": {
                "default": [],
                "description": "List of CIDR blocks to allow SSH Access to the gitlab runner instance."
              },
              "gitlab_runner_version": {
                "default": "13.8.0",
                "description": "Version of the GitLab runner."
              },
              "instance_role_json": {
                "default": "",
                "description": "Default runner instance override policy, expected to be in JSON format."
              },
              "instance_type": {
                "default": "t3.micro",
                "description": "Instance type used for the GitLab runner."
              },
              "kms_alias_name": {
                "default": "",
                "description": "Alias added to the kms_key (if created and not provided by kms_key_id)"
              },
              "kms_deletion_window_in_days": {
                "default": 7,
                "description": "Key rotation window, set to 0 for no rotation. Only used when `enable_kms` is set to `true`."
              },
              "kms_key_id": {
                "default": "",
                "description": "KMS key id to encrypted the CloudWatch logs. Ensure CloudWatch has access to the provided KMS key."
              },
              "log_group_name": {
                "default": null,
                "description": "Option to override the default name (`environment`) of the log group, requires `enable_cloudwatch_logging = true`."
              },
              "metrics_autoscaling": {
                "default": null,
                "description": "A list of metrics to collect. The allowed values are GroupDesiredCapacity, GroupInServiceCapacity, GroupPendingCapacity, GroupMinSize, GroupMaxSize, GroupInServiceInstances, GroupPendingInstances, GroupStandbyInstances, GroupStandbyCapacity, GroupTerminatingCapacity, GroupTerminatingInstances, GroupTotalCapacity, GroupTotalInstances."
              },
              "overrides": {
                "default": {
                  "name_docker_machine_runners": "",
                  "name_runner_agent_instance": "",
                  "name_sg": ""
                },
                "description": "This maps provides the possibility to override some defaults. The following attributes are supported: `name_sg` overwrite the `Name` tag for all security groups created by this module. `name_runner_agent_instance` override the `Name` tag for the ec2 instance defined in the auto launch configuration. `name_docker_machine_runners` ovverrid the `Name` tag spot instances created by the runner agent."
              },
              "permissions_boundary": {
                "default": "",
                "description": "Name of permissions boundary policy to attach to AWS IAM roles"
              },
              "runner_ami_filter": {
                "default": {
                  "name": [
                    "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"
                  ]
                },
                "description": "List of maps used to create the AMI filter for the Gitlab runner docker-machine AMI."
              },
              "runner_ami_owners": {
                "default": [
                  "099720109477"
                ],
                "description": "The list of owners used to select the AMI of Gitlab runner docker-machine instances."
              },
              "runner_iam_policy_arns": {
                "default": [],
                "description": "List of policy ARNs to be added to the instance profile of the gitlab runner agent ec2 instance."
              },
              "runner_instance_ebs_optimized": {
                "default": true,
                "description": "Enable the GitLab runner instance to be EBS-optimized."
              },
              "runner_instance_enable_monitoring": {
                "default": true,
                "description": "Enable the GitLab runner instance to have detailed monitoring."
              },
              "runner_instance_spot_price": {
                "default": null,
                "description": "By setting a spot price bid price the runner agent will be created via a spot request. Be aware that spot instances can be stopped by AWS."
              },
              "runner_root_block_device": {
                "default": {},
                "description": "The EC2 instance root block device configuration. Takes the following keys: `delete_on_termination`, `volume_type`, `volume_size`, `encrypted`, `iops`"
              },
              "runner_tags": {
                "default": {},
                "description": "Map of tags that will be added to runner EC2 instances."
              },
              "runners_additional_volumes": {
                "default": [],
                "description": "Additional volumes that will be used in the runner config.toml, e.g Docker socket"
              },
              "runners_concurrent": {
                "default": 10,
                "description": "Concurrent value for the runners, will be used in the runner config.toml."
              },
              "runners_docker_runtime": {
                "default": "",
                "description": "docker runtime for runners, will be used in the runner config.toml"
              },
              "runners_ebs_optimized": {
                "default": true,
                "description": "Enable runners to be EBS-optimized."
              },
              "runners_environment_vars": {
                "default": [],
                "description": "Environment variables during build execution, e.g. KEY=Value, see runner-public example. Will be used in the runner config.toml"
              },
              "runners_executor": {
                "default": "docker+machine",
                "description": "The executor to use. Currently supports `docker+machine` or `docker`."
              },
              "runners_gitlab_url": {
                "description": "URL of the GitLab instance to connect to."
              },
              "runners_helper_image": {
                "default": "",
                "description": "Overrides the default helper image used to clone repos and upload artifacts, will be used in the runner config.toml"
              },
              "runners_iam_instance_profile_name": {
                "default": "",
                "description": "IAM instance profile name of the runners, will be used in the runner config.toml"
              },
              "runners_idle_count": {
                "default": 0,
                "description": "Idle count of the runners, will be used in the runner config.toml."
              },
              "runners_idle_time": {
                "default": 600,
                "description": "Idle time of the runners, will be used in the runner config.toml."
              },
              "runners_image": {
                "default": "docker:18.03.1-ce",
                "description": "Image to run builds, will be used in the runner config.toml"
              },
              "runners_install_amazon_ecr_credential_helper": {
                "default": false,
                "description": "Install amazon-ecr-credential-helper inside `userdata_pre_install` script"
              },
              "runners_limit": {
                "default": 0,
                "description": "Limit for the runners, will be used in the runner config.toml."
              },
              "runners_machine_autoscaling": {
                "default": [],
                "description": "Set autoscaling parameters based on periods, see https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-runnersmachine-section"
              },
              "runners_max_builds": {
                "default": 0,
                "description": "Max builds for each runner after which it will be removed, will be used in the runner config.toml. By default set to 0, no maxBuilds will be set in the configuration."
              },
              "runners_monitoring": {
                "default": false,
                "description": "Enable detailed cloudwatch monitoring for spot instances."
              },
              "runners_name": {
                "description": "Name of the runner, will be used in the runner config.toml."
              },
              "runners_off_peak_idle_count": {
                "default": -1,
                "description": "Deprecated, please use `runners_machine_autoscaling`. Off peak idle count of the runners, will be used in the runner config.toml."
              },
              "runners_off_peak_idle_time": {
                "default": -1,
                "description": "Deprecated, please use `runners_machine_autoscaling`. Off peak idle time of the runners, will be used in the runner config.toml."
              },
              "runners_off_peak_periods": {
                "default": null,
                "description": "Deprecated, please use `runners_machine_autoscaling`. Off peak periods of the runners, will be used in the runner config.toml."
              },
              "runners_off_peak_timezone": {
                "default": null,
                "description": "Deprecated, please use `runners_machine_autoscaling`. Off peak idle time zone of the runners, will be used in the runner config.toml."
              },
              "runners_output_limit": {
                "default": 4096,
                "description": "Sets the maximum build log size in kilobytes, by default set to 4096 (4MB)"
              },
              "runners_post_build_script": {
                "default": "\"\"",
                "description": "Commands to be executed on the Runner just after executing the build, but before executing after_script. "
              },
              "runners_pre_build_script": {
                "default": "\"\"",
                "description": "Script to execute in the pipeline just before the build, will be used in the runner config.toml"
              },
              "runners_pre_clone_script": {
                "default": "\"\"",
                "description": "Commands to be executed on the Runner before cloning the Git repository. this can be used to adjust the Git client configuration first, for example. "
              },
              "runners_privileged": {
                "default": true,
                "description": "Runners will run in privileged mode, will be used in the runner config.toml"
              },
              "runners_pull_policy": {
                "default": "always",
                "description": "pull_policy for the runners, will be used in the runner config.toml"
              },
              "runners_request_concurrency": {
                "default": 1,
                "description": "Limit number of concurrent requests for new jobs from GitLab (default 1)"
              },
              "runners_request_spot_instance": {
                "default": true,
                "description": "Whether or not to request spot instances via docker-machine"
              },
              "runners_root_size": {
                "default": 16,
                "description": "Runner instance root size in GB."
              },
              "runners_services_volumes_tmpfs": {
                "default": []
              },
              "runners_shm_size": {
                "default": 0,
                "description": "shm_size for the runners, will be used in the runner config.toml"
              },
              "runners_token": {
                "default": "__REPLACED_BY_USER_DATA__",
                "description": "Token for the runner, will be used in the runner config.toml."
              },
              "runners_use_private_address": {
                "default": true,
                "description": "Restrict runners to the use of a private IP address"
              },
              "runners_volumes_tmpfs": {
                "default": []
              },
              "schedule_config": {
                "default": {
                  "scale_in_count": "0",
                  "scale_in_recurrence": "0 18 * * 1-5",
                  "scale_out_count": "1",
                  "scale_out_recurrence": "0 8 * * 1-5"
                },
                "description": "Map containing the configuration of the ASG scale-in and scale-up for the runner instance. Will only be used if enable_schedule is set to true. "
              },
              "secure_parameter_store_runner_token_key": {
                "default": "runner-token",
                "description": "The key name used store the Gitlab runner token in Secure Parameter Store"
              },
              "ssh_key_pair": {
                "default": null,
                "description": "Set this to use existing AWS key pair"
              },
              "subnet_id_runners": {
                "description": "List of subnets used for hosting the gitlab-runners."
              },
              "subnet_ids_gitlab_runner": {
                "description": "Subnet used for hosting the GitLab runner."
              },
              "tags": {
                "default": {},
                "description": "Map of tags that will be added to created resources. By default resources will be tagged with name and environment."
              },
              "userdata_post_install": {
                "default": "",
                "description": "User-data script snippet to insert after GitLab runner install"
              },
              "userdata_pre_install": {
                "default": "",
                "description": "User-data script snippet to insert before GitLab runner install"
              },
              "vpc_id": {
                "description": "The target VPC for the docker-machine and runner instances."
              }
            }
          },
          "raw_data": {
            "FileName": "main.tf",
            "StartLine": 22,
            "EndLine": 36
          }
        },
        "vpc": {
          "source": "terraform-aws-modules/vpc/aws",
          "expressions": {
            "azs": {
              "constant_value": [
                "us-east-1a",
                "us-east-1b",
                "us-east-1c"
              ]
            },
            "cidr": {
              "constant_value": "10.0.0.0/16"
            },
            "enable_nat_gateway": {
              "constant_value": true
            },
            "enable_vpn_gateway": {
              "constant_value": true
            },
            "name": {
              "constant_value": "my-vpc"
            },
            "private_subnets": {
              "constant_value": [
                "10.0.1.0/24"
              ]
            },
            "public_subnets": {
              "constant_value": [
                "10.0.101.0/24"
              ]
            }
          },
          "module": {
            "outputs": {
              "azs": {
                "expression": {
                  "references": [
                    "var.azs"
                  ]
                },
                "description": "A list of availability zones specified as argument to this module"
              },
              "cgw_arns": {
                "expression": {
                  "references": [
                    "aws_customer_gateway.this"
                  ]
                },
                "description": "List of ARNs of Customer Gateway"
              },
              "cgw_ids": {
                "expression": {
                  "references": [
                    "aws_customer_gateway.this"
                  ]
                },
                "description": "List of IDs of Customer Gateway"
              },
              "database_internet_gateway_route_id": {
                "expression": {
                  "references": [
                    "aws_route.database_internet_gateway"
                  ]
                },
                "description": "ID of the database internet gateway route."
              },
              "database_ipv6_egress_route_id": {
                "expression": {
                  "references": [
                    "aws_route.database_ipv6_egress"
                  ]
                },
                "description": "ID of the database IPv6 egress route."
              },
              "database_nat_gateway_route_ids": {
                "expression": {
                  "references": [
                    "aws_route.database_nat_gateway"
                  ]
                },
                "description": "List of IDs of the database nat gateway route."
              },
              "database_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.database"
                  ]
                },
                "description": "ARN of the database network ACL"
              },
              "database_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.database"
                  ]
                },
                "description": "ID of the database network ACL"
              },
              "database_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.database"
                  ]
                },
                "description": "List of IDs of the database route table association"
              },
              "database_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.database",
                    "aws_route_table.database",
                    "aws_route_table.private"
                  ]
                },
                "description": "List of IDs of database route tables"
              },
              "database_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of ARNs of database subnets"
              },
              "database_subnet_group": {
                "expression": {
                  "references": [
                    "aws_db_subnet_group.database"
                  ]
                },
                "description": "ID of database subnet group"
              },
              "database_subnet_group_name": {
                "expression": {
                  "references": [
                    "aws_db_subnet_group.database"
                  ]
                },
                "description": "Name of database subnet group"
              },
              "database_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of IDs of database subnets"
              },
              "database_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of cidr_blocks of database subnets"
              },
              "database_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC"
              },
              "default_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the default network ACL"
              },
              "default_route_table_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the default route table"
              },
              "default_security_group_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the security group created by default on VPC creation"
              },
              "default_vpc_arn": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ARN of the Default VPC"
              },
              "default_vpc_cidr_block": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The CIDR block of the Default VPC"
              },
              "default_vpc_default_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the default network ACL of the Default VPC"
              },
              "default_vpc_default_route_table_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the default route table of the Default VPC"
              },
              "default_vpc_default_security_group_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the security group created by default on Default VPC creation"
              },
              "default_vpc_enable_dns_hostnames": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "Whether or not the Default VPC has DNS hostname support"
              },
              "default_vpc_enable_dns_support": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "Whether or not the Default VPC has DNS support"
              },
              "default_vpc_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the Default VPC"
              },
              "default_vpc_instance_tenancy": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "Tenancy of instances spin up within Default VPC"
              },
              "default_vpc_main_route_table_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the main route table associated with the Default VPC"
              },
              "egress_only_internet_gateway_id": {
                "expression": {
                  "references": [
                    "aws_egress_only_internet_gateway.this"
                  ]
                },
                "description": "The ID of the egress only Internet Gateway"
              },
              "elasticache_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.elasticache"
                  ]
                },
                "description": "ARN of the elasticache network ACL"
              },
              "elasticache_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.elasticache"
                  ]
                },
                "description": "ID of the elasticache network ACL"
              },
              "elasticache_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.elasticache"
                  ]
                },
                "description": "List of IDs of the elasticache route table association"
              },
              "elasticache_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.elasticache",
                    "aws_route_table.elasticache",
                    "aws_route_table.private"
                  ]
                },
                "description": "List of IDs of elasticache route tables"
              },
              "elasticache_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of ARNs of elasticache subnets"
              },
              "elasticache_subnet_group": {
                "expression": {
                  "references": [
                    "aws_elasticache_subnet_group.elasticache"
                  ]
                },
                "description": "ID of elasticache subnet group"
              },
              "elasticache_subnet_group_name": {
                "expression": {
                  "references": [
                    "aws_elasticache_subnet_group.elasticache"
                  ]
                },
                "description": "Name of elasticache subnet group"
              },
              "elasticache_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of IDs of elasticache subnets"
              },
              "elasticache_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of cidr_blocks of elasticache subnets"
              },
              "elasticache_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC"
              },
              "igw_arn": {
                "expression": {
                  "references": [
                    "aws_internet_gateway.this"
                  ]
                },
                "description": "The ARN of the Internet Gateway"
              },
              "igw_id": {
                "expression": {
                  "references": [
                    "aws_internet_gateway.this"
                  ]
                },
                "description": "The ID of the Internet Gateway"
              },
              "intra_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.intra"
                  ]
                },
                "description": "ARN of the intra network ACL"
              },
              "intra_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.intra"
                  ]
                },
                "description": "ID of the intra network ACL"
              },
              "intra_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.intra"
                  ]
                },
                "description": "List of IDs of the intra route table association"
              },
              "intra_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.intra"
                  ]
                },
                "description": "List of IDs of intra route tables"
              },
              "intra_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of ARNs of intra subnets"
              },
              "intra_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of IDs of intra subnets"
              },
              "intra_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of cidr_blocks of intra subnets"
              },
              "intra_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC"
              },
              "name": {
                "expression": {
                  "references": [
                    "var.name"
                  ]
                },
                "description": "The name of the VPC specified as argument to this module"
              },
              "nat_ids": {
                "expression": {
                  "references": [
                    "aws_eip.nat"
                  ]
                },
                "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway"
              },
              "nat_public_ips": {
                "expression": {
                  "references": [
                    "var.reuse_nat_ips",
                    "var.external_nat_ips",
                    "aws_eip.nat"
                  ]
                },
                "description": "List of public Elastic IPs created for AWS NAT Gateway"
              },
              "natgw_ids": {
                "expression": {
                  "references": [
                    "aws_nat_gateway.this"
                  ]
                },
                "description": "List of NAT Gateway IDs"
              },
              "outpost_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.outpost"
                  ]
                },
                "description": "ARN of the outpost network ACL"
              },
              "outpost_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.outpost"
                  ]
                },
                "description": "ID of the outpost network ACL"
              },
              "outpost_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of ARNs of outpost subnets"
              },
              "outpost_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of IDs of outpost subnets"
              },
              "outpost_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of cidr_blocks of outpost subnets"
              },
              "outpost_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC"
              },
              "private_ipv6_egress_route_ids": {
                "expression": {
                  "references": [
                    "aws_route.private_ipv6_egress"
                  ]
                },
                "description": "List of IDs of the ipv6 egress route."
              },
              "private_nat_gateway_route_ids": {
                "expression": {
                  "references": [
                    "aws_route.private_nat_gateway"
                  ]
                },
                "description": "List of IDs of the private nat gateway route."
              },
              "private_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.private"
                  ]
                },
                "description": "ARN of the private network ACL"
              },
              "private_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.private"
                  ]
                },
                "description": "ID of the private network ACL"
              },
              "private_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.private"
                  ]
                },
                "description": "List of IDs of the private route table association"
              },
              "private_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.private"
                  ]
                },
                "description": "List of IDs of private route tables"
              },
              "private_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of ARNs of private subnets"
              },
              "private_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of IDs of private subnets"
              },
              "private_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of cidr_blocks of private subnets"
              },
              "private_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC"
              },
              "public_internet_gateway_ipv6_route_id": {
                "expression": {
                  "references": [
                    "aws_route.public_internet_gateway_ipv6"
                  ]
                },
                "description": "ID of the IPv6 internet gateway route."
              },
              "public_internet_gateway_route_id": {
                "expression": {
                  "references": [
                    "aws_route.public_internet_gateway"
                  ]
                },
                "description": "ID of the internet gateway route."
              },
              "public_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.public"
                  ]
                },
                "description": "ARN of the public network ACL"
              },
              "public_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.public"
                  ]
                },
                "description": "ID of the public network ACL"
              },
              "public_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.public"
                  ]
                },
                "description": "List of IDs of the public route table association"
              },
              "public_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.public"
                  ]
                },
                "description": "List of IDs of public route tables"
              },
              "public_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of ARNs of public subnets"
              },
              "public_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of IDs of public subnets"
              },
              "public_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of cidr_blocks of public subnets"
              },
              "public_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC"
              },
              "redshift_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.redshift"
                  ]
                },
                "description": "ARN of the redshift network ACL"
              },
              "redshift_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.redshift"
                  ]
                },
                "description": "ID of the redshift network ACL"
              },
              "redshift_public_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.redshift_public"
                  ]
                },
                "description": "List of IDs of the public redshidt route table association"
              },
              "redshift_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.redshift"
                  ]
                },
                "description": "List of IDs of the redshift route table association"
              },
              "redshift_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.redshift",
                    "aws_route_table.redshift",
                    "aws_route_table.private"
                  ]
                },
                "description": "List of IDs of redshift route tables"
              },
              "redshift_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of ARNs of redshift subnets"
              },
              "redshift_subnet_group": {
                "expression": {
                  "references": [
                    "aws_redshift_subnet_group.redshift"
                  ]
                },
                "description": "ID of redshift subnet group"
              },
              "redshift_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of IDs of redshift subnets"
              },
              "redshift_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of cidr_blocks of redshift subnets"
              },
              "redshift_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC"
              },
              "this_customer_gateway": {
                "expression": {
                  "references": [
                    "aws_customer_gateway.this"
                  ]
                },
                "description": "Map of Customer Gateway attributes"
              },
              "vgw_arn": {
                "expression": {
                  "references": [
                    "aws_vpn_gateway.this"
                  ]
                },
                "description": "The ARN of the VPN Gateway"
              },
              "vgw_id": {
                "expression": {
                  "references": [
                    "aws_vpn_gateway.this",
                    "aws_vpn_gateway_attachment.this"
                  ]
                },
                "description": "The ID of the VPN Gateway"
              },
              "vpc_arn": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The ARN of the VPC"
              },
              "vpc_cidr_block": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The CIDR block of the VPC"
              },
              "vpc_enable_dns_hostnames": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "Whether or not the VPC has DNS hostname support"
              },
              "vpc_enable_dns_support": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "Whether or not the VPC has DNS support"
              },
              "vpc_flow_log_cloudwatch_iam_role_arn": {
                "expression": {
                  "references": [
                    "local.flow_log_iam_role_arn"
                  ]
                },
                "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group"
              },
              "vpc_flow_log_destination_arn": {
                "expression": {
                  "references": [
                    "local.flow_log_destination_arn"
                  ]
                },
                "description": "The ARN of the destination for VPC Flow Logs"
              },
              "vpc_flow_log_destination_type": {
                "expression": {
                  "references": [
                    "var.flow_log_destination_type"
                  ]
                },
                "description": "The type of the destination for VPC Flow Logs"
              },
              "vpc_flow_log_id": {
                "expression": {
                  "references": [
                    "aws_flow_log.this"
                  ]
                },
                "description": "The ID of the Flow Log resource"
              },
              "vpc_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the VPC"
              },
              "vpc_instance_tenancy": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "Tenancy of instances spin up within VPC"
              },
              "vpc_ipv6_association_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The association ID for the IPv6 CIDR block"
              },
              "vpc_ipv6_cidr_block": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The IPv6 CIDR block"
              },
              "vpc_main_route_table_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the main route table associated with this VPC"
              },
              "vpc_owner_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the AWS account that owns the VPC"
              },
              "vpc_secondary_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_vpc_ipv4_cidr_block_association.this"
                  ]
                },
                "description": "List of secondary CIDR blocks of the VPC"
              }
            },
            "resources": [
              {
                "address": "aws_cloudwatch_log_group.flow_log",
                "mode": "managed",
                "type": "aws_cloudwatch_log_group",
                "name": "flow_log",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "kms_key_id": {
                    "references": [
                      "var.flow_log_cloudwatch_log_group_kms_key_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.flow_log_cloudwatch_log_group_name_prefix",
                      "local.vpc_id"
                    ]
                  },
                  "retention_in_days": {
                    "references": [
                      "var.flow_log_cloudwatch_log_group_retention_in_days"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.vpc_flow_log_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_log_group"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/vpc-flow-logs.tf",
                  "StartLine": 34,
                  "EndLine": 42
                }
              },
              {
                "address": "aws_customer_gateway.this",
                "mode": "managed",
                "type": "aws_customer_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "bgp_asn": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "ip_address": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "each.key",
                      "var.tags",
                      "var.customer_gateway_tags"
                    ]
                  },
                  "type": {
                    "constant_value": "ipsec.1"
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.customer_gateways"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1215,
                  "EndLine": 1229
                }
              },
              {
                "address": "aws_db_subnet_group.database",
                "mode": "managed",
                "type": "aws_db_subnet_group",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.database_subnet_group_name",
                      "var.name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.database"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.database_subnet_group_name",
                      "var.name",
                      "var.tags",
                      "var.database_subnet_group_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_subnets",
                    "var.create_database_subnet_group"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 481,
                  "EndLine": 495
                }
              },
              {
                "address": "aws_default_network_acl.this",
                "mode": "managed",
                "type": "aws_default_network_acl",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "default_network_acl_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.public",
                      "aws_subnet.private",
                      "aws_subnet.intra",
                      "aws_subnet.database",
                      "aws_subnet.redshift",
                      "aws_subnet.elasticache",
                      "aws_subnet.outpost",
                      "aws_network_acl.public",
                      "aws_network_acl.private",
                      "aws_network_acl.intra",
                      "aws_network_acl.database",
                      "aws_network_acl.redshift",
                      "aws_network_acl.elasticache",
                      "aws_network_acl.outpost"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.default_network_acl_name",
                      "var.tags",
                      "var.default_network_acl_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.manage_default_network_acl"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 609,
                  "EndLine": 673
                }
              },
              {
                "address": "aws_default_route_table.default",
                "mode": "managed",
                "type": "aws_default_route_table",
                "name": "default",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "default_route_table_id": {
                    "references": [
                      "aws_vpc.this[0]"
                    ]
                  },
                  "propagating_vgws": {
                    "references": [
                      "var.default_route_table_propagating_vgws"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.default_route_table_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.manage_default_route_table"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 162,
                  "EndLine": 192
                }
              },
              {
                "address": "aws_default_security_group.this",
                "mode": "managed",
                "type": "aws_default_security_group",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.default_security_group_name",
                      "var.tags",
                      "var.default_security_group_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this[0]"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.manage_default_security_group"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 53,
                  "EndLine": 95
                }
              },
              {
                "address": "aws_default_vpc.this",
                "mode": "managed",
                "type": "aws_default_vpc",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "enable_classiclink": {
                    "references": [
                      "var.default_vpc_enable_classiclink"
                    ]
                  },
                  "enable_dns_hostnames": {
                    "references": [
                      "var.default_vpc_enable_dns_hostnames"
                    ]
                  },
                  "enable_dns_support": {
                    "references": [
                      "var.default_vpc_enable_dns_support"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.default_vpc_name",
                      "var.tags",
                      "var.default_vpc_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.manage_default_vpc"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1301,
                  "EndLine": 1315
                }
              },
              {
                "address": "aws_egress_only_internet_gateway.this",
                "mode": "managed",
                "type": "aws_egress_only_internet_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.igw_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_egress_only_igw",
                    "var.enable_ipv6",
                    "local.max_subnet_length"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 144,
                  "EndLine": 156
                }
              },
              {
                "address": "aws_eip.nat",
                "mode": "managed",
                "type": "aws_eip",
                "name": "nat",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.azs",
                      "var.single_nat_gateway",
                      "count.index",
                      "var.tags",
                      "var.nat_eip_tags"
                    ]
                  },
                  "vpc": {
                    "constant_value": true
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_nat_gateway",
                    "var.reuse_nat_ips",
                    "local.nat_gateway_count"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1065,
                  "EndLine": 1081
                }
              },
              {
                "address": "aws_elasticache_subnet_group.elasticache",
                "mode": "managed",
                "type": "aws_elasticache_subnet_group",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.elasticache"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_subnets",
                    "var.create_elasticache_subnet_group"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 569,
                  "EndLine": 575
                }
              },
              {
                "address": "aws_flow_log.this",
                "mode": "managed",
                "type": "aws_flow_log",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "iam_role_arn": {
                    "references": [
                      "local.flow_log_iam_role_arn"
                    ]
                  },
                  "log_destination": {
                    "references": [
                      "local.flow_log_destination_arn"
                    ]
                  },
                  "log_destination_type": {
                    "references": [
                      "var.flow_log_destination_type"
                    ]
                  },
                  "log_format": {
                    "references": [
                      "var.flow_log_log_format"
                    ]
                  },
                  "max_aggregation_interval": {
                    "references": [
                      "var.flow_log_max_aggregation_interval"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.vpc_flow_log_tags"
                    ]
                  },
                  "traffic_type": {
                    "references": [
                      "var.flow_log_traffic_type"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.enable_flow_log"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/vpc-flow-logs.tf",
                  "StartLine": 16,
                  "EndLine": 28
                }
              },
              {
                "address": "aws_iam_policy.vpc_flow_log_cloudwatch",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "name_prefix": {
                    "constant_value": "vpc-flow-log-to-cloudwatch-"
                  },
                  "policy": {
                    "references": [
                      "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/vpc-flow-logs.tf",
                  "StartLine": 76,
                  "EndLine": 81
                }
              },
              {
                "address": "aws_iam_role.vpc_flow_log_cloudwatch",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assume_role_policy": {
                    "references": [
                      "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]"
                    ]
                  },
                  "name_prefix": {
                    "constant_value": "vpc-flow-log-role-"
                  },
                  "permissions_boundary": {
                    "references": [
                      "var.vpc_flow_log_permissions_boundary"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.vpc_flow_log_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/vpc-flow-logs.tf",
                  "StartLine": 44,
                  "EndLine": 52
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.vpc_flow_log_cloudwatch[0]"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.vpc_flow_log_cloudwatch[0]"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/vpc-flow-logs.tf",
                  "StartLine": 69,
                  "EndLine": 74
                }
              },
              {
                "address": "aws_internet_gateway.this",
                "mode": "managed",
                "type": "aws_internet_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.igw_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_igw",
                    "var.public_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 130,
                  "EndLine": 142
                }
              },
              {
                "address": "aws_nat_gateway.this",
                "mode": "managed",
                "type": "aws_nat_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "allocation_id": {
                    "references": [
                      "local.nat_gateway_ips",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.public",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.azs",
                      "var.single_nat_gateway",
                      "count.index",
                      "var.tags",
                      "var.nat_gateway_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_nat_gateway",
                    "local.nat_gateway_count"
                  ]
                },
                "depends_on": [
                  "aws_internet_gateway.this"
                ],
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1083,
                  "EndLine": 1108
                }
              },
              {
                "address": "aws_network_acl.database",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.database"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.database_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.database_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_dedicated_network_acl",
                    "var.database_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 891,
                  "EndLine": 904
                }
              },
              {
                "address": "aws_network_acl.elasticache",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.elasticache"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.elasticache_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.elasticache_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_dedicated_network_acl",
                    "var.elasticache_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 997,
                  "EndLine": 1010
                }
              },
              {
                "address": "aws_network_acl.intra",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.intra"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.intra_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.intra_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_dedicated_network_acl",
                    "var.intra_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 838,
                  "EndLine": 851
                }
              },
              {
                "address": "aws_network_acl.outpost",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "outpost",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.outpost"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.outpost_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.outpost_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_dedicated_network_acl",
                    "var.outpost_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 785,
                  "EndLine": 798
                }
              },
              {
                "address": "aws_network_acl.private",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.private"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.private_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.private_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_dedicated_network_acl",
                    "var.private_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 732,
                  "EndLine": 745
                }
              },
              {
                "address": "aws_network_acl.public",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.public"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.public_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.public_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_dedicated_network_acl",
                    "var.public_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 679,
                  "EndLine": 692
                }
              },
              {
                "address": "aws_network_acl.redshift",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.redshift"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.redshift_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.redshift_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_dedicated_network_acl",
                    "var.redshift_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 944,
                  "EndLine": 957
                }
              },
              {
                "address": "aws_network_acl_rule.database_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "database_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.database[0]"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_dedicated_network_acl",
                    "var.database_subnets",
                    "var.database_inbound_acl_rules"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 906,
                  "EndLine": 921
                }
              },
              {
                "address": "aws_network_acl_rule.database_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "database_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.database[0]"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_dedicated_network_acl",
                    "var.database_subnets",
                    "var.database_outbound_acl_rules"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 923,
                  "EndLine": 938
                }
              },
              {
                "address": "aws_network_acl_rule.elasticache_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "elasticache_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.elasticache[0]"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_dedicated_network_acl",
                    "var.elasticache_subnets",
                    "var.elasticache_inbound_acl_rules"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1012,
                  "EndLine": 1027
                }
              },
              {
                "address": "aws_network_acl_rule.elasticache_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "elasticache_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.elasticache[0]"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_dedicated_network_acl",
                    "var.elasticache_subnets",
                    "var.elasticache_outbound_acl_rules"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1029,
                  "EndLine": 1044
                }
              },
              {
                "address": "aws_network_acl_rule.intra_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "intra_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.intra[0]"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_dedicated_network_acl",
                    "var.intra_subnets",
                    "var.intra_inbound_acl_rules"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 853,
                  "EndLine": 868
                }
              },
              {
                "address": "aws_network_acl_rule.intra_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "intra_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.intra[0]"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_dedicated_network_acl",
                    "var.intra_subnets",
                    "var.intra_outbound_acl_rules"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 870,
                  "EndLine": 885
                }
              },
              {
                "address": "aws_network_acl_rule.outpost_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "outpost_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.outpost[0]"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_dedicated_network_acl",
                    "var.outpost_subnets",
                    "var.outpost_inbound_acl_rules"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 800,
                  "EndLine": 815
                }
              },
              {
                "address": "aws_network_acl_rule.outpost_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "outpost_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.outpost[0]"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_dedicated_network_acl",
                    "var.outpost_subnets",
                    "var.outpost_outbound_acl_rules"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 817,
                  "EndLine": 832
                }
              },
              {
                "address": "aws_network_acl_rule.private_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "private_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.private[0]"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_dedicated_network_acl",
                    "var.private_subnets",
                    "var.private_inbound_acl_rules"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 747,
                  "EndLine": 762
                }
              },
              {
                "address": "aws_network_acl_rule.private_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "private_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.private[0]"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_dedicated_network_acl",
                    "var.private_subnets",
                    "var.private_outbound_acl_rules"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 764,
                  "EndLine": 779
                }
              },
              {
                "address": "aws_network_acl_rule.public_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "public_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.public[0]"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_dedicated_network_acl",
                    "var.public_subnets",
                    "var.public_inbound_acl_rules"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 694,
                  "EndLine": 709
                }
              },
              {
                "address": "aws_network_acl_rule.public_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "public_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.public[0]"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_dedicated_network_acl",
                    "var.public_subnets",
                    "var.public_outbound_acl_rules"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 711,
                  "EndLine": 726
                }
              },
              {
                "address": "aws_network_acl_rule.redshift_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "redshift_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.redshift[0]"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_dedicated_network_acl",
                    "var.redshift_subnets",
                    "var.redshift_inbound_acl_rules"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 959,
                  "EndLine": 974
                }
              },
              {
                "address": "aws_network_acl_rule.redshift_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "redshift_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.redshift[0]"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_dedicated_network_acl",
                    "var.redshift_subnets",
                    "var.redshift_outbound_acl_rules"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 976,
                  "EndLine": 991
                }
              },
              {
                "address": "aws_redshift_subnet_group.redshift",
                "mode": "managed",
                "type": "aws_redshift_subnet_group",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.redshift"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.redshift_subnet_group_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_subnets",
                    "var.create_redshift_subnet_group"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 525,
                  "EndLine": 539
                }
              },
              {
                "address": "aws_route.database_internet_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "database_internet_gateway",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "gateway_id": {
                    "references": [
                      "aws_internet_gateway.this[0]"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database[0]"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_igw",
                    "var.create_database_subnet_route_table",
                    "var.database_subnets",
                    "var.create_database_internet_gateway_route",
                    "var.create_database_nat_gateway_route"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 277,
                  "EndLine": 287
                }
              },
              {
                "address": "aws_route.database_ipv6_egress",
                "mode": "managed",
                "type": "aws_route",
                "name": "database_ipv6_egress",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_ipv6_cidr_block": {
                    "constant_value": "::/0"
                  },
                  "egress_only_gateway_id": {
                    "references": [
                      "aws_egress_only_internet_gateway.this[0]"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database[0]"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_egress_only_igw",
                    "var.enable_ipv6",
                    "var.create_database_subnet_route_table",
                    "var.database_subnets",
                    "var.create_database_internet_gateway_route"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 301,
                  "EndLine": 311
                }
              },
              {
                "address": "aws_route.database_nat_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "database_nat_gateway",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "nat_gateway_id": {
                    "references": [
                      "aws_nat_gateway.this",
                      "count.index"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database",
                      "count.index"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_database_subnet_route_table",
                    "var.database_subnets",
                    "var.create_database_internet_gateway_route",
                    "var.create_database_nat_gateway_route",
                    "var.enable_nat_gateway",
                    "var.single_nat_gateway",
                    "var.database_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 289,
                  "EndLine": 299
                }
              },
              {
                "address": "aws_route.private_ipv6_egress",
                "mode": "managed",
                "type": "aws_route",
                "name": "private_ipv6_egress",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_ipv6_cidr_block": {
                    "constant_value": "::/0"
                  },
                  "egress_only_gateway_id": {
                    "references": [
                      "aws_egress_only_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_egress_only_igw",
                    "var.enable_ipv6",
                    "var.private_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1122,
                  "EndLine": 1128
                }
              },
              {
                "address": "aws_route.private_nat_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "private_nat_gateway",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "nat_gateway_id": {
                    "references": [
                      "aws_nat_gateway.this",
                      "count.index"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "count.index"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_nat_gateway",
                    "local.nat_gateway_count"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1110,
                  "EndLine": 1120
                }
              },
              {
                "address": "aws_route.public_internet_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "public_internet_gateway",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "gateway_id": {
                    "references": [
                      "aws_internet_gateway.this[0]"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public[0]"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_igw",
                    "var.public_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 212,
                  "EndLine": 222
                }
              },
              {
                "address": "aws_route.public_internet_gateway_ipv6",
                "mode": "managed",
                "type": "aws_route",
                "name": "public_internet_gateway_ipv6",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_ipv6_cidr_block": {
                    "constant_value": "::/0"
                  },
                  "gateway_id": {
                    "references": [
                      "aws_internet_gateway.this[0]"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public[0]"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_igw",
                    "var.enable_ipv6",
                    "var.public_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 224,
                  "EndLine": 230
                }
              },
              {
                "address": "aws_route_table.database",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.single_nat_gateway",
                      "var.create_database_internet_gateway_route",
                      "var.name",
                      "var.database_subnet_suffix",
                      "var.database_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.database_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_database_subnet_route_table",
                    "var.database_subnets",
                    "var.single_nat_gateway",
                    "var.create_database_internet_gateway_route",
                    "var.database_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 259,
                  "EndLine": 275
                }
              },
              {
                "address": "aws_route_table.elasticache",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.elasticache_subnet_suffix",
                      "var.tags",
                      "var.elasticache_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_elasticache_subnet_route_table",
                    "var.elasticache_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 335,
                  "EndLine": 347
                }
              },
              {
                "address": "aws_route_table.intra",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.intra_subnet_suffix",
                      "var.tags",
                      "var.intra_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 353,
                  "EndLine": 365
                }
              },
              {
                "address": "aws_route_table.private",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.single_nat_gateway",
                      "var.name",
                      "var.private_subnet_suffix",
                      "var.private_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.private_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "local.max_subnet_length",
                    "local.nat_gateway_count"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 237,
                  "EndLine": 253
                }
              },
              {
                "address": "aws_route_table.public",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.public_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.public_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 198,
                  "EndLine": 210
                }
              },
              {
                "address": "aws_route_table.redshift",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.redshift_subnet_suffix",
                      "var.tags",
                      "var.redshift_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_redshift_subnet_route_table",
                    "var.redshift_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 317,
                  "EndLine": 329
                }
              },
              {
                "address": "aws_route_table_association.database",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database",
                      "aws_route_table.private",
                      "var.create_database_subnet_route_table",
                      "var.single_nat_gateway",
                      "var.create_database_internet_gateway_route",
                      "count.index",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.database",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_subnets",
                    "var.database_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1154,
                  "EndLine": 1162
                }
              },
              {
                "address": "aws_route_table_association.elasticache",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.elasticache",
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "var.create_elasticache_subnet_route_table",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.elasticache",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_subnets",
                    "var.elasticache_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1184,
                  "EndLine": 1195
                }
              },
              {
                "address": "aws_route_table_association.intra",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.intra"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.intra",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_subnets",
                    "var.intra_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1197,
                  "EndLine": 1202
                }
              },
              {
                "address": "aws_route_table_association.outpost",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "outpost",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.outpost",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_subnets",
                    "var.outpost_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1144,
                  "EndLine": 1152
                }
              },
              {
                "address": "aws_route_table_association.private",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.private",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_subnets",
                    "var.private_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1134,
                  "EndLine": 1142
                }
              },
              {
                "address": "aws_route_table_association.public",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public[0]"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.public",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_subnets",
                    "var.public_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1204,
                  "EndLine": 1209
                }
              },
              {
                "address": "aws_route_table_association.redshift",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.redshift",
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "var.create_redshift_subnet_route_table",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.redshift",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_subnets",
                    "var.enable_public_redshift",
                    "var.redshift_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1164,
                  "EndLine": 1172
                }
              },
              {
                "address": "aws_route_table_association.redshift_public",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "redshift_public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.redshift",
                      "aws_route_table.public",
                      "var.single_nat_gateway",
                      "var.create_redshift_subnet_route_table",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.redshift",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_subnets",
                    "var.enable_public_redshift",
                    "var.redshift_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1174,
                  "EndLine": 1182
                }
              },
              {
                "address": "aws_subnet.database",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.database_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.database_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.database_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.database_subnet_ipv6_prefixes",
                      "aws_vpc.this[0]",
                      "var.database_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.database_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.database_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_subnets",
                    "var.database_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 457,
                  "EndLine": 479
                }
              },
              {
                "address": "aws_subnet.elasticache",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.elasticache_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.elasticache_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.elasticache_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.elasticache_subnet_ipv6_prefixes",
                      "aws_vpc.this[0]",
                      "var.elasticache_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.elasticache_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.elasticache_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_subnets",
                    "var.elasticache_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 545,
                  "EndLine": 567
                }
              },
              {
                "address": "aws_subnet.intra",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.intra_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.intra_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.intra_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.intra_subnet_ipv6_prefixes",
                      "aws_vpc.this[0]",
                      "var.intra_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.intra_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.intra_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_subnets",
                    "var.intra_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 581,
                  "EndLine": 603
                }
              },
              {
                "address": "aws_subnet.outpost",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "outpost",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.outpost_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.outpost_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.outpost_az"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.outpost_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.outpost_subnet_ipv6_prefixes",
                      "aws_vpc.this[0]",
                      "var.outpost_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "outpost_arn": {
                    "references": [
                      "var.outpost_arn"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.outpost_subnet_suffix",
                      "var.name",
                      "var.outpost_az",
                      "var.tags",
                      "var.outpost_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_subnets",
                    "var.outpost_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 428,
                  "EndLine": 451
                }
              },
              {
                "address": "aws_subnet.private",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.private_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.private_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.private_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.private_subnet_ipv6_prefixes",
                      "aws_vpc.this[0]",
                      "var.private_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.private_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.private_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_subnets",
                    "var.private_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 400,
                  "EndLine": 422
                }
              },
              {
                "address": "aws_subnet.public",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.public_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.public_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.public_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.public_subnet_ipv6_prefixes",
                      "aws_vpc.this[0]",
                      "var.public_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "map_public_ip_on_launch": {
                    "references": [
                      "var.map_public_ip_on_launch"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.public_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.public_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_subnets",
                    "var.one_nat_gateway_per_az",
                    "var.public_subnets",
                    "var.azs",
                    "var.public_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 371,
                  "EndLine": 394
                }
              },
              {
                "address": "aws_subnet.redshift",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.redshift_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.redshift_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.redshift_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.redshift_subnet_ipv6_prefixes",
                      "aws_vpc.this[0]",
                      "var.redshift_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.redshift_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.redshift_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_subnets",
                    "var.redshift_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 501,
                  "EndLine": 523
                }
              },
              {
                "address": "aws_vpc.this",
                "mode": "managed",
                "type": "aws_vpc",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_generated_ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.cidr"
                    ]
                  },
                  "enable_classiclink": {
                    "references": [
                      "var.enable_classiclink"
                    ]
                  },
                  "enable_classiclink_dns_support": {
                    "references": [
                      "var.enable_classiclink_dns_support"
                    ]
                  },
                  "enable_dns_hostnames": {
                    "references": [
                      "var.enable_dns_hostnames"
                    ]
                  },
                  "enable_dns_support": {
                    "references": [
                      "var.enable_dns_support"
                    ]
                  },
                  "instance_tenancy": {
                    "references": [
                      "var.instance_tenancy"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.vpc_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 25,
                  "EndLine": 43
                }
              },
              {
                "address": "aws_vpc_dhcp_options.this",
                "mode": "managed",
                "type": "aws_vpc_dhcp_options",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "domain_name": {
                    "references": [
                      "var.dhcp_options_domain_name"
                    ]
                  },
                  "domain_name_servers": {
                    "references": [
                      "var.dhcp_options_domain_name_servers"
                    ]
                  },
                  "netbios_name_servers": {
                    "references": [
                      "var.dhcp_options_netbios_name_servers"
                    ]
                  },
                  "netbios_node_type": {
                    "references": [
                      "var.dhcp_options_netbios_node_type"
                    ]
                  },
                  "ntp_servers": {
                    "references": [
                      "var.dhcp_options_ntp_servers"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.dhcp_options_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_dhcp_options"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 101,
                  "EndLine": 117
                }
              },
              {
                "address": "aws_vpc_dhcp_options_association.this",
                "mode": "managed",
                "type": "aws_vpc_dhcp_options_association",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "dhcp_options_id": {
                    "references": [
                      "aws_vpc_dhcp_options.this[0]"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_dhcp_options"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 119,
                  "EndLine": 124
                }
              },
              {
                "address": "aws_vpc_ipv4_cidr_block_association.this",
                "mode": "managed",
                "type": "aws_vpc_ipv4_cidr_block_association",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.secondary_cidr_blocks",
                      "count.index"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this[0]"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.secondary_cidr_blocks",
                    "var.secondary_cidr_blocks"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 45,
                  "EndLine": 51
                }
              },
              {
                "address": "aws_vpn_gateway.this",
                "mode": "managed",
                "type": "aws_vpn_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "amazon_side_asn": {
                    "references": [
                      "var.amazon_side_asn"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.vpn_gateway_az"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.vpn_gateway_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_vpn_gateway"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1235,
                  "EndLine": 1249
                }
              },
              {
                "address": "aws_vpn_gateway_attachment.this",
                "mode": "managed",
                "type": "aws_vpn_gateway_attachment",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "var.vpn_gateway_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.vpn_gateway_id"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1251,
                  "EndLine": 1256
                }
              },
              {
                "address": "aws_vpn_gateway_route_propagation.intra",
                "mode": "managed",
                "type": "aws_vpn_gateway_route_propagation",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.intra",
                      "count.index"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "aws_vpn_gateway.this",
                      "aws_vpn_gateway_attachment.this",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.propagate_intra_route_tables_vgw",
                    "var.enable_vpn_gateway",
                    "var.vpn_gateway_id",
                    "var.intra_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1284,
                  "EndLine": 1295
                }
              },
              {
                "address": "aws_vpn_gateway_route_propagation.private",
                "mode": "managed",
                "type": "aws_vpn_gateway_route_propagation",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "count.index"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "aws_vpn_gateway.this",
                      "aws_vpn_gateway_attachment.this",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.propagate_private_route_tables_vgw",
                    "var.enable_vpn_gateway",
                    "var.vpn_gateway_id",
                    "var.private_subnets"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1271,
                  "EndLine": 1282
                }
              },
              {
                "address": "aws_vpn_gateway_route_propagation.public",
                "mode": "managed",
                "type": "aws_vpn_gateway_route_propagation",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public",
                      "count.index"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "aws_vpn_gateway.this",
                      "aws_vpn_gateway_attachment.this",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.propagate_public_route_tables_vgw",
                    "var.enable_vpn_gateway",
                    "var.vpn_gateway_id"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/main.tf",
                  "StartLine": 1258,
                  "EndLine": 1269
                }
              },
              {
                "address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "flow_log_cloudwatch_assume_role",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "sts:AssumeRole"
                        ]
                      },
                      "effect": {
                        "constant_value": "Allow"
                      },
                      "principals": [
                        {
                          "identifiers": {
                            "constant_value": [
                              "vpc-flow-logs.amazonaws.com"
                            ]
                          },
                          "type": {
                            "constant_value": "Service"
                          }
                        }
                      ]
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/vpc-flow-logs.tf",
                  "StartLine": 54,
                  "EndLine": 67
                }
              },
              {
                "address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents",
                          "logs:DescribeLogGroups",
                          "logs:DescribeLogStreams"
                        ]
                      },
                      "effect": {
                        "constant_value": "Allow"
                      },
                      "resources": {
                        "constant_value": [
                          "*"
                        ]
                      },
                      "sid": {
                        "constant_value": "AWSVPCFlowLogsPushToCloudWatch"
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                },
                "raw_data": {
                  "FileName": ".terraform/modules/vpc/vpc-flow-logs.tf",
                  "StartLine": 83,
                  "EndLine": 100
                }
              }
            ],
            "variables": {
              "amazon_side_asn": {
                "default": "64512",
                "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN."
              },
              "assign_ipv6_address_on_creation": {
                "default": false,
                "description": "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "azs": {
                "default": [],
                "description": "A list of availability zones names or ids in the region"
              },
              "cidr": {
                "default": "0.0.0.0/0",
                "description": "The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden"
              },
              "create_database_internet_gateway_route": {
                "default": false,
                "description": "Controls if an internet gateway route for public database access should be created"
              },
              "create_database_nat_gateway_route": {
                "default": false,
                "description": "Controls if a nat gateway route should be created to give internet access to the database subnets"
              },
              "create_database_subnet_group": {
                "default": true,
                "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)"
              },
              "create_database_subnet_route_table": {
                "default": false,
                "description": "Controls if separate route table for database should be created"
              },
              "create_egress_only_igw": {
                "default": true,
                "description": "Controls if an Egress Only Internet Gateway is created and its related routes."
              },
              "create_elasticache_subnet_group": {
                "default": true,
                "description": "Controls if elasticache subnet group should be created"
              },
              "create_elasticache_subnet_route_table": {
                "default": false,
                "description": "Controls if separate route table for elasticache should be created"
              },
              "create_flow_log_cloudwatch_iam_role": {
                "default": false,
                "description": "Whether to create IAM role for VPC Flow Logs"
              },
              "create_flow_log_cloudwatch_log_group": {
                "default": false,
                "description": "Whether to create CloudWatch log group for VPC Flow Logs"
              },
              "create_igw": {
                "default": true,
                "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them."
              },
              "create_redshift_subnet_group": {
                "default": true,
                "description": "Controls if redshift subnet group should be created"
              },
              "create_redshift_subnet_route_table": {
                "default": false,
                "description": "Controls if separate route table for redshift should be created"
              },
              "create_vpc": {
                "default": true,
                "description": "Controls if VPC should be created (it affects almost all resources)"
              },
              "customer_gateway_tags": {
                "default": {},
                "description": "Additional tags for the Customer Gateway"
              },
              "customer_gateways": {
                "default": {},
                "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)"
              },
              "database_acl_tags": {
                "default": {},
                "description": "Additional tags for the database subnets network ACL"
              },
              "database_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets"
              },
              "database_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Database subnets inbound network ACL rules"
              },
              "database_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Database subnets outbound network ACL rules"
              },
              "database_route_table_tags": {
                "default": {},
                "description": "Additional tags for the database route tables"
              },
              "database_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "database_subnet_group_name": {
                "default": null,
                "description": "Name of database subnet group"
              },
              "database_subnet_group_tags": {
                "default": {},
                "description": "Additional tags for the database subnet group"
              },
              "database_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "database_subnet_suffix": {
                "default": "db",
                "description": "Suffix to append to database subnets name"
              },
              "database_subnet_tags": {
                "default": {},
                "description": "Additional tags for the database subnets"
              },
              "database_subnets": {
                "default": [],
                "description": "A list of database subnets"
              },
              "default_network_acl_egress": {
                "default": [
                  {
                    "action": "allow",
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_no": "100",
                    "to_port": "0"
                  },
                  {
                    "action": "allow",
                    "from_port": "0",
                    "ipv6_cidr_block": "::/0",
                    "protocol": "-1",
                    "rule_no": "101",
                    "to_port": "0"
                  }
                ],
                "description": "List of maps of egress rules to set on the Default Network ACL"
              },
              "default_network_acl_ingress": {
                "default": [
                  {
                    "action": "allow",
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_no": "100",
                    "to_port": "0"
                  },
                  {
                    "action": "allow",
                    "from_port": "0",
                    "ipv6_cidr_block": "::/0",
                    "protocol": "-1",
                    "rule_no": "101",
                    "to_port": "0"
                  }
                ],
                "description": "List of maps of ingress rules to set on the Default Network ACL"
              },
              "default_network_acl_name": {
                "default": "",
                "description": "Name to be used on the Default Network ACL"
              },
              "default_network_acl_tags": {
                "default": {},
                "description": "Additional tags for the Default Network ACL"
              },
              "default_route_table_propagating_vgws": {
                "default": [],
                "description": "List of virtual gateways for propagation"
              },
              "default_route_table_routes": {
                "default": [],
                "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route"
              },
              "default_route_table_tags": {
                "default": {},
                "description": "Additional tags for the default route table"
              },
              "default_security_group_egress": {
                "default": null,
                "description": "List of maps of egress rules to set on the default security group"
              },
              "default_security_group_ingress": {
                "default": null,
                "description": "List of maps of ingress rules to set on the default security group"
              },
              "default_security_group_name": {
                "default": "default",
                "description": "Name to be used on the default security group"
              },
              "default_security_group_tags": {
                "default": {},
                "description": "Additional tags for the default security group"
              },
              "default_vpc_enable_classiclink": {
                "default": false,
                "description": "Should be true to enable ClassicLink in the Default VPC"
              },
              "default_vpc_enable_dns_hostnames": {
                "default": false,
                "description": "Should be true to enable DNS hostnames in the Default VPC"
              },
              "default_vpc_enable_dns_support": {
                "default": true,
                "description": "Should be true to enable DNS support in the Default VPC"
              },
              "default_vpc_name": {
                "default": "",
                "description": "Name to be used on the Default VPC"
              },
              "default_vpc_tags": {
                "default": {},
                "description": "Additional tags for the Default VPC"
              },
              "dhcp_options_domain_name": {
                "default": "",
                "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_domain_name_servers": {
                "default": [
                  "AmazonProvidedDNS"
                ],
                "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_netbios_name_servers": {
                "default": [],
                "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_netbios_node_type": {
                "default": "",
                "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_ntp_servers": {
                "default": [],
                "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_tags": {
                "default": {},
                "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)"
              },
              "elasticache_acl_tags": {
                "default": {},
                "description": "Additional tags for the elasticache subnets network ACL"
              },
              "elasticache_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets"
              },
              "elasticache_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Elasticache subnets inbound network ACL rules"
              },
              "elasticache_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Elasticache subnets outbound network ACL rules"
              },
              "elasticache_route_table_tags": {
                "default": {},
                "description": "Additional tags for the elasticache route tables"
              },
              "elasticache_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "elasticache_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "elasticache_subnet_suffix": {
                "default": "elasticache",
                "description": "Suffix to append to elasticache subnets name"
              },
              "elasticache_subnet_tags": {
                "default": {},
                "description": "Additional tags for the elasticache subnets"
              },
              "elasticache_subnets": {
                "default": [],
                "description": "A list of elasticache subnets"
              },
              "enable_classiclink": {
                "default": null,
                "description": "Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic."
              },
              "enable_classiclink_dns_support": {
                "default": null,
                "description": "Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic."
              },
              "enable_dhcp_options": {
                "default": false,
                "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type"
              },
              "enable_dns_hostnames": {
                "default": false,
                "description": "Should be true to enable DNS hostnames in the VPC"
              },
              "enable_dns_support": {
                "default": true,
                "description": "Should be true to enable DNS support in the VPC"
              },
              "enable_flow_log": {
                "default": false,
                "description": "Whether or not to enable VPC Flow Logs"
              },
              "enable_ipv6": {
                "default": false,
                "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block."
              },
              "enable_nat_gateway": {
                "default": false,
                "description": "Should be true if you want to provision NAT Gateways for each of your private networks"
              },
              "enable_public_redshift": {
                "default": false,
                "description": "Controls if redshift should have public routing table"
              },
              "enable_vpn_gateway": {
                "default": false,
                "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC"
              },
              "external_nat_ip_ids": {
                "default": [],
                "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)"
              },
              "external_nat_ips": {
                "default": [],
                "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)"
              },
              "flow_log_cloudwatch_iam_role_arn": {
                "default": "",
                "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided."
              },
              "flow_log_cloudwatch_log_group_kms_key_id": {
                "default": null,
                "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs."
              },
              "flow_log_cloudwatch_log_group_name_prefix": {
                "default": "/aws/vpc-flow-log/",
                "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs."
              },
              "flow_log_cloudwatch_log_group_retention_in_days": {
                "default": null,
                "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs."
              },
              "flow_log_destination_arn": {
                "default": "",
                "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided."
              },
              "flow_log_destination_type": {
                "default": "cloud-watch-logs",
                "description": "Type of flow log destination. Can be s3 or cloud-watch-logs."
              },
              "flow_log_log_format": {
                "default": null,
                "description": "The fields to include in the flow log record, in the order in which they should appear."
              },
              "flow_log_max_aggregation_interval": {
                "default": 600,
                "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds."
              },
              "flow_log_traffic_type": {
                "default": "ALL",
                "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL."
              },
              "igw_tags": {
                "default": {},
                "description": "Additional tags for the internet gateway"
              },
              "instance_tenancy": {
                "default": "default",
                "description": "A tenancy option for instances launched into the VPC"
              },
              "intra_acl_tags": {
                "default": {},
                "description": "Additional tags for the intra subnets network ACL"
              },
              "intra_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets"
              },
              "intra_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Intra subnets inbound network ACLs"
              },
              "intra_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Intra subnets outbound network ACLs"
              },
              "intra_route_table_tags": {
                "default": {},
                "description": "Additional tags for the intra route tables"
              },
              "intra_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "intra_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "intra_subnet_suffix": {
                "default": "intra",
                "description": "Suffix to append to intra subnets name"
              },
              "intra_subnet_tags": {
                "default": {},
                "description": "Additional tags for the intra subnets"
              },
              "intra_subnets": {
                "default": [],
                "description": "A list of intra subnets"
              },
              "manage_default_network_acl": {
                "default": false,
                "description": "Should be true to adopt and manage Default Network ACL"
              },
              "manage_default_route_table": {
                "default": false,
                "description": "Should be true to manage default route table"
              },
              "manage_default_security_group": {
                "default": false,
                "description": "Should be true to adopt and manage default security group"
              },
              "manage_default_vpc": {
                "default": false,
                "description": "Should be true to adopt and manage Default VPC"
              },
              "map_public_ip_on_launch": {
                "default": true,
                "description": "Should be false if you do not want to auto-assign public IP on launch"
              },
              "name": {
                "default": "",
                "description": "Name to be used on all the resources as identifier"
              },
              "nat_eip_tags": {
                "default": {},
                "description": "Additional tags for the NAT EIP"
              },
              "nat_gateway_tags": {
                "default": {},
                "description": "Additional tags for the NAT gateways"
              },
              "one_nat_gateway_per_az": {
                "default": false,
                "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`."
              },
              "outpost_acl_tags": {
                "default": {},
                "description": "Additional tags for the outpost subnets network ACL"
              },
              "outpost_arn": {
                "default": null,
                "description": "ARN of Outpost you want to create a subnet in."
              },
              "outpost_az": {
                "default": null,
                "description": "AZ where Outpost is anchored."
              },
              "outpost_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets"
              },
              "outpost_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Outpost subnets inbound network ACLs"
              },
              "outpost_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Outpost subnets outbound network ACLs"
              },
              "outpost_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on outpost subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "outpost_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "outpost_subnet_suffix": {
                "default": "outpost",
                "description": "Suffix to append to outpost subnets name"
              },
              "outpost_subnet_tags": {
                "default": {},
                "description": "Additional tags for the outpost subnets"
              },
              "outpost_subnets": {
                "default": [],
                "description": "A list of outpost subnets inside the VPC"
              },
              "private_acl_tags": {
                "default": {},
                "description": "Additional tags for the private subnets network ACL"
              },
              "private_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets"
              },
              "private_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Private subnets inbound network ACLs"
              },
              "private_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Private subnets outbound network ACLs"
              },
              "private_route_table_tags": {
                "default": {},
                "description": "Additional tags for the private route tables"
              },
              "private_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "private_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "private_subnet_suffix": {
                "default": "private",
                "description": "Suffix to append to private subnets name"
              },
              "private_subnet_tags": {
                "default": {},
                "description": "Additional tags for the private subnets"
              },
              "private_subnets": {
                "default": [],
                "description": "A list of private subnets inside the VPC"
              },
              "propagate_intra_route_tables_vgw": {
                "default": false,
                "description": "Should be true if you want route table propagation"
              },
              "propagate_private_route_tables_vgw": {
                "default": false,
                "description": "Should be true if you want route table propagation"
              },
              "propagate_public_route_tables_vgw": {
                "default": false,
                "description": "Should be true if you want route table propagation"
              },
              "public_acl_tags": {
                "default": {},
                "description": "Additional tags for the public subnets network ACL"
              },
              "public_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets"
              },
              "public_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Public subnets inbound network ACLs"
              },
              "public_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Public subnets outbound network ACLs"
              },
              "public_route_table_tags": {
                "default": {},
                "description": "Additional tags for the public route tables"
              },
              "public_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "public_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "public_subnet_suffix": {
                "default": "public",
                "description": "Suffix to append to public subnets name"
              },
              "public_subnet_tags": {
                "default": {},
                "description": "Additional tags for the public subnets"
              },
              "public_subnets": {
                "default": [],
                "description": "A list of public subnets inside the VPC"
              },
              "redshift_acl_tags": {
                "default": {},
                "description": "Additional tags for the redshift subnets network ACL"
              },
              "redshift_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets"
              },
              "redshift_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Redshift subnets inbound network ACL rules"
              },
              "redshift_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Redshift subnets outbound network ACL rules"
              },
              "redshift_route_table_tags": {
                "default": {},
                "description": "Additional tags for the redshift route tables"
              },
              "redshift_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "redshift_subnet_group_tags": {
                "default": {},
                "description": "Additional tags for the redshift subnet group"
              },
              "redshift_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "redshift_subnet_suffix": {
                "default": "redshift",
                "description": "Suffix to append to redshift subnets name"
              },
              "redshift_subnet_tags": {
                "default": {},
                "description": "Additional tags for the redshift subnets"
              },
              "redshift_subnets": {
                "default": [],
                "description": "A list of redshift subnets"
              },
              "reuse_nat_ips": {
                "default": false,
                "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable"
              },
              "secondary_cidr_blocks": {
                "default": [],
                "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool"
              },
              "single_nat_gateway": {
                "default": false,
                "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks"
              },
              "tags": {
                "default": {},
                "description": "A map of tags to add to all resources"
              },
              "vpc_flow_log_permissions_boundary": {
                "default": null,
                "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role"
              },
              "vpc_flow_log_tags": {
                "default": {},
                "description": "Additional tags for the VPC Flow Logs"
              },
              "vpc_tags": {
                "default": {},
                "description": "Additional tags for the VPC"
              },
              "vpn_gateway_az": {
                "default": null,
                "description": "The Availability Zone for the VPN Gateway"
              },
              "vpn_gateway_id": {
                "default": "",
                "description": "ID of VPN Gateway to attach to the VPC"
              },
              "vpn_gateway_tags": {
                "default": {},
                "description": "Additional tags for the VPN gateway"
              }
            }
          },
          "raw_data": {
            "FileName": "main.tf",
            "StartLine": 2,
            "EndLine": 15
          }
        }
      }
    }
  }
}
