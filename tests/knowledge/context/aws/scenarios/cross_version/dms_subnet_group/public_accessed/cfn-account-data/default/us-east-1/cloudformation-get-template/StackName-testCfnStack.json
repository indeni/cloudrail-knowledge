{
    "StagesAvailable": [
        "Original",
        "Processed"
    ],
    "TemplateBody": "AWSTemplateFormatVersion: \"2010-09-09\"\n\nResources:\n\n  NonDefaultVPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock: \"10.1.1.0/24\"  \n\n  NonDefaultSG:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: \"Allow all\"    \n      VpcId: !Ref NonDefaultVPC\n      SecurityGroupIngress:\n        - CidrIp: \"0.0.0.0/0\"\n          FromPort: 0\n          ToPort: 0\n          IpProtocol: \"-1\"\n      SecurityGroupEgress:\n        - CidrIp: \"0.0.0.0/0\"\n          FromPort: 0\n          ToPort: 0\n          IpProtocol: \"-1\"\n\n  NonDefaultSubnet1:\n    Type: AWS::EC2::Subnet\n    Properties:\n      AvailabilityZone: !Select [ 0, !GetAZs ]\n      VpcId: !Ref NonDefaultVPC\n      MapPublicIpOnLaunch: true\n      CidrBlock: \"10.1.1.128/25\"\n\n  NonDefaultSubnet2:\n    Type: AWS::EC2::Subnet\n    Properties:\n      AvailabilityZone: !Select [ 1, !GetAZs ]\n      VpcId: !Ref NonDefaultVPC\n      MapPublicIpOnLaunch: true\n      CidrBlock: \"10.1.1.0/25\"\n\n  Igw1:\n    Type: AWS::EC2::InternetGateway\n    Properties:\n      Tags:\n        - Key: \"Name\"\n          Value: \"main\"\n\n  Igw1Attachment:\n    Type: AWS::EC2::VPCGatewayAttachment\n    Properties:\n      VpcId: !Ref NonDefaultVPC\n      InternetGatewayId: !Ref Igw1\n\n  Rt1:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref NonDefaultVPC\n      Tags:\n        - Key: \"Name\"\n          Value: \"public-rtb\"\n\n  Rt1DefaultRoute:\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref Rt1\n      DestinationCidrBlock: \"0.0.0.0/0\"\n      GatewayId: !Ref Igw1\n\n  Assoc1:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      RouteTableId: !Ref Rt1\n      SubnetId: !Ref NonDefaultSubnet1\n\n  Assoc2:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      RouteTableId: !Ref Rt1\n      SubnetId: !Ref NonDefaultSubnet2\n\n  DMSSubnetGroup:\n    Type: AWS::DMS::ReplicationSubnetGroup\n    Properties:\n      ReplicationSubnetGroupDescription: \"Test replication subnet group\"\n      ReplicationSubnetGroupIdentifier: \"test-dms-replication-subnet-group-tf\"\n      SubnetIds:\n        - !Ref NonDefaultSubnet1\n        - !Ref NonDefaultSubnet2\n      Tags:\n        - Key: \"Name\"\n          Value: \"test\"\n\n  DMSInstance:\n    Type: AWS::DMS::ReplicationInstance\n    DependsOn:\n      - DmsVpcRole\n      - DmsCloudWatchLogsRole\n      - DmsAccessForEndpointRole\n    Properties:\n      AllocatedStorage: 20\n      AutoMinorVersionUpgrade: true\n      MultiAZ: true\n      PreferredMaintenanceWindow: \"sun:10:30-sun:14:30\"\n      PubliclyAccessible: true\n      ReplicationInstanceClass: \"dms.t2.micro\"\n      ReplicationInstanceIdentifier: \"test-dms-replication-instance-tf\"\n      ReplicationSubnetGroupIdentifier: !Ref DMSSubnetGroup\n      Tags:\n        - Key: \"Name\"\n          Value: \"test\"\n\n  DmsVpcRole:\n    Type: AWS::IAM::Role\n    Properties:\n      RoleName: \"dms-vpc-role\"\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n        - Effect: Allow\n          Principal:\n            Service:\n            - dms.amazonaws.com\n          Action: \"sts:AssumeRole\"\n      ManagedPolicyArns:\n        - \"arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole\"\n\n  DmsCloudWatchLogsRole:\n    Type: AWS::IAM::Role\n    Properties:\n      RoleName: \"dms-cloudwatch-logs-role\"\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n        - Effect: Allow\n          Principal:\n            Service:\n            - dms.amazonaws.com\n          Action: \"sts:AssumeRole\"\n      ManagedPolicyArns:\n        - \"arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole\"\n\n  DmsAccessForEndpointRole:\n    Type: AWS::IAM::Role\n    Properties:\n      RoleName: \"dms-access-for-endpoint\"\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n        - Effect: Allow\n          Principal:\n            Service:\n            - dms.amazonaws.com\n          Action: \"sts:AssumeRole\"\n      ManagedPolicyArns:\n        - \"arn:aws:iam::aws:policy/service-role/AmazonDMSRedshiftS3Role\""
}