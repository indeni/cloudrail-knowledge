{
    "StagesAvailable": [
        "Original",
        "Processed"
    ],
    "TemplateBody": "AWSTemplateFormatVersion: \"2010-09-09\"\n\nParameters:\n  LatestAmiId:\n    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\n    Default: \"/aws/service/canonical/ubuntu/server/18.04/stable/current/amd64/hvm/ebs-gp2/ami-id\"\n\nResources:\n  Vpc1:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock: \"10.10.0.0/16\"\n\n  PublicSubnet:\n    Type: AWS::EC2::Subnet\n    Properties:\n      AvailabilityZone: !Select [ 0, !GetAZs ]\n      VpcId: !Ref Vpc1\n      MapPublicIpOnLaunch: true\n      CidrBlock: \"10.10.10.0/24\"\n\n  PublicSubnetRtb:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref Vpc1\n\n  PublicRouteTableAssoc:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      RouteTableId: !Ref PublicSubnetRtb\n      SubnetId: !Ref PublicSubnet \n\n  PublicDefaultRoute:\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref PublicSubnetRtb\n      DestinationCidrBlock: \"0.0.0.0/0\"\n      GatewayId: !Ref Igw1\n\n  PrivateSubnet:\n    Type: AWS::EC2::Subnet\n    Properties:\n      AvailabilityZone: !Select [ 0, !GetAZs ]\n      VpcId: !Ref Vpc1\n      CidrBlock: \"10.10.11.0/24\"\n\n  PrivateSubnetRtb:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref Vpc1\n\n  PrivateRouteTableAssoc:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      RouteTableId: !Ref PrivateSubnetRtb\n      SubnetId: !Ref PrivateSubnet \n\n  Igw1:\n    Type: AWS::EC2::InternetGateway\n\n  Igw1Attachment:\n    Type: AWS::EC2::VPCGatewayAttachment\n    Properties:\n      VpcId: !Ref Vpc1\n      InternetGatewayId: !Ref Igw1\n\n  PublicInstance:\n    Type: AWS::EC2::Instance\n    Properties:\n      InstanceType: \"t3.micro\"\n      SubnetId: !Ref PublicSubnet\n      ImageId: !Ref LatestAmiId\n      IamInstanceProfile: !Ref Ec2WebServerProfile\n\n  PrivateInstance:\n    Type: AWS::EC2::Instance\n    Properties:\n      InstanceType: \"t3.micro\"\n      SubnetId: !Ref PrivateSubnet\n      ImageId: !Ref LatestAmiId\n      IamInstanceProfile: !Ref Ec2WebServerProfile\n\n  S3FullAccessRole:\n    Type: AWS::IAM::Role\n    Properties:\n      RoleName: \"s3-full-access-role\"\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n        - Effect: Allow\n          Principal:\n            AWS: \"*\"\n          Action:\n          - sts:AssumeRole\n\n  Ec2WebServerProfile:\n    Type: AWS::IAM::InstanceProfile\n    Properties:\n      InstanceProfileName: \"ec2-web-server-profile\"\n      Roles:\n        - !Ref S3FullAccessRole"
}