AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: "/aws/service/canonical/ubuntu/server/18.04/stable/current/amd64/hvm/ebs-gp2/ami-id"

Resources:
  Vpc1:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.10.0.0/16"

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs ]
      VpcId: !Ref Vpc1
      MapPublicIpOnLaunch: true
      CidrBlock: "10.10.10.0/24"

  PublicSubnetRtb:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc1

  PublicRouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnetRtb
      SubnetId: !Ref PublicSubnet 

  PublicDefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicSubnetRtb
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref Igw1

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs ]
      VpcId: !Ref Vpc1
      CidrBlock: "10.10.11.0/24"

  PrivateSubnetRtb:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc1

  PrivateRouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnetRtb
      SubnetId: !Ref PrivateSubnet 

  Igw1:
    Type: AWS::EC2::InternetGateway

  Igw1Attachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc1
      InternetGatewayId: !Ref Igw1

  PublicInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: "t3.micro"
      SubnetId: !Ref PublicSubnet
      ImageId: !Ref LatestAmiId
      IamInstanceProfile: !Ref Ec2WebServerProfile

  PrivateInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: "t3.micro"
      SubnetId: !Ref PrivateSubnet
      ImageId: !Ref LatestAmiId
      IamInstanceProfile: !Ref Ec2WebServerProfile

  S3FullAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "s3-full-access-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - sts:AssumeRole

  Ec2WebServerProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: "ec2-web-server-profile"
      Roles:
        - !Ref S3FullAccessRole